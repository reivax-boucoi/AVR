   1               		.file	"Led.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	tcolor
  12               	tcolor:
  13               	.LFB6:
  14               		.file 1 "Led.c"
   1:Led.c         **** #include "Led.h" 
   2:Led.c         **** 
   3:Led.c         **** static const uint8_t ledMap[11]={7,8,10,14,0,4,17,2,12,6,16};
   4:Led.c         **** 
   5:Led.c         **** 
   6:Led.c         **** Tcolor tcolor(uint8_t r,uint8_t g,uint8_t b){
  15               		.loc 1 6 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 762F      		mov r23,r22
  23               	.LVL1:
   7:Led.c         ****     Tcolor c={r,g,b};
   8:Led.c         ****     return c;
   9:Led.c         **** }
  24               		.loc 1 9 0
  25 0002 682F      		mov r22,r24
  26               	.LVL2:
  27 0004 842F      		mov r24,r20
  28               	.LVL3:
  29 0006 0895      		ret
  30               		.cfi_endproc
  31               	.LFE6:
  33               	.global	tcolorV
  35               	tcolorV:
  36               	.LFB7:
  10:Led.c         **** 
  11:Led.c         **** Tcolor tcolorV(uint32_t v){
  37               		.loc 1 11 0
  38               		.cfi_startproc
  39               	.LVL4:
  40 0008 0F93      		push r16
  41               	.LCFI0:
  42               		.cfi_def_cfa_offset 3
  43               		.cfi_offset 16, -2
  44 000a 1F93      		push r17
  45               	.LCFI1:
  46               		.cfi_def_cfa_offset 4
  47               		.cfi_offset 17, -3
  48               	/* prologue: function */
  49               	/* frame size = 0 */
  50               	/* stack size = 2 */
  51               	.L__stack_usage = 2
  52 000c DC01      		movw r26,r24
  53 000e CB01      		movw r24,r22
  54               	.LVL5:
  12:Led.c         ****     Tcolor c={(v>>16)&0xFF,(v>>8)&0xFF,v&0xFF};
  13:Led.c         ****     return c;
  55               		.loc 1 13 0
  56 0010 AD01      		movw r20,r26
  57 0012 6627      		clr r22
  58 0014 7727      		clr r23
  59 0016 092F      		mov r16,r25
  60 0018 1A2F      		mov r17,r26
  61 001a 2B2F      		mov r18,r27
  62 001c 3327      		clr r19
  63               	.LVL6:
  14:Led.c         **** }
  64               		.loc 1 14 0
  65 001e 642F      		mov r22,r20
  66               	.LVL7:
  67 0020 702F      		mov r23,r16
  68               	/* epilogue start */
  69 0022 1F91      		pop r17
  70 0024 0F91      		pop r16
  71 0026 0895      		ret
  72               		.cfi_endproc
  73               	.LFE7:
  75               	.global	ledInit
  77               	ledInit:
  78               	.LFB8:
  15:Led.c         **** 
  16:Led.c         **** void ledInit(Led* leds){
  79               		.loc 1 16 0
  80               		.cfi_startproc
  81               	.LVL8:
  82               	/* prologue: function */
  83               	/* frame size = 0 */
  84               	/* stack size = 0 */
  85               	.L__stack_usage = 0
  17:Led.c         ****     DDRA |= CLK|DATA|STROBE|LED;
  86               		.loc 1 17 0
  87 0028 2AB3      		in r18,0x1a
  88 002a 2F60      		ori r18,lo8(15)
  89 002c 2ABB      		out 0x1a,r18
  18:Led.c         ****     PORTA &= ~(CLK|DATA|STROBE|LED);
  90               		.loc 1 18 0
  91 002e 2BB3      		in r18,0x1b
  92 0030 207F      		andi r18,lo8(-16)
  93 0032 2BBB      		out 0x1b,r18
  94               	.LVL9:
  95 0034 FC01      		movw r30,r24
  96               	.LBB38:
  19:Led.c         ****     
  20:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
  97               		.loc 1 20 0
  98 0036 80E0      		ldi r24,0
  99               	.LVL10:
 100               	.L6:
  21:Led.c         ****         leds[i].row=i%2;//leds[0]=0, leds[1]=1
 101               		.loc 1 21 0
 102 0038 982F      		mov r25,r24
 103 003a 9170      		andi r25,lo8(1)
 104 003c 9183      		std Z+1,r25
  22:Led.c         ****         if(i<10){
 105               		.loc 1 22 0
 106 003e 8A30      		cpi r24,lo8(10)
 107 0040 00F4      		brsh .L4
  23:Led.c         ****             leds[i].col=i;//0-9
 108               		.loc 1 23 0
 109 0042 8083      		st Z,r24
 110 0044 00C0      		rjmp .L5
 111               	.L4:
  24:Led.c         ****         }else{
  25:Led.c         ****             leds[i].col=i-9;//1-9
 112               		.loc 1 25 0
 113 0046 97EF      		ldi r25,lo8(-9)
 114 0048 980F      		add r25,r24
 115 004a 9083      		st Z,r25
 116               	.L5:
  26:Led.c         ****         }
  27:Led.c         ****         leds[i].c.r=0;
 117               		.loc 1 27 0 discriminator 2
 118 004c 1282      		std Z+2,__zero_reg__
  28:Led.c         ****         leds[i].c.g=0;
 119               		.loc 1 28 0 discriminator 2
 120 004e 1382      		std Z+3,__zero_reg__
  29:Led.c         ****         leds[i].c.b=0;
 121               		.loc 1 29 0 discriminator 2
 122 0050 1482      		std Z+4,__zero_reg__
  20:Led.c         ****         leds[i].row=i%2;//leds[0]=0, leds[1]=1
 123               		.loc 1 20 0 discriminator 2
 124 0052 8F5F      		subi r24,lo8(-(1))
 125               	.LVL11:
 126 0054 3596      		adiw r30,5
 127 0056 8331      		cpi r24,lo8(19)
 128 0058 01F4      		brne .L6
 129               	/* epilogue start */
 130               	.LBE38:
  30:Led.c         ****     }
  31:Led.c         **** }
 131               		.loc 1 31 0
 132 005a 0895      		ret
 133               		.cfi_endproc
 134               	.LFE8:
 136               	.global	getColorByLed
 138               	getColorByLed:
 139               	.LFB9:
  32:Led.c         **** uint32_t getColorByLed(Led l){
 140               		.loc 1 32 0
 141               		.cfi_startproc
 142 005c CF93      		push r28
 143               	.LCFI2:
 144               		.cfi_def_cfa_offset 3
 145               		.cfi_offset 28, -2
 146 005e DF93      		push r29
 147               	.LCFI3:
 148               		.cfi_def_cfa_offset 4
 149               		.cfi_offset 29, -3
 150 0060 00D0      		rcall .
 151 0062 00D0      		rcall .
 152 0064 1F92      		push __zero_reg__
 153               	.LCFI4:
 154               		.cfi_def_cfa_offset 9
 155 0066 CDB7      		in r28,__SP_L__
 156 0068 DEB7      		in r29,__SP_H__
 157               	.LCFI5:
 158               		.cfi_def_cfa_register 28
 159               	/* prologue: function */
 160               	/* frame size = 5 */
 161               	/* stack size = 7 */
 162               	.L__stack_usage = 7
 163               	.LVL12:
 164 006a 272F      		mov r18,r23
 165               	.LVL13:
 166 006c 382F      		mov r19,r24
 167               	.LVL14:
  33:Led.c         ****     uint32_t d=0;
  34:Led.c         ****     if(l.row){
 168               		.loc 1 34 0
 169 006e 5523      		tst r21
 170 0070 01F0      		breq .L10
  35:Led.c         ****         if(l.c.r)d|=R2;
 171               		.loc 1 35 0
 172 0072 6623      		tst r22
 173 0074 01F0      		breq .L16
 174 0076 60E0      		ldi r22,0
 175 0078 70E4      		ldi r23,lo8(64)
 176 007a 80E0      		ldi r24,0
 177 007c 90E0      		ldi r25,0
 178               	.LVL15:
 179 007e 00C0      		rjmp .L11
 180               	.LVL16:
 181               	.L16:
  33:Led.c         ****     uint32_t d=0;
 182               		.loc 1 33 0
 183 0080 60E0      		ldi r22,0
 184 0082 70E0      		ldi r23,0
 185 0084 CB01      		movw r24,r22
 186               	.LVL17:
 187               	.L11:
  36:Led.c         ****         if(l.c.g)d|=G2;
 188               		.loc 1 36 0
 189 0086 2111      		cpse r18,__zero_reg__
 190               		.loc 1 36 0 is_stmt 0 discriminator 1
 191 0088 8460      		ori r24,4
 192               	.LVL18:
 193               	.L12:
  37:Led.c         ****         if(l.c.b)d|=B2;
 194               		.loc 1 37 0 is_stmt 1
 195 008a 3323      		tst r19
 196 008c 01F0      		breq .L13
 197               		.loc 1 37 0 is_stmt 0 discriminator 1
 198 008e 8160      		ori r24,1
 199               	.LVL19:
 200 0090 00C0      		rjmp .L13
 201               	.LVL20:
 202               	.L10:
  38:Led.c         ****     }else{
  39:Led.c         ****         if(l.c.r)d|=R1;
 203               		.loc 1 39 0 is_stmt 1
 204 0092 6623      		tst r22
 205 0094 01F0      		breq .L17
 206 0096 60E0      		ldi r22,0
 207 0098 70E8      		ldi r23,lo8(-128)
 208 009a 80E0      		ldi r24,0
 209 009c 90E0      		ldi r25,0
 210               	.LVL21:
 211 009e 00C0      		rjmp .L14
 212               	.LVL22:
 213               	.L17:
  33:Led.c         ****     if(l.row){
 214               		.loc 1 33 0
 215 00a0 60E0      		ldi r22,0
 216 00a2 70E0      		ldi r23,0
 217 00a4 CB01      		movw r24,r22
 218               	.LVL23:
 219               	.L14:
  40:Led.c         ****         if(l.c.g)d|=G1;
 220               		.loc 1 40 0
 221 00a6 2111      		cpse r18,__zero_reg__
 222               		.loc 1 40 0 is_stmt 0 discriminator 1
 223 00a8 8860      		ori r24,8
 224               	.LVL24:
 225               	.L15:
  41:Led.c         ****         if(l.c.b)d|=B1;
 226               		.loc 1 41 0 is_stmt 1
 227 00aa 3111      		cpse r19,__zero_reg__
 228               		.loc 1 41 0 is_stmt 0 discriminator 1
 229 00ac 8260      		ori r24,2
 230               	.LVL25:
 231               	.L13:
 232               	/* epilogue start */
  42:Led.c         ****     }
  43:Led.c         ****     return d;
  44:Led.c         **** }
 233               		.loc 1 44 0 is_stmt 1
 234 00ae 0F90      		pop __tmp_reg__
 235 00b0 0F90      		pop __tmp_reg__
 236 00b2 0F90      		pop __tmp_reg__
 237 00b4 0F90      		pop __tmp_reg__
 238 00b6 0F90      		pop __tmp_reg__
 239 00b8 DF91      		pop r29
 240 00ba CF91      		pop r28
 241 00bc 0895      		ret
 242               		.cfi_endproc
 243               	.LFE9:
 245               	.global	getDataByColor
 247               	getDataByColor:
 248               	.LFB10:
  45:Led.c         **** 
  46:Led.c         **** uint32_t getDataByColor(Tcolor c, uint8_t mode, Led* leds){
 249               		.loc 1 46 0
 250               		.cfi_startproc
 251               	.LVL26:
 252 00be EF92      		push r14
 253               	.LCFI6:
 254               		.cfi_def_cfa_offset 3
 255               		.cfi_offset 14, -2
 256 00c0 FF92      		push r15
 257               	.LCFI7:
 258               		.cfi_def_cfa_offset 4
 259               		.cfi_offset 15, -3
 260 00c2 0F93      		push r16
 261               	.LCFI8:
 262               		.cfi_def_cfa_offset 5
 263               		.cfi_offset 16, -4
 264 00c4 1F93      		push r17
 265               	.LCFI9:
 266               		.cfi_def_cfa_offset 6
 267               		.cfi_offset 17, -5
 268 00c6 CF93      		push r28
 269               	.LCFI10:
 270               		.cfi_def_cfa_offset 7
 271               		.cfi_offset 28, -6
 272 00c8 DF93      		push r29
 273               	.LCFI11:
 274               		.cfi_def_cfa_offset 8
 275               		.cfi_offset 29, -7
 276               	/* prologue: function */
 277               	/* frame size = 0 */
 278               	/* stack size = 6 */
 279               	.L__stack_usage = 6
 280 00ca 562F      		mov r21,r22
 281 00cc F72E      		mov r15,r23
 282 00ce E82E      		mov r14,r24
 283 00d0 F901      		movw r30,r18
 284               	.LVL27:
 285 00d2 D901      		movw r26,r18
 286 00d4 A15A      		subi r26,-95
 287 00d6 BF4F      		sbci r27,-1
  47:Led.c         ****     uint32_t data=0;
 288               		.loc 1 47 0
 289 00d8 60E0      		ldi r22,0
 290 00da 70E0      		ldi r23,0
 291 00dc CB01      		movw r24,r22
 292               	.LVL28:
 293               	.LBB39:
  48:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
  49:Led.c         ****         if(leds[i].row==mode){
  50:Led.c         ****             if((leds[i].c.r && c.r) || (leds[i].c.g && c.g) || (leds[i].c.b && c.b)){
  51:Led.c         ****                 data|=(1<<leds[i].col);
 294               		.loc 1 51 0
 295 00de C1E0      		ldi r28,lo8(1)
 296 00e0 D0E0      		ldi r29,0
 297               	.LVL29:
 298               	.L35:
  49:Led.c         ****             if((leds[i].c.r && c.r) || (leds[i].c.g && c.g) || (leds[i].c.b && c.b)){
 299               		.loc 1 49 0
 300 00e2 2181      		ldd r18,Z+1
 301 00e4 2413      		cpse r18,r20
 302 00e6 00C0      		rjmp .L31
  50:Led.c         ****                 data|=(1<<leds[i].col);
 303               		.loc 1 50 0
 304 00e8 2281      		ldd r18,Z+2
 305 00ea 2223      		tst r18
 306 00ec 01F0      		breq .L32
  50:Led.c         ****                 data|=(1<<leds[i].col);
 307               		.loc 1 50 0 is_stmt 0 discriminator 1
 308 00ee 5111      		cpse r21,__zero_reg__
 309 00f0 00C0      		rjmp .L33
 310               	.L32:
  50:Led.c         ****                 data|=(1<<leds[i].col);
 311               		.loc 1 50 0 discriminator 3
 312 00f2 2381      		ldd r18,Z+3
 313 00f4 2223      		tst r18
 314 00f6 01F0      		breq .L34
 315               	.LVL30:
  50:Led.c         ****                 data|=(1<<leds[i].col);
 316               		.loc 1 50 0 discriminator 4
 317 00f8 F110      		cpse r15,__zero_reg__
 318 00fa 00C0      		rjmp .L33
 319               	.L34:
  50:Led.c         ****                 data|=(1<<leds[i].col);
 320               		.loc 1 50 0 discriminator 6
 321 00fc 2481      		ldd r18,Z+4
 322 00fe 2223      		tst r18
 323 0100 01F0      		breq .L31
 324               	.LVL31:
  50:Led.c         ****                 data|=(1<<leds[i].col);
 325               		.loc 1 50 0 discriminator 7
 326 0102 EE20      		tst r14
 327 0104 01F0      		breq .L31
 328               	.L33:
 329               		.loc 1 51 0 is_stmt 1
 330 0106 8E01      		movw r16,r28
 331 0108 0080      		ld r0,Z
 332 010a 00C0      		rjmp 2f
 333               		1:
 334 010c 000F      		lsl r16
 335 010e 111F      		rol r17
 336               		2:
 337 0110 0A94      		dec r0
 338 0112 02F4      		brpl 1b
 339 0114 012E      		mov __tmp_reg__,r17
 340 0116 000C      		lsl r0
 341 0118 220B      		sbc r18,r18
 342 011a 330B      		sbc r19,r19
 343 011c 602B      		or r22,r16
 344 011e 712B      		or r23,r17
 345 0120 822B      		or r24,r18
 346 0122 932B      		or r25,r19
 347               	.LVL32:
 348               	.L31:
 349 0124 3596      		adiw r30,5
  48:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
 350               		.loc 1 48 0 discriminator 2
 351 0126 EA17      		cp r30,r26
 352 0128 FB07      		cpc r31,r27
 353 012a 01F4      		brne .L35
 354               	/* epilogue start */
 355               	.LBE39:
  52:Led.c         ****             }
  53:Led.c         ****         }
  54:Led.c         ****     }
  55:Led.c         ****     return data;
  56:Led.c         **** }
 356               		.loc 1 56 0
 357 012c DF91      		pop r29
 358 012e CF91      		pop r28
 359 0130 1F91      		pop r17
 360 0132 0F91      		pop r16
 361 0134 FF90      		pop r15
 362 0136 EF90      		pop r14
 363 0138 0895      		ret
 364               		.cfi_endproc
 365               	.LFE10:
 367               	.global	ledOff
 369               	ledOff:
 370               	.LFB11:
  57:Led.c         **** 
  58:Led.c         **** void ledOff(Led* l){
 371               		.loc 1 58 0
 372               		.cfi_startproc
 373               	.LVL33:
 374               	/* prologue: function */
 375               	/* frame size = 0 */
 376               	/* stack size = 0 */
 377               	.L__stack_usage = 0
 378 013a FC01      		movw r30,r24
  59:Led.c         ****     l->c.r=0;
 379               		.loc 1 59 0
 380 013c 1282      		std Z+2,__zero_reg__
  60:Led.c         ****     l->c.g=0;
 381               		.loc 1 60 0
 382 013e 1382      		std Z+3,__zero_reg__
  61:Led.c         ****     l->c.b=0;
 383               		.loc 1 61 0
 384 0140 1482      		std Z+4,__zero_reg__
 385 0142 0895      		ret
 386               		.cfi_endproc
 387               	.LFE11:
 389               	.global	ledOn
 391               	ledOn:
 392               	.LFB12:
  62:Led.c         **** }
  63:Led.c         **** void ledOn(Led* l){
 393               		.loc 1 63 0
 394               		.cfi_startproc
 395               	.LVL34:
 396               	/* prologue: function */
 397               	/* frame size = 0 */
 398               	/* stack size = 0 */
 399               	.L__stack_usage = 0
 400 0144 FC01      		movw r30,r24
  64:Led.c         ****     l->c.r=255;
 401               		.loc 1 64 0
 402 0146 8FEF      		ldi r24,lo8(-1)
 403               	.LVL35:
 404 0148 8283      		std Z+2,r24
  65:Led.c         ****     l->c.g=255;
 405               		.loc 1 65 0
 406 014a 8383      		std Z+3,r24
  66:Led.c         ****     l->c.b=255;
 407               		.loc 1 66 0
 408 014c 8483      		std Z+4,r24
 409 014e 0895      		ret
 410               		.cfi_endproc
 411               	.LFE12:
 413               	.global	ledOnC
 415               	ledOnC:
 416               	.LFB13:
  67:Led.c         **** }
  68:Led.c         **** 
  69:Led.c         **** void ledOnC(Led* l,Tcolor c){
 417               		.loc 1 69 0
 418               		.cfi_startproc
 419               	.LVL36:
 420               	/* prologue: function */
 421               	/* frame size = 0 */
 422               	/* stack size = 0 */
 423               	.L__stack_usage = 0
  70:Led.c         ****     l->c=c;   
 424               		.loc 1 70 0
 425 0150 FC01      		movw r30,r24
 426 0152 4283      		std Z+2,r20
 427 0154 5383      		std Z+3,r21
 428 0156 6483      		std Z+4,r22
 429 0158 0895      		ret
 430               		.cfi_endproc
 431               	.LFE13:
 433               	.global	ledOnV
 435               	ledOnV:
 436               	.LFB14:
  71:Led.c         **** }
  72:Led.c         **** 
  73:Led.c         **** void ledOnV(Led* l,uint32_t v){
 437               		.loc 1 73 0
 438               		.cfi_startproc
 439               	.LVL37:
 440               	/* prologue: function */
 441               	/* frame size = 0 */
 442               	/* stack size = 0 */
 443               	.L__stack_usage = 0
 444 015a FC01      		movw r30,r24
 445               	.LVL38:
  74:Led.c         ****     l->c=tcolorV(v);
 446               		.loc 1 74 0
 447 015c 6283      		std Z+2,r22
 448 015e 5383      		std Z+3,r21
 449 0160 4483      		std Z+4,r20
 450 0162 0895      		ret
 451               		.cfi_endproc
 452               	.LFE14:
 454               	.global	setLeds
 456               	setLeds:
 457               	.LFB15:
  75:Led.c         **** }
  76:Led.c         **** 
  77:Led.c         **** void setLeds(Ttime t,Led* l,Tcolor c){
 458               		.loc 1 77 0
 459               		.cfi_startproc
 460               	.LVL39:
 461 0164 6F92      		push r6
 462               	.LCFI12:
 463               		.cfi_def_cfa_offset 3
 464               		.cfi_offset 6, -2
 465 0166 7F92      		push r7
 466               	.LCFI13:
 467               		.cfi_def_cfa_offset 4
 468               		.cfi_offset 7, -3
 469 0168 8F92      		push r8
 470               	.LCFI14:
 471               		.cfi_def_cfa_offset 5
 472               		.cfi_offset 8, -4
 473 016a CF92      		push r12
 474               	.LCFI15:
 475               		.cfi_def_cfa_offset 6
 476               		.cfi_offset 12, -5
 477 016c DF92      		push r13
 478               	.LCFI16:
 479               		.cfi_def_cfa_offset 7
 480               		.cfi_offset 13, -6
 481 016e EF92      		push r14
 482               	.LCFI17:
 483               		.cfi_def_cfa_offset 8
 484               		.cfi_offset 14, -7
 485 0170 FF92      		push r15
 486               	.LCFI18:
 487               		.cfi_def_cfa_offset 9
 488               		.cfi_offset 15, -8
 489 0172 0F93      		push r16
 490               	.LCFI19:
 491               		.cfi_def_cfa_offset 10
 492               		.cfi_offset 16, -9
 493 0174 CF93      		push r28
 494               	.LCFI20:
 495               		.cfi_def_cfa_offset 11
 496               		.cfi_offset 28, -10
 497 0176 DF93      		push r29
 498               	.LCFI21:
 499               		.cfi_def_cfa_offset 12
 500               		.cfi_offset 29, -11
 501 0178 00D0      		rcall .
 502 017a 00D0      		rcall .
 503 017c 1F92      		push __zero_reg__
 504               	.LCFI22:
 505               		.cfi_def_cfa_offset 17
 506 017e CDB7      		in r28,__SP_L__
 507 0180 DEB7      		in r29,__SP_H__
 508               	.LCFI23:
 509               		.cfi_def_cfa_register 28
 510               	/* prologue: function */
 511               	/* frame size = 5 */
 512               	/* stack size = 15 */
 513               	.L__stack_usage = 15
 514 0182 6901      		movw r12,r18
 515 0184 3701      		movw r6,r14
 516 0186 802E      		mov r8,r16
 517               	.LVL40:
 518 0188 F901      		movw r30,r18
 519 018a C901      		movw r24,r18
 520 018c 815A      		subi r24,-95
 521 018e 9F4F      		sbci r25,-1
 522               	.LVL41:
 523               	.L54:
 524               	.LBB40:
 525               	.LBB41:
  59:Led.c         ****     l->c.g=0;
 526               		.loc 1 59 0 discriminator 2
 527 0190 1282      		std Z+2,__zero_reg__
  60:Led.c         ****     l->c.b=0;
 528               		.loc 1 60 0 discriminator 2
 529 0192 1382      		std Z+3,__zero_reg__
  61:Led.c         **** }
 530               		.loc 1 61 0 discriminator 2
 531 0194 1482      		std Z+4,__zero_reg__
 532               	.LVL42:
 533 0196 3596      		adiw r30,5
 534               	.LBE41:
 535               	.LBE40:
  78:Led.c         ****     uint8_t temp=0;
  79:Led.c         ****     for(;temp<NBLEDS;temp++){
 536               		.loc 1 79 0 discriminator 2
 537 0198 E817      		cp r30,r24
 538 019a F907      		cpc r31,r25
 539 019c 01F4      		brne .L54
 540               	.LVL43:
 541               	.LBB42:
 542               	.LBB43:
  70:Led.c         **** }
 543               		.loc 1 70 0
 544 019e F601      		movw r30,r12
 545 01a0 E65A      		subi r30,-90
 546 01a2 FF4F      		sbci r31,-1
 547               	.LVL44:
 548 01a4 6282      		std Z+2,r6
 549 01a6 7382      		std Z+3,r7
 550 01a8 8482      		std Z+4,r8
 551               	.LVL45:
 552               	.LBE43:
 553               	.LBE42:
  80:Led.c         ****         ledOff(&l[temp]);
  81:Led.c         ****     }
  82:Led.c         ****     ledOnC(&l[ILEST],c);
  83:Led.c         ****     
  84:Led.c         ****     temp=currentTime.hour;
 554               		.loc 1 84 0
 555 01aa 8091 0000 		lds r24,currentTime
 556               	.LVL46:
  85:Led.c         ****     if(currentTime.min>35){
 557               		.loc 1 85 0
 558 01ae 2091 0000 		lds r18,currentTime+1
 559 01b2 2432      		cpi r18,lo8(36)
 560 01b4 00F0      		brlo .L55
  86:Led.c         ****         temp++;
 561               		.loc 1 86 0
 562 01b6 8F5F      		subi r24,lo8(-(1))
 563               	.LVL47:
 564               	.L55:
  87:Led.c         ****     }
  88:Led.c         ****     temp=temp%12;
 565               		.loc 1 88 0
 566 01b8 6CE0      		ldi r22,lo8(12)
 567 01ba 00D0      		rcall __udivmodqi4
 568               	.LVL48:
  89:Led.c         ****     switch(temp){
 569               		.loc 1 89 0
 570 01bc 9111      		cpse r25,__zero_reg__
 571 01be 00C0      		rjmp .L65
 572               	.LVL49:
 573               	.LBB44:
 574               	.LBB45:
  70:Led.c         **** }
 575               		.loc 1 70 0
 576 01c0 F601      		movw r30,r12
 577 01c2 618A      		std Z+17,r6
 578 01c4 728A      		std Z+18,r7
 579 01c6 838A      		std Z+19,r8
 580 01c8 00C0      		rjmp .L58
 581               	.LVL50:
 582               	.L65:
 583               	.LBE45:
 584               	.LBE44:
  90:Led.c         ****         case 0 :
  91:Led.c         ****             ledOnC(&l[MINUIT],c);
  92:Led.c         ****             break;
  93:Led.c         ****         case 12 :
  94:Led.c         ****             ledOnC(&l[MIDI],c);
  95:Led.c         ****             break;
  96:Led.c         ****         default :
  97:Led.c         ****             ledOnC(&l[ledMap[(temp-1)]],c);
 585               		.loc 1 97 0
 586 01ca E92F      		mov r30,r25
 587 01cc F0E0      		ldi r31,0
 588 01ce E050      		subi r30,lo8(-(ledMap-1))
 589 01d0 F040      		sbci r31,hi8(-(ledMap-1))
 590 01d2 8081      		ld r24,Z
 591 01d4 90E0      		ldi r25,0
 592               	.LVL51:
 593 01d6 65E0      		ldi r22,lo8(5)
 594 01d8 70E0      		ldi r23,0
 595 01da 00D0      		rcall __mulhi3
 596 01dc 8C0D      		add r24,r12
 597 01de 9D1D      		adc r25,r13
 598               	.LVL52:
 599               	.LBB46:
 600               	.LBB47:
  70:Led.c         **** }
 601               		.loc 1 70 0
 602 01e0 FC01      		movw r30,r24
 603 01e2 6282      		std Z+2,r6
 604 01e4 7382      		std Z+3,r7
 605 01e6 8482      		std Z+4,r8
 606               	.LVL53:
 607               	.LBE47:
 608               	.LBE46:
 609               	.LBB48:
 610               	.LBB49:
 611 01e8 F601      		movw r30,r12
 612 01ea E55B      		subi r30,-75
 613 01ec FF4F      		sbci r31,-1
 614               	.LVL54:
 615 01ee 6282      		std Z+2,r6
 616 01f0 7382      		std Z+3,r7
 617 01f2 8482      		std Z+4,r8
 618               	.LVL55:
 619               	.L58:
 620               	.LBE49:
 621               	.LBE48:
  98:Led.c         ****             ledOnC(&l[HEURE],c);
  99:Led.c         ****             break;
 100:Led.c         ****     }
 101:Led.c         ****     
 102:Led.c         ****     temp = minquad(currentTime.min); 
 622               		.loc 1 102 0
 623 01f4 822F      		mov r24,r18
 624 01f6 00D0      		rcall minquad
 625               	.LVL56:
 103:Led.c         ****     if(temp > 30){
 626               		.loc 1 103 0
 627 01f8 8F31      		cpi r24,lo8(31)
 628 01fa 00F0      		brlo .L59
 629               	.LVL57:
 630               	.LBB50:
 631               	.LBB51:
  70:Led.c         **** }
 632               		.loc 1 70 0
 633 01fc F601      		movw r30,r12
 634 01fe 67A6      		std Z+47,r6
 635 0200 70AA      		std Z+48,r7
 636 0202 81AA      		std Z+49,r8
 637               	.LVL58:
 638               	.LBE51:
 639               	.LBE50:
 104:Led.c         ****         ledOnC(&l[MOINS],c);
 105:Led.c         ****         temp=60-temp;
 640               		.loc 1 105 0
 641 0204 9CE3      		ldi r25,lo8(60)
 642 0206 981B      		sub r25,r24
 643 0208 892F      		mov r24,r25
 644               	.LVL59:
 645               	.L59:
 106:Led.c         ****     }
 107:Led.c         ****     switch(temp){
 646               		.loc 1 107 0
 647 020a 8431      		cpi r24,lo8(20)
 648 020c 01F0      		breq .L61
 649 020e 8E31      		cpi r24,lo8(30)
 650 0210 01F0      		breq .L62
 651 0212 8A30      		cpi r24,lo8(10)
 652 0214 01F4      		brne .L53
 653               	.LVL60:
 654               	.LBB52:
 655               	.LBB53:
  70:Led.c         **** }
 656               		.loc 1 70 0
 657 0216 F601      		movw r30,r12
 658 0218 638E      		std Z+27,r6
 659 021a 748E      		std Z+28,r7
 660 021c 858E      		std Z+29,r8
 661 021e 00C0      		rjmp .L53
 662               	.LVL61:
 663               	.L61:
 664               	.LBE53:
 665               	.LBE52:
 666               	.LBB54:
 667               	.LBB55:
 668 0220 F601      		movw r30,r12
 669 0222 61AE      		std Z+57,r6
 670 0224 72AE      		std Z+58,r7
 671 0226 83AE      		std Z+59,r8
 672 0228 00C0      		rjmp .L53
 673               	.LVL62:
 674               	.L62:
 675               	.LBE55:
 676               	.LBE54:
 677               	.LBB56:
 678               	.LBB57:
 679 022a F601      		movw r30,r12
 680 022c 6782      		std Z+7,r6
 681 022e 7086      		std Z+8,r7
 682 0230 8186      		std Z+9,r8
 683               	.LVL63:
 684               	.L53:
 685               	/* epilogue start */
 686               	.LBE57:
 687               	.LBE56:
 108:Led.c         ****         case 10 :
 109:Led.c         ****             ledOnC(&l[DIX],c);
 110:Led.c         ****             break;
 111:Led.c         ****         case 20 :
 112:Led.c         ****             ledOnC(&l[VINGT],c);
 113:Led.c         ****             break;
 114:Led.c         ****         case 30 :
 115:Led.c         ****             ledOnC(&l[ETDEMIE],c);
 116:Led.c         ****             break;
 117:Led.c         ****     }
 118:Led.c         **** }
 688               		.loc 1 118 0
 689 0232 0F90      		pop __tmp_reg__
 690 0234 0F90      		pop __tmp_reg__
 691 0236 0F90      		pop __tmp_reg__
 692 0238 0F90      		pop __tmp_reg__
 693 023a 0F90      		pop __tmp_reg__
 694 023c DF91      		pop r29
 695 023e CF91      		pop r28
 696 0240 0F91      		pop r16
 697 0242 FF90      		pop r15
 698 0244 EF90      		pop r14
 699 0246 DF90      		pop r13
 700 0248 CF90      		pop r12
 701               	.LVL64:
 702 024a 8F90      		pop r8
 703 024c 7F90      		pop r7
 704 024e 6F90      		pop r6
 705               	.LVL65:
 706 0250 0895      		ret
 707               		.cfi_endproc
 708               	.LFE15:
 710               	.global	setLedsNb
 712               	setLedsNb:
 713               	.LFB16:
 119:Led.c         **** 
 120:Led.c         **** void setLedsNb(int8_t nb, Led* l, Tcolor c){
 714               		.loc 1 120 0
 715               		.cfi_startproc
 716               	.LVL66:
 717 0252 CF93      		push r28
 718               	.LCFI24:
 719               		.cfi_def_cfa_offset 3
 720               		.cfi_offset 28, -2
 721 0254 DF93      		push r29
 722               	.LCFI25:
 723               		.cfi_def_cfa_offset 4
 724               		.cfi_offset 29, -3
 725               	/* prologue: function */
 726               	/* frame size = 0 */
 727               	/* stack size = 2 */
 728               	.L__stack_usage = 2
 729 0256 E82F      		mov r30,r24
 730 0258 DB01      		movw r26,r22
 731               	.LVL67:
 732 025a EB01      		movw r28,r22
 733 025c CB01      		movw r24,r22
 734               	.LVL68:
 735 025e 815A      		subi r24,-95
 736 0260 9F4F      		sbci r25,-1
 737               	.LVL69:
 738               	.L67:
 739               	.LBB58:
 740               	.LBB59:
  59:Led.c         ****     l->c.g=0;
 741               		.loc 1 59 0 discriminator 2
 742 0262 1A82      		std Y+2,__zero_reg__
  60:Led.c         ****     l->c.b=0;
 743               		.loc 1 60 0 discriminator 2
 744 0264 1B82      		std Y+3,__zero_reg__
  61:Led.c         **** }
 745               		.loc 1 61 0 discriminator 2
 746 0266 1C82      		std Y+4,__zero_reg__
 747               	.LVL70:
 748 0268 2596      		adiw r28,5
 749               	.LBE59:
 750               	.LBE58:
 121:Led.c         ****     uint8_t i=0;
 122:Led.c         ****     for(;i<NBLEDS;i++){
 751               		.loc 1 122 0 discriminator 2
 752 026a 8C17      		cp r24,r28
 753 026c 9D07      		cpc r25,r29
 754 026e 01F4      		brne .L67
 123:Led.c         ****         ledOff(&l[i]);
 124:Led.c         ****     }
 125:Led.c         ****     if(nb < 0){
 755               		.loc 1 125 0
 756 0270 E7FF      		sbrs r30,7
 757 0272 00C0      		rjmp .L68
 758               	.LVL71:
 759               	.LBB60:
 760               	.LBB61:
  70:Led.c         **** }
 761               		.loc 1 70 0
 762 0274 9F96      		adiw r26,47
 763 0276 2D93      		st X+,r18
 764 0278 3D93      		st X+,r19
 765 027a 4C93      		st X,r20
 766 027c D197      		sbiw r26,47+2
 767               	.LVL72:
 768               	.LBE61:
 769               	.LBE60:
 126:Led.c         ****         ledOnC(&l[MOINS],c);
 127:Led.c         ****         nb=-nb;
 770               		.loc 1 127 0
 771 027e E195      		neg r30
 772               	.LVL73:
 773               	.L68:
 128:Led.c         ****     }
 129:Led.c         ****     if(nb>29){
 774               		.loc 1 129 0
 775 0280 EE31      		cpi r30,lo8(30)
 776 0282 04F0      		brlt .L69
 777               	.LVL74:
 778               	.LBB62:
 779               	.LBB63:
  70:Led.c         **** }
 780               		.loc 1 70 0
 781 0284 D996      		adiw r26,57
 782 0286 2D93      		st X+,r18
 783 0288 3D93      		st X+,r19
 784 028a 4C93      		st X,r20
 785 028c DB97      		sbiw r26,57+2
 786               	.LVL75:
 787               	.LBE63:
 788               	.LBE62:
 789               	.LBB64:
 790               	.LBB65:
 791 028e 5B96      		adiw r26,27
 792 0290 2D93      		st X+,r18
 793 0292 3D93      		st X+,r19
 794 0294 4C93      		st X,r20
 795 0296 5D97      		sbiw r26,27+2
 796               	.LVL76:
 797               	.LBE65:
 798               	.LBE64:
 130:Led.c         ****         ledOnC(&l[VINGT],c);
 131:Led.c         ****         ledOnC(&l[DIX],c);
 132:Led.c         ****         nb=nb-30;
 799               		.loc 1 132 0
 800 0298 EE51      		subi r30,lo8(-(-30))
 801               	.LVL77:
 802 029a 00C0      		rjmp .L70
 803               	.L69:
 133:Led.c         ****     }else if(nb>19){
 804               		.loc 1 133 0
 805 029c E431      		cpi r30,lo8(20)
 806 029e 04F0      		brlt .L71
 807               	.LVL78:
 808               	.LBB66:
 809               	.LBB67:
  70:Led.c         **** }
 810               		.loc 1 70 0
 811 02a0 D996      		adiw r26,57
 812 02a2 2D93      		st X+,r18
 813 02a4 3D93      		st X+,r19
 814 02a6 4C93      		st X,r20
 815 02a8 DB97      		sbiw r26,57+2
 816               	.LVL79:
 817               	.LBE67:
 818               	.LBE66:
 134:Led.c         ****         ledOnC(&l[VINGT],c);
 135:Led.c         ****         nb=nb-20;
 819               		.loc 1 135 0
 820 02aa E451      		subi r30,lo8(-(-20))
 821               	.LVL80:
 822 02ac 00C0      		rjmp .L70
 823               	.L71:
 136:Led.c         ****     }else if(nb>11){
 824               		.loc 1 136 0
 825 02ae EC30      		cpi r30,lo8(12)
 826 02b0 04F0      		brlt .L70
 827               	.LVL81:
 828               	.LBB68:
 829               	.LBB69:
  70:Led.c         **** }
 830               		.loc 1 70 0
 831 02b2 5B96      		adiw r26,27
 832 02b4 2D93      		st X+,r18
 833 02b6 3D93      		st X+,r19
 834 02b8 4C93      		st X,r20
 835 02ba 5D97      		sbiw r26,27+2
 836               	.LVL82:
 837               	.LBE69:
 838               	.LBE68:
 137:Led.c         ****         ledOnC(&l[DIX],c);
 138:Led.c         ****         nb=nb-10;
 839               		.loc 1 138 0
 840 02bc EA50      		subi r30,lo8(-(-10))
 841               	.LVL83:
 842               	.L70:
 139:Led.c         ****     }
 140:Led.c         ****     ledOnC(&l[ledMap[nb-1]],c);
 843               		.loc 1 140 0
 844 02be 0E2E      		mov __tmp_reg__,r30
 845 02c0 000C      		lsl r0
 846 02c2 FF0B      		sbc r31,r31
 847 02c4 E050      		subi r30,lo8(-(ledMap-1))
 848 02c6 F040      		sbci r31,hi8(-(ledMap-1))
 849               	.LVL84:
 850 02c8 8081      		ld r24,Z
 851 02ca 90E0      		ldi r25,0
 852 02cc 65E0      		ldi r22,lo8(5)
 853 02ce 70E0      		ldi r23,0
 854               	.LVL85:
 855 02d0 00D0      		rcall __mulhi3
 856 02d2 A80F      		add r26,r24
 857 02d4 B91F      		adc r27,r25
 858               	.LVL86:
 859               	.LBB70:
 860               	.LBB71:
  70:Led.c         **** }
 861               		.loc 1 70 0
 862 02d6 1296      		adiw r26,2
 863 02d8 2D93      		st X+,r18
 864 02da 3D93      		st X+,r19
 865 02dc 4C93      		st X,r20
 866               	.LVL87:
 867               	/* epilogue start */
 868               	.LBE71:
 869               	.LBE70:
 141:Led.c         **** }
 870               		.loc 1 141 0
 871 02de DF91      		pop r29
 872 02e0 CF91      		pop r28
 873 02e2 0895      		ret
 874               		.cfi_endproc
 875               	.LFE16:
 877               	.global	sendRawData
 879               	sendRawData:
 880               	.LFB17:
 142:Led.c         **** void sendRawData(uint32_t data){
 881               		.loc 1 142 0
 882               		.cfi_startproc
 883               	.LVL88:
 884 02e4 0F93      		push r16
 885               	.LCFI26:
 886               		.cfi_def_cfa_offset 3
 887               		.cfi_offset 16, -2
 888 02e6 1F93      		push r17
 889               	.LCFI27:
 890               		.cfi_def_cfa_offset 4
 891               		.cfi_offset 17, -3
 892               	/* prologue: function */
 893               	/* frame size = 0 */
 894               	/* stack size = 2 */
 895               	.L__stack_usage = 2
 143:Led.c         ****     PORTA &=~(STROBE|CLK);
 896               		.loc 1 143 0
 897 02e8 2BB3      		in r18,0x1b
 898 02ea 237F      		andi r18,lo8(-13)
 899 02ec 2BBB      		out 0x1b,r18
 900               	.LVL89:
 901 02ee 40E0      		ldi r20,0
 902 02f0 50E0      		ldi r21,0
 903               	.LVL90:
 904               	.L76:
 905               	.LBB72:
 144:Led.c         ****     for(uint8_t i=0;i<20;i++){
 145:Led.c         ****         if((data>>i) & 0x00000001){
 906               		.loc 1 145 0
 907 02f2 8B01      		movw r16,r22
 908 02f4 9C01      		movw r18,r24
 909 02f6 042E      		mov r0,r20
 910 02f8 00C0      		rjmp 2f
 911               		1:
 912 02fa 3695      		lsr r19
 913 02fc 2795      		ror r18
 914 02fe 1795      		ror r17
 915 0300 0795      		ror r16
 916               		2:
 917 0302 0A94      		dec r0
 918 0304 02F4      		brpl 1b
 919 0306 00FF      		sbrs r16,0
 920 0308 00C0      		rjmp .L74
 146:Led.c         ****             PORTA|=DATA;
 921               		.loc 1 146 0
 922 030a D99A      		sbi 0x1b,1
 923 030c 00C0      		rjmp .L75
 924               	.L74:
 147:Led.c         ****         }else{
 148:Led.c         ****             PORTA&=~DATA;
 925               		.loc 1 148 0
 926 030e D998      		cbi 0x1b,1
 927               	.L75:
 149:Led.c         ****         }
 150:Led.c         ****         PORTA|=CLK;
 928               		.loc 1 150 0 discriminator 2
 929 0310 DB9A      		sbi 0x1b,3
 151:Led.c         ****         PORTA&=~CLK;
 930               		.loc 1 151 0 discriminator 2
 931 0312 DB98      		cbi 0x1b,3
 932               	.LVL91:
 933 0314 4F5F      		subi r20,-1
 934 0316 5F4F      		sbci r21,-1
 935               	.LVL92:
 144:Led.c         ****         if((data>>i) & 0x00000001){
 936               		.loc 1 144 0 discriminator 2
 937 0318 4431      		cpi r20,20
 938 031a 5105      		cpc r21,__zero_reg__
 939 031c 01F4      		brne .L76
 940               	.LBE72:
 152:Led.c         ****     }
 153:Led.c         ****     PORTA|=STROBE;
 941               		.loc 1 153 0
 942 031e DA9A      		sbi 0x1b,2
 154:Led.c         ****     PORTA&=~STROBE;
 943               		.loc 1 154 0
 944 0320 DA98      		cbi 0x1b,2
 945               	/* epilogue start */
 155:Led.c         **** }
 946               		.loc 1 155 0
 947 0322 1F91      		pop r17
 948 0324 0F91      		pop r16
 949 0326 0895      		ret
 950               		.cfi_endproc
 951               	.LFE17:
 953               		.section	.rodata
 956               	ledMap:
 957 0000 07        		.byte	7
 958 0001 08        		.byte	8
 959 0002 0A        		.byte	10
 960 0003 0E        		.byte	14
 961 0004 00        		.byte	0
 962 0005 04        		.byte	4
 963 0006 11        		.byte	17
 964 0007 02        		.byte	2
 965 0008 0C        		.byte	12
 966 0009 06        		.byte	6
 967 000a 10        		.byte	16
 968               		.comm	currentColor,3,1
 969               		.comm	USI_I2C_Master_State,1,1
 970               		.comm	currentTime,5,1
 971               		.text
 972               	.Letext0:
 973               		.file 2 "/usr/lib/avr/include/stdint.h"
 974               		.file 3 "RTC.h"
 975               		.file 4 "Led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Led.c
     /tmp/cclLhJx0.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cclLhJx0.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cclLhJx0.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cclLhJx0.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cclLhJx0.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cclLhJx0.s:12     .text:0000000000000000 tcolor
     /tmp/cclLhJx0.s:35     .text:0000000000000008 tcolorV
     /tmp/cclLhJx0.s:77     .text:0000000000000028 ledInit
     /tmp/cclLhJx0.s:138    .text:000000000000005c getColorByLed
     /tmp/cclLhJx0.s:247    .text:00000000000000be getDataByColor
     /tmp/cclLhJx0.s:369    .text:000000000000013a ledOff
     /tmp/cclLhJx0.s:391    .text:0000000000000144 ledOn
     /tmp/cclLhJx0.s:415    .text:0000000000000150 ledOnC
     /tmp/cclLhJx0.s:435    .text:000000000000015a ledOnV
     /tmp/cclLhJx0.s:456    .text:0000000000000164 setLeds
                            *COM*:0000000000000005 currentTime
     /tmp/cclLhJx0.s:956    .rodata:0000000000000000 ledMap
     /tmp/cclLhJx0.s:712    .text:0000000000000252 setLedsNb
     /tmp/cclLhJx0.s:879    .text:00000000000002e4 sendRawData
                            *COM*:0000000000000003 currentColor
                            *COM*:0000000000000001 USI_I2C_Master_State

UNDEFINED SYMBOLS
__udivmodqi4
__mulhi3
minquad
__do_copy_data
__do_clear_bss
