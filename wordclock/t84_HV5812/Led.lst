   1               		.file	"Led.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	tcolor
  12               	tcolor:
  13               	.LFB6:
  14               		.file 1 "Led.c"
   1:Led.c         **** #include "Led.h" 
   2:Led.c         **** 
   3:Led.c         **** static const uint8_t ledMap[11]={7,8,10,14,0,4,17,2,12,6,16};
   4:Led.c         **** 
   5:Led.c         **** 
   6:Led.c         **** Tcolor tcolor(uint8_t r,uint8_t g,uint8_t b){
  15               		.loc 1 6 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 762F      		mov r23,r22
  23               	.LVL1:
   7:Led.c         ****     Tcolor c={r,g,b};
   8:Led.c         ****     return c;
   9:Led.c         **** }
  24               		.loc 1 9 0
  25 0002 682F      		mov r22,r24
  26               	.LVL2:
  27 0004 842F      		mov r24,r20
  28               	.LVL3:
  29 0006 0895      		ret
  30               		.cfi_endproc
  31               	.LFE6:
  33               	.global	tcolorV
  35               	tcolorV:
  36               	.LFB7:
  10:Led.c         **** 
  11:Led.c         **** Tcolor tcolorV(uint32_t v){
  37               		.loc 1 11 0
  38               		.cfi_startproc
  39               	.LVL4:
  40 0008 0F93      		push r16
  41               	.LCFI0:
  42               		.cfi_def_cfa_offset 3
  43               		.cfi_offset 16, -2
  44 000a 1F93      		push r17
  45               	.LCFI1:
  46               		.cfi_def_cfa_offset 4
  47               		.cfi_offset 17, -3
  48               	/* prologue: function */
  49               	/* frame size = 0 */
  50               	/* stack size = 2 */
  51               	.L__stack_usage = 2
  52 000c DC01      		movw r26,r24
  53 000e CB01      		movw r24,r22
  54               	.LVL5:
  12:Led.c         ****     Tcolor c={(v>>16)&0xFF,(v>>8)&0xFF,v&0xFF};
  13:Led.c         ****     return c;
  55               		.loc 1 13 0
  56 0010 AD01      		movw r20,r26
  57 0012 6627      		clr r22
  58 0014 7727      		clr r23
  59 0016 092F      		mov r16,r25
  60 0018 1A2F      		mov r17,r26
  61 001a 2B2F      		mov r18,r27
  62 001c 3327      		clr r19
  63               	.LVL6:
  14:Led.c         **** }
  64               		.loc 1 14 0
  65 001e 642F      		mov r22,r20
  66               	.LVL7:
  67 0020 702F      		mov r23,r16
  68               	/* epilogue start */
  69 0022 1F91      		pop r17
  70 0024 0F91      		pop r16
  71 0026 0895      		ret
  72               		.cfi_endproc
  73               	.LFE7:
  75               	.global	ledInit
  77               	ledInit:
  78               	.LFB8:
  15:Led.c         **** 
  16:Led.c         **** void ledInit(Led* leds){
  79               		.loc 1 16 0
  80               		.cfi_startproc
  81               	.LVL8:
  82               	/* prologue: function */
  83               	/* frame size = 0 */
  84               	/* stack size = 0 */
  85               	.L__stack_usage = 0
  17:Led.c         ****     DDRA |= CLK|DATA|STROBE|LED;
  86               		.loc 1 17 0
  87 0028 2AB3      		in r18,0x1a
  88 002a 2F60      		ori r18,lo8(15)
  89 002c 2ABB      		out 0x1a,r18
  18:Led.c         ****     PORTA &= ~(CLK|DATA|STROBE|LED);
  90               		.loc 1 18 0
  91 002e 2BB3      		in r18,0x1b
  92 0030 207F      		andi r18,lo8(-16)
  93 0032 2BBB      		out 0x1b,r18
  94               	.LVL9:
  95 0034 FC01      		movw r30,r24
  96               	.LBB42:
  19:Led.c         ****     
  20:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
  97               		.loc 1 20 0
  98 0036 80E0      		ldi r24,0
  99               	.LVL10:
 100               	.L6:
  21:Led.c         ****         leds[i].row=i%2;//leds[0]=0, leds[1]=1
 101               		.loc 1 21 0
 102 0038 982F      		mov r25,r24
 103 003a 9170      		andi r25,lo8(1)
 104 003c 9183      		std Z+1,r25
  22:Led.c         ****         if(i<10){
 105               		.loc 1 22 0
 106 003e 8A30      		cpi r24,lo8(10)
 107 0040 00F4      		brsh .L4
  23:Led.c         ****             leds[i].col=i;//0-9
 108               		.loc 1 23 0
 109 0042 8083      		st Z,r24
 110 0044 00C0      		rjmp .L5
 111               	.L4:
  24:Led.c         ****         }else{
  25:Led.c         ****             leds[i].col=i-9;//1-9
 112               		.loc 1 25 0
 113 0046 97EF      		ldi r25,lo8(-9)
 114 0048 980F      		add r25,r24
 115 004a 9083      		st Z,r25
 116               	.L5:
  26:Led.c         ****         }
  27:Led.c         ****         leds[i].c.r=0;
 117               		.loc 1 27 0 discriminator 2
 118 004c 1282      		std Z+2,__zero_reg__
  28:Led.c         ****         leds[i].c.g=0;
 119               		.loc 1 28 0 discriminator 2
 120 004e 1382      		std Z+3,__zero_reg__
  29:Led.c         ****         leds[i].c.b=0;
 121               		.loc 1 29 0 discriminator 2
 122 0050 1482      		std Z+4,__zero_reg__
  20:Led.c         ****         leds[i].row=i%2;//leds[0]=0, leds[1]=1
 123               		.loc 1 20 0 discriminator 2
 124 0052 8F5F      		subi r24,lo8(-(1))
 125               	.LVL11:
 126 0054 3596      		adiw r30,5
 127 0056 8331      		cpi r24,lo8(19)
 128 0058 01F4      		brne .L6
 129               	/* epilogue start */
 130               	.LBE42:
  30:Led.c         ****     }
  31:Led.c         **** }
 131               		.loc 1 31 0
 132 005a 0895      		ret
 133               		.cfi_endproc
 134               	.LFE8:
 136               	.global	getColorByLed
 138               	getColorByLed:
 139               	.LFB9:
  32:Led.c         **** uint32_t getColorByLed(Led l){
 140               		.loc 1 32 0
 141               		.cfi_startproc
 142 005c CF93      		push r28
 143               	.LCFI2:
 144               		.cfi_def_cfa_offset 3
 145               		.cfi_offset 28, -2
 146 005e DF93      		push r29
 147               	.LCFI3:
 148               		.cfi_def_cfa_offset 4
 149               		.cfi_offset 29, -3
 150 0060 00D0      		rcall .
 151 0062 00D0      		rcall .
 152 0064 1F92      		push __zero_reg__
 153               	.LCFI4:
 154               		.cfi_def_cfa_offset 9
 155 0066 CDB7      		in r28,__SP_L__
 156 0068 DEB7      		in r29,__SP_H__
 157               	.LCFI5:
 158               		.cfi_def_cfa_register 28
 159               	/* prologue: function */
 160               	/* frame size = 5 */
 161               	/* stack size = 7 */
 162               	.L__stack_usage = 7
 163               	.LVL12:
 164 006a 272F      		mov r18,r23
 165               	.LVL13:
 166 006c 382F      		mov r19,r24
 167               	.LVL14:
  33:Led.c         ****     uint32_t d=0;
  34:Led.c         ****     if(l.row){
 168               		.loc 1 34 0
 169 006e 5523      		tst r21
 170 0070 01F0      		breq .L10
  35:Led.c         ****         if(l.c.r)d|=R2;
 171               		.loc 1 35 0
 172 0072 6623      		tst r22
 173 0074 01F0      		breq .L16
 174 0076 60E0      		ldi r22,0
 175 0078 70E4      		ldi r23,lo8(64)
 176 007a 80E0      		ldi r24,0
 177 007c 90E0      		ldi r25,0
 178               	.LVL15:
 179 007e 00C0      		rjmp .L11
 180               	.LVL16:
 181               	.L16:
  33:Led.c         ****     uint32_t d=0;
 182               		.loc 1 33 0
 183 0080 60E0      		ldi r22,0
 184 0082 70E0      		ldi r23,0
 185 0084 CB01      		movw r24,r22
 186               	.LVL17:
 187               	.L11:
  36:Led.c         ****         if(l.c.g)d|=G2;
 188               		.loc 1 36 0
 189 0086 2111      		cpse r18,__zero_reg__
 190               		.loc 1 36 0 is_stmt 0 discriminator 1
 191 0088 8460      		ori r24,4
 192               	.LVL18:
 193               	.L12:
  37:Led.c         ****         if(l.c.b)d|=B2;
 194               		.loc 1 37 0 is_stmt 1
 195 008a 3323      		tst r19
 196 008c 01F0      		breq .L13
 197               		.loc 1 37 0 is_stmt 0 discriminator 1
 198 008e 8160      		ori r24,1
 199               	.LVL19:
 200 0090 00C0      		rjmp .L13
 201               	.LVL20:
 202               	.L10:
  38:Led.c         ****     }else{
  39:Led.c         ****         if(l.c.r)d|=R1;
 203               		.loc 1 39 0 is_stmt 1
 204 0092 6623      		tst r22
 205 0094 01F0      		breq .L17
 206 0096 60E0      		ldi r22,0
 207 0098 70E8      		ldi r23,lo8(-128)
 208 009a 80E0      		ldi r24,0
 209 009c 90E0      		ldi r25,0
 210               	.LVL21:
 211 009e 00C0      		rjmp .L14
 212               	.LVL22:
 213               	.L17:
  33:Led.c         ****     if(l.row){
 214               		.loc 1 33 0
 215 00a0 60E0      		ldi r22,0
 216 00a2 70E0      		ldi r23,0
 217 00a4 CB01      		movw r24,r22
 218               	.LVL23:
 219               	.L14:
  40:Led.c         ****         if(l.c.g)d|=G1;
 220               		.loc 1 40 0
 221 00a6 2111      		cpse r18,__zero_reg__
 222               		.loc 1 40 0 is_stmt 0 discriminator 1
 223 00a8 8860      		ori r24,8
 224               	.LVL24:
 225               	.L15:
  41:Led.c         ****         if(l.c.b)d|=B1;
 226               		.loc 1 41 0 is_stmt 1
 227 00aa 3111      		cpse r19,__zero_reg__
 228               		.loc 1 41 0 is_stmt 0 discriminator 1
 229 00ac 8260      		ori r24,2
 230               	.LVL25:
 231               	.L13:
 232               	/* epilogue start */
  42:Led.c         ****     }
  43:Led.c         ****     return d;
  44:Led.c         **** }
 233               		.loc 1 44 0 is_stmt 1
 234 00ae 0F90      		pop __tmp_reg__
 235 00b0 0F90      		pop __tmp_reg__
 236 00b2 0F90      		pop __tmp_reg__
 237 00b4 0F90      		pop __tmp_reg__
 238 00b6 0F90      		pop __tmp_reg__
 239 00b8 DF91      		pop r29
 240 00ba CF91      		pop r28
 241 00bc 0895      		ret
 242               		.cfi_endproc
 243               	.LFE9:
 245               	.global	getDataByColor
 247               	getDataByColor:
 248               	.LFB10:
  45:Led.c         **** 
  46:Led.c         **** uint32_t getDataByColor(Tcolor c, uint8_t mode, Led* leds){
 249               		.loc 1 46 0
 250               		.cfi_startproc
 251               	.LVL26:
 252 00be EF92      		push r14
 253               	.LCFI6:
 254               		.cfi_def_cfa_offset 3
 255               		.cfi_offset 14, -2
 256 00c0 FF92      		push r15
 257               	.LCFI7:
 258               		.cfi_def_cfa_offset 4
 259               		.cfi_offset 15, -3
 260 00c2 0F93      		push r16
 261               	.LCFI8:
 262               		.cfi_def_cfa_offset 5
 263               		.cfi_offset 16, -4
 264 00c4 1F93      		push r17
 265               	.LCFI9:
 266               		.cfi_def_cfa_offset 6
 267               		.cfi_offset 17, -5
 268 00c6 CF93      		push r28
 269               	.LCFI10:
 270               		.cfi_def_cfa_offset 7
 271               		.cfi_offset 28, -6
 272 00c8 DF93      		push r29
 273               	.LCFI11:
 274               		.cfi_def_cfa_offset 8
 275               		.cfi_offset 29, -7
 276               	/* prologue: function */
 277               	/* frame size = 0 */
 278               	/* stack size = 6 */
 279               	.L__stack_usage = 6
 280 00ca 562F      		mov r21,r22
 281 00cc F72E      		mov r15,r23
 282 00ce E82E      		mov r14,r24
 283 00d0 F901      		movw r30,r18
 284               	.LVL27:
 285 00d2 D901      		movw r26,r18
 286 00d4 A15A      		subi r26,-95
 287 00d6 BF4F      		sbci r27,-1
  47:Led.c         ****     uint32_t data=0;
 288               		.loc 1 47 0
 289 00d8 60E0      		ldi r22,0
 290 00da 70E0      		ldi r23,0
 291 00dc CB01      		movw r24,r22
 292               	.LVL28:
 293               	.LBB43:
  48:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
  49:Led.c         ****         if(leds[i].row==mode){
  50:Led.c         ****             if((leds[i].c.r && c.r) || (leds[i].c.g && c.g) || (leds[i].c.b && c.b)){
  51:Led.c         ****                 data|=(1<<leds[i].col);
 294               		.loc 1 51 0
 295 00de C1E0      		ldi r28,lo8(1)
 296 00e0 D0E0      		ldi r29,0
 297               	.LVL29:
 298               	.L35:
  49:Led.c         ****             if((leds[i].c.r && c.r) || (leds[i].c.g && c.g) || (leds[i].c.b && c.b)){
 299               		.loc 1 49 0
 300 00e2 2181      		ldd r18,Z+1
 301 00e4 2413      		cpse r18,r20
 302 00e6 00C0      		rjmp .L31
  50:Led.c         ****                 data|=(1<<leds[i].col);
 303               		.loc 1 50 0
 304 00e8 2281      		ldd r18,Z+2
 305 00ea 2223      		tst r18
 306 00ec 01F0      		breq .L32
  50:Led.c         ****                 data|=(1<<leds[i].col);
 307               		.loc 1 50 0 is_stmt 0 discriminator 1
 308 00ee 5111      		cpse r21,__zero_reg__
 309 00f0 00C0      		rjmp .L33
 310               	.L32:
  50:Led.c         ****                 data|=(1<<leds[i].col);
 311               		.loc 1 50 0 discriminator 3
 312 00f2 2381      		ldd r18,Z+3
 313 00f4 2223      		tst r18
 314 00f6 01F0      		breq .L34
 315               	.LVL30:
  50:Led.c         ****                 data|=(1<<leds[i].col);
 316               		.loc 1 50 0 discriminator 4
 317 00f8 F110      		cpse r15,__zero_reg__
 318 00fa 00C0      		rjmp .L33
 319               	.L34:
  50:Led.c         ****                 data|=(1<<leds[i].col);
 320               		.loc 1 50 0 discriminator 6
 321 00fc 2481      		ldd r18,Z+4
 322 00fe 2223      		tst r18
 323 0100 01F0      		breq .L31
 324               	.LVL31:
  50:Led.c         ****                 data|=(1<<leds[i].col);
 325               		.loc 1 50 0 discriminator 7
 326 0102 EE20      		tst r14
 327 0104 01F0      		breq .L31
 328               	.L33:
 329               		.loc 1 51 0 is_stmt 1
 330 0106 8E01      		movw r16,r28
 331 0108 0080      		ld r0,Z
 332 010a 00C0      		rjmp 2f
 333               		1:
 334 010c 000F      		lsl r16
 335 010e 111F      		rol r17
 336               		2:
 337 0110 0A94      		dec r0
 338 0112 02F4      		brpl 1b
 339 0114 012E      		mov __tmp_reg__,r17
 340 0116 000C      		lsl r0
 341 0118 220B      		sbc r18,r18
 342 011a 330B      		sbc r19,r19
 343 011c 602B      		or r22,r16
 344 011e 712B      		or r23,r17
 345 0120 822B      		or r24,r18
 346 0122 932B      		or r25,r19
 347               	.LVL32:
 348               	.L31:
 349 0124 3596      		adiw r30,5
  48:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
 350               		.loc 1 48 0 discriminator 2
 351 0126 EA17      		cp r30,r26
 352 0128 FB07      		cpc r31,r27
 353 012a 01F4      		brne .L35
 354               	/* epilogue start */
 355               	.LBE43:
  52:Led.c         ****             }
  53:Led.c         ****         }
  54:Led.c         ****     }
  55:Led.c         ****     return data;
  56:Led.c         **** }
 356               		.loc 1 56 0
 357 012c DF91      		pop r29
 358 012e CF91      		pop r28
 359 0130 1F91      		pop r17
 360 0132 0F91      		pop r16
 361 0134 FF90      		pop r15
 362 0136 EF90      		pop r14
 363 0138 0895      		ret
 364               		.cfi_endproc
 365               	.LFE10:
 367               	.global	ledOff
 369               	ledOff:
 370               	.LFB11:
  57:Led.c         **** 
  58:Led.c         **** void ledOff(Led* l){
 371               		.loc 1 58 0
 372               		.cfi_startproc
 373               	.LVL33:
 374               	/* prologue: function */
 375               	/* frame size = 0 */
 376               	/* stack size = 0 */
 377               	.L__stack_usage = 0
 378 013a FC01      		movw r30,r24
  59:Led.c         ****     l->c.r=0;
 379               		.loc 1 59 0
 380 013c 1282      		std Z+2,__zero_reg__
  60:Led.c         ****     l->c.g=0;
 381               		.loc 1 60 0
 382 013e 1382      		std Z+3,__zero_reg__
  61:Led.c         ****     l->c.b=0;
 383               		.loc 1 61 0
 384 0140 1482      		std Z+4,__zero_reg__
 385 0142 0895      		ret
 386               		.cfi_endproc
 387               	.LFE11:
 389               	.global	ledOn
 391               	ledOn:
 392               	.LFB12:
  62:Led.c         **** }
  63:Led.c         **** void ledOn(Led* l){
 393               		.loc 1 63 0
 394               		.cfi_startproc
 395               	.LVL34:
 396               	/* prologue: function */
 397               	/* frame size = 0 */
 398               	/* stack size = 0 */
 399               	.L__stack_usage = 0
 400 0144 FC01      		movw r30,r24
  64:Led.c         ****     l->c.r=255;
 401               		.loc 1 64 0
 402 0146 8FEF      		ldi r24,lo8(-1)
 403               	.LVL35:
 404 0148 8283      		std Z+2,r24
  65:Led.c         ****     l->c.g=255;
 405               		.loc 1 65 0
 406 014a 8383      		std Z+3,r24
  66:Led.c         ****     l->c.b=255;
 407               		.loc 1 66 0
 408 014c 8483      		std Z+4,r24
 409 014e 0895      		ret
 410               		.cfi_endproc
 411               	.LFE12:
 413               	.global	ledOnC
 415               	ledOnC:
 416               	.LFB13:
  67:Led.c         **** }
  68:Led.c         **** 
  69:Led.c         **** void ledOnC(Led* l,Tcolor c){
 417               		.loc 1 69 0
 418               		.cfi_startproc
 419               	.LVL36:
 420               	/* prologue: function */
 421               	/* frame size = 0 */
 422               	/* stack size = 0 */
 423               	.L__stack_usage = 0
  70:Led.c         ****     l->c=c;   
 424               		.loc 1 70 0
 425 0150 FC01      		movw r30,r24
 426 0152 4283      		std Z+2,r20
 427 0154 5383      		std Z+3,r21
 428 0156 6483      		std Z+4,r22
 429 0158 0895      		ret
 430               		.cfi_endproc
 431               	.LFE13:
 433               	.global	ledOnV
 435               	ledOnV:
 436               	.LFB14:
  71:Led.c         **** }
  72:Led.c         **** 
  73:Led.c         **** void ledOnV(Led* l,uint32_t v){
 437               		.loc 1 73 0
 438               		.cfi_startproc
 439               	.LVL37:
 440               	/* prologue: function */
 441               	/* frame size = 0 */
 442               	/* stack size = 0 */
 443               	.L__stack_usage = 0
 444 015a FC01      		movw r30,r24
 445               	.LVL38:
  74:Led.c         ****     l->c=tcolorV(v);
 446               		.loc 1 74 0
 447 015c 6283      		std Z+2,r22
 448 015e 5383      		std Z+3,r21
 449 0160 4483      		std Z+4,r20
 450 0162 0895      		ret
 451               		.cfi_endproc
 452               	.LFE14:
 454               	.global	ledIsOff
 456               	ledIsOff:
 457               	.LFB15:
  75:Led.c         **** }
  76:Led.c         **** 
  77:Led.c         **** uint8_t ledIsOff(Led l){
 458               		.loc 1 77 0
 459               		.cfi_startproc
 460 0164 CF93      		push r28
 461               	.LCFI12:
 462               		.cfi_def_cfa_offset 3
 463               		.cfi_offset 28, -2
 464 0166 DF93      		push r29
 465               	.LCFI13:
 466               		.cfi_def_cfa_offset 4
 467               		.cfi_offset 29, -3
 468 0168 00D0      		rcall .
 469 016a 00D0      		rcall .
 470 016c 1F92      		push __zero_reg__
 471               	.LCFI14:
 472               		.cfi_def_cfa_offset 9
 473 016e CDB7      		in r28,__SP_L__
 474 0170 DEB7      		in r29,__SP_H__
 475               	.LCFI15:
 476               		.cfi_def_cfa_register 28
 477               	/* prologue: function */
 478               	/* frame size = 5 */
 479               	/* stack size = 7 */
 480               	.L__stack_usage = 7
 481               	.LVL39:
 482               	.LBB44:
 483               	.LBB45:
  78:Led.c         ****     return !ledIsOn(l);
  79:Led.c         **** }
  80:Led.c         **** uint8_t ledIsOn(Led l){
  81:Led.c         ****     return l.c.r || l.c.g || l.c.b;
 484               		.loc 1 81 0
 485 0172 6111      		cpse r22,__zero_reg__
 486 0174 00C0      		rjmp .L57
 487 0176 7111      		cpse r23,__zero_reg__
 488 0178 00C0      		rjmp .L57
 489 017a 91E0      		ldi r25,lo8(1)
 490 017c 8111      		cpse r24,__zero_reg__
 491 017e 00C0      		rjmp .L55
 492 0180 90E0      		ldi r25,0
 493               	.L55:
 494 0182 892F      		mov r24,r25
 495               	.LVL40:
 496 0184 00C0      		rjmp .L54
 497               	.LVL41:
 498               	.L57:
 499 0186 81E0      		ldi r24,lo8(1)
 500               	.LVL42:
 501               	.L54:
 502               	.LBE45:
 503               	.LBE44:
  79:Led.c         **** uint8_t ledIsOn(Led l){
 504               		.loc 1 79 0
 505 0188 91E0      		ldi r25,lo8(1)
 506 018a 8927      		eor r24,r25
 507               	/* epilogue start */
 508 018c 0F90      		pop __tmp_reg__
 509 018e 0F90      		pop __tmp_reg__
 510 0190 0F90      		pop __tmp_reg__
 511 0192 0F90      		pop __tmp_reg__
 512 0194 0F90      		pop __tmp_reg__
 513 0196 DF91      		pop r29
 514 0198 CF91      		pop r28
 515 019a 0895      		ret
 516               		.cfi_endproc
 517               	.LFE15:
 519               	.global	ledIsOn
 521               	ledIsOn:
 522               	.LFB16:
  80:Led.c         ****     return l.c.r || l.c.g || l.c.b;
 523               		.loc 1 80 0
 524               		.cfi_startproc
 525 019c CF93      		push r28
 526               	.LCFI16:
 527               		.cfi_def_cfa_offset 3
 528               		.cfi_offset 28, -2
 529 019e DF93      		push r29
 530               	.LCFI17:
 531               		.cfi_def_cfa_offset 4
 532               		.cfi_offset 29, -3
 533 01a0 00D0      		rcall .
 534 01a2 00D0      		rcall .
 535 01a4 1F92      		push __zero_reg__
 536               	.LCFI18:
 537               		.cfi_def_cfa_offset 9
 538 01a6 CDB7      		in r28,__SP_L__
 539 01a8 DEB7      		in r29,__SP_H__
 540               	.LCFI19:
 541               		.cfi_def_cfa_register 28
 542               	/* prologue: function */
 543               	/* frame size = 5 */
 544               	/* stack size = 7 */
 545               	.L__stack_usage = 7
 546 01aa 8D83      		std Y+5,r24
 547               		.loc 1 81 0
 548 01ac 6111      		cpse r22,__zero_reg__
 549 01ae 00C0      		rjmp .L62
 550               		.loc 1 81 0 is_stmt 0 discriminator 2
 551 01b0 7111      		cpse r23,__zero_reg__
 552 01b2 00C0      		rjmp .L62
 553               		.loc 1 81 0 discriminator 4
 554 01b4 81E0      		ldi r24,lo8(1)
 555 01b6 9D81      		ldd r25,Y+5
 556 01b8 9111      		cpse r25,__zero_reg__
 557 01ba 00C0      		rjmp .L59
 558 01bc 80E0      		ldi r24,0
 559 01be 00C0      		rjmp .L59
 560               	.L62:
 561               		.loc 1 81 0
 562 01c0 81E0      		ldi r24,lo8(1)
 563               	.L59:
 564               	/* epilogue start */
  82:Led.c         **** }
 565               		.loc 1 82 0 is_stmt 1 discriminator 8
 566 01c2 0F90      		pop __tmp_reg__
 567 01c4 0F90      		pop __tmp_reg__
 568 01c6 0F90      		pop __tmp_reg__
 569 01c8 0F90      		pop __tmp_reg__
 570 01ca 0F90      		pop __tmp_reg__
 571 01cc DF91      		pop r29
 572 01ce CF91      		pop r28
 573 01d0 0895      		ret
 574               		.cfi_endproc
 575               	.LFE16:
 577               	.global	setLeds
 579               	setLeds:
 580               	.LFB17:
  83:Led.c         **** void setLeds(Ttime t,Led* l,Tcolor c){
 581               		.loc 1 83 0
 582               		.cfi_startproc
 583               	.LVL43:
 584 01d2 6F92      		push r6
 585               	.LCFI20:
 586               		.cfi_def_cfa_offset 3
 587               		.cfi_offset 6, -2
 588 01d4 7F92      		push r7
 589               	.LCFI21:
 590               		.cfi_def_cfa_offset 4
 591               		.cfi_offset 7, -3
 592 01d6 8F92      		push r8
 593               	.LCFI22:
 594               		.cfi_def_cfa_offset 5
 595               		.cfi_offset 8, -4
 596 01d8 CF92      		push r12
 597               	.LCFI23:
 598               		.cfi_def_cfa_offset 6
 599               		.cfi_offset 12, -5
 600 01da DF92      		push r13
 601               	.LCFI24:
 602               		.cfi_def_cfa_offset 7
 603               		.cfi_offset 13, -6
 604 01dc EF92      		push r14
 605               	.LCFI25:
 606               		.cfi_def_cfa_offset 8
 607               		.cfi_offset 14, -7
 608 01de FF92      		push r15
 609               	.LCFI26:
 610               		.cfi_def_cfa_offset 9
 611               		.cfi_offset 15, -8
 612 01e0 0F93      		push r16
 613               	.LCFI27:
 614               		.cfi_def_cfa_offset 10
 615               		.cfi_offset 16, -9
 616 01e2 CF93      		push r28
 617               	.LCFI28:
 618               		.cfi_def_cfa_offset 11
 619               		.cfi_offset 28, -10
 620 01e4 DF93      		push r29
 621               	.LCFI29:
 622               		.cfi_def_cfa_offset 12
 623               		.cfi_offset 29, -11
 624 01e6 00D0      		rcall .
 625 01e8 00D0      		rcall .
 626 01ea 1F92      		push __zero_reg__
 627               	.LCFI30:
 628               		.cfi_def_cfa_offset 17
 629 01ec CDB7      		in r28,__SP_L__
 630 01ee DEB7      		in r29,__SP_H__
 631               	.LCFI31:
 632               		.cfi_def_cfa_register 28
 633               	/* prologue: function */
 634               	/* frame size = 5 */
 635               	/* stack size = 15 */
 636               	.L__stack_usage = 15
 637 01f0 6901      		movw r12,r18
 638 01f2 3701      		movw r6,r14
 639 01f4 802E      		mov r8,r16
 640               	.LVL44:
 641 01f6 F901      		movw r30,r18
 642 01f8 C901      		movw r24,r18
 643 01fa 815A      		subi r24,-95
 644 01fc 9F4F      		sbci r25,-1
 645               	.LVL45:
 646               	.L64:
 647               	.LBB46:
 648               	.LBB47:
  59:Led.c         ****     l->c.g=0;
 649               		.loc 1 59 0 discriminator 2
 650 01fe 1282      		std Z+2,__zero_reg__
  60:Led.c         ****     l->c.b=0;
 651               		.loc 1 60 0 discriminator 2
 652 0200 1382      		std Z+3,__zero_reg__
  61:Led.c         **** }
 653               		.loc 1 61 0 discriminator 2
 654 0202 1482      		std Z+4,__zero_reg__
 655               	.LVL46:
 656 0204 3596      		adiw r30,5
 657               	.LBE47:
 658               	.LBE46:
  84:Led.c         ****     uint8_t i=0;
  85:Led.c         ****     for(;i<NBLEDS;i++){
 659               		.loc 1 85 0 discriminator 2
 660 0206 E817      		cp r30,r24
 661 0208 F907      		cpc r31,r25
 662 020a 01F4      		brne .L64
 663               	.LVL47:
 664               	.LBB48:
 665               	.LBB49:
  70:Led.c         **** }
 666               		.loc 1 70 0
 667 020c F601      		movw r30,r12
 668 020e E65A      		subi r30,-90
 669 0210 FF4F      		sbci r31,-1
 670               	.LVL48:
 671 0212 6282      		std Z+2,r6
 672 0214 7382      		std Z+3,r7
 673 0216 8482      		std Z+4,r8
 674               	.LVL49:
 675               	.LBE49:
 676               	.LBE48:
  86:Led.c         ****         ledOff(&l[i]);
  87:Led.c         ****     }
  88:Led.c         ****     ledOnC(&l[ILEST],c);
  89:Led.c         ****     
  90:Led.c         ****     switch(currentTime.hour){
 677               		.loc 1 90 0
 678 0218 8091 0000 		lds r24,currentTime
 679 021c 8823      		tst r24
 680 021e 01F0      		breq .L66
 681 0220 8C30      		cpi r24,lo8(12)
 682 0222 01F4      		brne .L80
 683               	.LVL50:
 684               	.LBB50:
 685               	.LBB51:
  70:Led.c         **** }
 686               		.loc 1 70 0
 687 0224 F601      		movw r30,r12
 688 0226 EF5B      		subi r30,-65
 689 0228 FF4F      		sbci r31,-1
 690               	.LVL51:
 691 022a 00C0      		rjmp .L79
 692               	.LVL52:
 693               	.L66:
 694               	.LBE51:
 695               	.LBE50:
 696               	.LBB52:
 697               	.LBB53:
 698 022c F601      		movw r30,r12
 699 022e 618A      		std Z+17,r6
 700 0230 728A      		std Z+18,r7
 701 0232 838A      		std Z+19,r8
 702 0234 00C0      		rjmp .L68
 703               	.LVL53:
 704               	.L80:
 705               	.LBE53:
 706               	.LBE52:
  91:Led.c         ****         case 0 :
  92:Led.c         ****             ledOnC(&l[MINUIT],c);
  93:Led.c         ****             break;
  94:Led.c         ****         case 12 :
  95:Led.c         ****             ledOnC(&l[MIDI],c);
  96:Led.c         ****             break;
  97:Led.c         ****         default :
  98:Led.c         ****             if(currentTime.min>35){
 707               		.loc 1 98 0
 708 0236 9091 0000 		lds r25,currentTime+1
  99:Led.c         ****                 ledOnC(&l[ledMap[(currentTime.hour%12)]],c);
 709               		.loc 1 99 0
 710 023a 6CE0      		ldi r22,lo8(12)
  98:Led.c         ****                 ledOnC(&l[ledMap[(currentTime.hour%12)]],c);
 711               		.loc 1 98 0
 712 023c 9432      		cpi r25,lo8(36)
 713 023e 00F0      		brlo .L69
 714               		.loc 1 99 0
 715 0240 00D0      		rcall __udivmodqi4
 716 0242 E92F      		mov r30,r25
 717 0244 F0E0      		ldi r31,0
 718 0246 E050      		subi r30,lo8(-(ledMap))
 719 0248 F040      		sbci r31,hi8(-(ledMap))
 720 024a 00C0      		rjmp .L78
 721               	.L69:
 100:Led.c         ****             }else{
 101:Led.c         ****                 ledOnC(&l[ledMap[(currentTime.hour%12)-1]],c);
 722               		.loc 1 101 0
 723 024c 00D0      		rcall __udivmodqi4
 724 024e E92F      		mov r30,r25
 725 0250 F0E0      		ldi r31,0
 726 0252 E050      		subi r30,lo8(-(ledMap-1))
 727 0254 F040      		sbci r31,hi8(-(ledMap-1))
 728               	.L78:
 729 0256 8081      		ld r24,Z
 730 0258 90E0      		ldi r25,0
 731 025a 65E0      		ldi r22,lo8(5)
 732 025c 70E0      		ldi r23,0
 733 025e 00D0      		rcall __mulhi3
 734 0260 8C0D      		add r24,r12
 735 0262 9D1D      		adc r25,r13
 736               	.LVL54:
 737               	.LBB54:
 738               	.LBB55:
  70:Led.c         **** }
 739               		.loc 1 70 0
 740 0264 FC01      		movw r30,r24
 741 0266 6282      		std Z+2,r6
 742 0268 7382      		std Z+3,r7
 743 026a 8482      		std Z+4,r8
 744               	.LVL55:
 745               	.LBE55:
 746               	.LBE54:
 747               	.LBB56:
 748               	.LBB57:
 749 026c F601      		movw r30,r12
 750 026e E55B      		subi r30,-75
 751 0270 FF4F      		sbci r31,-1
 752               	.LVL56:
 753               	.L79:
 754 0272 6282      		std Z+2,r6
 755 0274 7382      		std Z+3,r7
 756 0276 8482      		std Z+4,r8
 757               	.L68:
 758               	.LBE57:
 759               	.LBE56:
 102:Led.c         ****             }
 103:Led.c         ****             ledOnC(&l[HEURE],c);
 104:Led.c         ****             break;
 105:Led.c         ****     }
 106:Led.c         ****     uint8_t mins = minquad(currentTime.min); 
 760               		.loc 1 106 0
 761 0278 8091 0000 		lds r24,currentTime+1
 762 027c 00D0      		rcall minquad
 763               	.LVL57:
 107:Led.c         ****     if(mins > 30){
 764               		.loc 1 107 0
 765 027e 8F31      		cpi r24,lo8(31)
 766 0280 00F0      		brlo .L71
 767               	.LVL58:
 768               	.LBB58:
 769               	.LBB59:
  70:Led.c         **** }
 770               		.loc 1 70 0
 771 0282 F601      		movw r30,r12
 772 0284 67A6      		std Z+47,r6
 773 0286 70AA      		std Z+48,r7
 774 0288 81AA      		std Z+49,r8
 775               	.LVL59:
 776               	.LBE59:
 777               	.LBE58:
 108:Led.c         ****         ledOnC(&l[MOINS],c);
 109:Led.c         ****         mins=60-mins;
 778               		.loc 1 109 0
 779 028a 9CE3      		ldi r25,lo8(60)
 780 028c 981B      		sub r25,r24
 781 028e 892F      		mov r24,r25
 782               	.LVL60:
 783               	.L71:
 110:Led.c         ****     }
 111:Led.c         ****     switch(mins){
 784               		.loc 1 111 0
 785 0290 8431      		cpi r24,lo8(20)
 786 0292 01F0      		breq .L73
 787 0294 8E31      		cpi r24,lo8(30)
 788 0296 01F0      		breq .L74
 789 0298 8A30      		cpi r24,lo8(10)
 790 029a 01F4      		brne .L63
 791               	.LVL61:
 792               	.LBB60:
 793               	.LBB61:
  70:Led.c         **** }
 794               		.loc 1 70 0
 795 029c F601      		movw r30,r12
 796 029e 638E      		std Z+27,r6
 797 02a0 748E      		std Z+28,r7
 798 02a2 858E      		std Z+29,r8
 799 02a4 00C0      		rjmp .L63
 800               	.LVL62:
 801               	.L73:
 802               	.LBE61:
 803               	.LBE60:
 804               	.LBB62:
 805               	.LBB63:
 806 02a6 F601      		movw r30,r12
 807 02a8 61AE      		std Z+57,r6
 808 02aa 72AE      		std Z+58,r7
 809 02ac 83AE      		std Z+59,r8
 810 02ae 00C0      		rjmp .L63
 811               	.LVL63:
 812               	.L74:
 813               	.LBE63:
 814               	.LBE62:
 815               	.LBB64:
 816               	.LBB65:
 817 02b0 F601      		movw r30,r12
 818 02b2 6782      		std Z+7,r6
 819 02b4 7086      		std Z+8,r7
 820 02b6 8186      		std Z+9,r8
 821               	.LVL64:
 822               	.L63:
 823               	/* epilogue start */
 824               	.LBE65:
 825               	.LBE64:
 112:Led.c         ****         case 10 :
 113:Led.c         ****             ledOnC(&l[DIX],c);
 114:Led.c         ****             break;
 115:Led.c         ****         case 20 :
 116:Led.c         ****             ledOnC(&l[VINGT],c);
 117:Led.c         ****             break;
 118:Led.c         ****         case 30 :
 119:Led.c         ****             ledOnC(&l[ETDEMIE],c);
 120:Led.c         ****             break;
 121:Led.c         ****     }
 122:Led.c         **** }
 826               		.loc 1 122 0
 827 02b8 0F90      		pop __tmp_reg__
 828 02ba 0F90      		pop __tmp_reg__
 829 02bc 0F90      		pop __tmp_reg__
 830 02be 0F90      		pop __tmp_reg__
 831 02c0 0F90      		pop __tmp_reg__
 832 02c2 DF91      		pop r29
 833 02c4 CF91      		pop r28
 834 02c6 0F91      		pop r16
 835 02c8 FF90      		pop r15
 836 02ca EF90      		pop r14
 837 02cc DF90      		pop r13
 838 02ce CF90      		pop r12
 839               	.LVL65:
 840 02d0 8F90      		pop r8
 841 02d2 7F90      		pop r7
 842 02d4 6F90      		pop r6
 843               	.LVL66:
 844 02d6 0895      		ret
 845               		.cfi_endproc
 846               	.LFE17:
 848               	.global	setLedsNb
 850               	setLedsNb:
 851               	.LFB18:
 123:Led.c         **** 
 124:Led.c         **** void setLedsNb(int8_t nb, Led* l, Tcolor c){
 852               		.loc 1 124 0
 853               		.cfi_startproc
 854               	.LVL67:
 855 02d8 CF93      		push r28
 856               	.LCFI32:
 857               		.cfi_def_cfa_offset 3
 858               		.cfi_offset 28, -2
 859 02da DF93      		push r29
 860               	.LCFI33:
 861               		.cfi_def_cfa_offset 4
 862               		.cfi_offset 29, -3
 863               	/* prologue: function */
 864               	/* frame size = 0 */
 865               	/* stack size = 2 */
 866               	.L__stack_usage = 2
 867 02dc E82F      		mov r30,r24
 868 02de DB01      		movw r26,r22
 869               	.LVL68:
 870 02e0 EB01      		movw r28,r22
 871 02e2 CB01      		movw r24,r22
 872               	.LVL69:
 873 02e4 815A      		subi r24,-95
 874 02e6 9F4F      		sbci r25,-1
 875               	.LVL70:
 876               	.L82:
 877               	.LBB66:
 878               	.LBB67:
  59:Led.c         ****     l->c.g=0;
 879               		.loc 1 59 0 discriminator 2
 880 02e8 1A82      		std Y+2,__zero_reg__
  60:Led.c         ****     l->c.b=0;
 881               		.loc 1 60 0 discriminator 2
 882 02ea 1B82      		std Y+3,__zero_reg__
  61:Led.c         **** }
 883               		.loc 1 61 0 discriminator 2
 884 02ec 1C82      		std Y+4,__zero_reg__
 885               	.LVL71:
 886 02ee 2596      		adiw r28,5
 887               	.LBE67:
 888               	.LBE66:
 125:Led.c         ****     uint8_t i=0;
 126:Led.c         ****     for(;i<NBLEDS;i++){
 889               		.loc 1 126 0 discriminator 2
 890 02f0 8C17      		cp r24,r28
 891 02f2 9D07      		cpc r25,r29
 892 02f4 01F4      		brne .L82
 127:Led.c         ****         ledOff(&l[i]);
 128:Led.c         ****     }
 129:Led.c         ****     if(nb < 0){
 893               		.loc 1 129 0
 894 02f6 E7FF      		sbrs r30,7
 895 02f8 00C0      		rjmp .L83
 896               	.LVL72:
 897               	.LBB68:
 898               	.LBB69:
  70:Led.c         **** }
 899               		.loc 1 70 0
 900 02fa 9F96      		adiw r26,47
 901 02fc 2D93      		st X+,r18
 902 02fe 3D93      		st X+,r19
 903 0300 4C93      		st X,r20
 904 0302 D197      		sbiw r26,47+2
 905               	.LVL73:
 906               	.LBE69:
 907               	.LBE68:
 130:Led.c         ****         ledOnC(&l[MOINS],c);
 131:Led.c         ****         nb=-nb;
 908               		.loc 1 131 0
 909 0304 E195      		neg r30
 910               	.LVL74:
 911               	.L83:
 132:Led.c         ****     }
 133:Led.c         ****     if(nb>29){
 912               		.loc 1 133 0
 913 0306 EE31      		cpi r30,lo8(30)
 914 0308 04F0      		brlt .L84
 915               	.LVL75:
 916               	.LBB70:
 917               	.LBB71:
  70:Led.c         **** }
 918               		.loc 1 70 0
 919 030a D996      		adiw r26,57
 920 030c 2D93      		st X+,r18
 921 030e 3D93      		st X+,r19
 922 0310 4C93      		st X,r20
 923 0312 DB97      		sbiw r26,57+2
 924               	.LVL76:
 925               	.LBE71:
 926               	.LBE70:
 927               	.LBB72:
 928               	.LBB73:
 929 0314 5B96      		adiw r26,27
 930 0316 2D93      		st X+,r18
 931 0318 3D93      		st X+,r19
 932 031a 4C93      		st X,r20
 933 031c 5D97      		sbiw r26,27+2
 934               	.LVL77:
 935               	.LBE73:
 936               	.LBE72:
 134:Led.c         ****         ledOnC(&l[VINGT],c);
 135:Led.c         ****         ledOnC(&l[DIX],c);
 136:Led.c         ****         nb=nb-30;
 937               		.loc 1 136 0
 938 031e EE51      		subi r30,lo8(-(-30))
 939               	.LVL78:
 940 0320 00C0      		rjmp .L85
 941               	.L84:
 137:Led.c         ****     }else if(nb>19){
 942               		.loc 1 137 0
 943 0322 E431      		cpi r30,lo8(20)
 944 0324 04F0      		brlt .L86
 945               	.LVL79:
 946               	.LBB74:
 947               	.LBB75:
  70:Led.c         **** }
 948               		.loc 1 70 0
 949 0326 D996      		adiw r26,57
 950 0328 2D93      		st X+,r18
 951 032a 3D93      		st X+,r19
 952 032c 4C93      		st X,r20
 953 032e DB97      		sbiw r26,57+2
 954               	.LVL80:
 955               	.LBE75:
 956               	.LBE74:
 138:Led.c         ****         ledOnC(&l[VINGT],c);
 139:Led.c         ****         nb=nb-20;
 957               		.loc 1 139 0
 958 0330 E451      		subi r30,lo8(-(-20))
 959               	.LVL81:
 960 0332 00C0      		rjmp .L85
 961               	.L86:
 140:Led.c         ****     }else if(nb>11){
 962               		.loc 1 140 0
 963 0334 EC30      		cpi r30,lo8(12)
 964 0336 04F0      		brlt .L85
 965               	.LVL82:
 966               	.LBB76:
 967               	.LBB77:
  70:Led.c         **** }
 968               		.loc 1 70 0
 969 0338 5B96      		adiw r26,27
 970 033a 2D93      		st X+,r18
 971 033c 3D93      		st X+,r19
 972 033e 4C93      		st X,r20
 973 0340 5D97      		sbiw r26,27+2
 974               	.LVL83:
 975               	.LBE77:
 976               	.LBE76:
 141:Led.c         ****         ledOnC(&l[DIX],c);
 142:Led.c         ****         nb=nb-10;
 977               		.loc 1 142 0
 978 0342 EA50      		subi r30,lo8(-(-10))
 979               	.LVL84:
 980               	.L85:
 143:Led.c         ****     }
 144:Led.c         ****     ledOnC(&l[ledMap[nb-1]],c);
 981               		.loc 1 144 0
 982 0344 0E2E      		mov __tmp_reg__,r30
 983 0346 000C      		lsl r0
 984 0348 FF0B      		sbc r31,r31
 985 034a E050      		subi r30,lo8(-(ledMap-1))
 986 034c F040      		sbci r31,hi8(-(ledMap-1))
 987               	.LVL85:
 988 034e 8081      		ld r24,Z
 989 0350 90E0      		ldi r25,0
 990 0352 65E0      		ldi r22,lo8(5)
 991 0354 70E0      		ldi r23,0
 992               	.LVL86:
 993 0356 00D0      		rcall __mulhi3
 994 0358 A80F      		add r26,r24
 995 035a B91F      		adc r27,r25
 996               	.LVL87:
 997               	.LBB78:
 998               	.LBB79:
  70:Led.c         **** }
 999               		.loc 1 70 0
 1000 035c 1296      		adiw r26,2
 1001 035e 2D93      		st X+,r18
 1002 0360 3D93      		st X+,r19
 1003 0362 4C93      		st X,r20
 1004               	.LVL88:
 1005               	/* epilogue start */
 1006               	.LBE79:
 1007               	.LBE78:
 145:Led.c         **** }
 1008               		.loc 1 145 0
 1009 0364 DF91      		pop r29
 1010 0366 CF91      		pop r28
 1011 0368 0895      		ret
 1012               		.cfi_endproc
 1013               	.LFE18:
 1015               	.global	sendRawData
 1017               	sendRawData:
 1018               	.LFB19:
 146:Led.c         **** void sendRawData(uint32_t data){
 1019               		.loc 1 146 0
 1020               		.cfi_startproc
 1021               	.LVL89:
 1022 036a 0F93      		push r16
 1023               	.LCFI34:
 1024               		.cfi_def_cfa_offset 3
 1025               		.cfi_offset 16, -2
 1026 036c 1F93      		push r17
 1027               	.LCFI35:
 1028               		.cfi_def_cfa_offset 4
 1029               		.cfi_offset 17, -3
 1030               	/* prologue: function */
 1031               	/* frame size = 0 */
 1032               	/* stack size = 2 */
 1033               	.L__stack_usage = 2
 147:Led.c         ****     PORTA &=~(STROBE|CLK);
 1034               		.loc 1 147 0
 1035 036e 2BB3      		in r18,0x1b
 1036 0370 237F      		andi r18,lo8(-13)
 1037 0372 2BBB      		out 0x1b,r18
 1038               	.LVL90:
 1039 0374 40E0      		ldi r20,0
 1040 0376 50E0      		ldi r21,0
 1041               	.LVL91:
 1042               	.L91:
 1043               	.LBB80:
 148:Led.c         ****     for(uint8_t i=0;i<20;i++){
 149:Led.c         ****         if((data>>i) & 0x00000001){
 1044               		.loc 1 149 0
 1045 0378 8B01      		movw r16,r22
 1046 037a 9C01      		movw r18,r24
 1047 037c 042E      		mov r0,r20
 1048 037e 00C0      		rjmp 2f
 1049               		1:
 1050 0380 3695      		lsr r19
 1051 0382 2795      		ror r18
 1052 0384 1795      		ror r17
 1053 0386 0795      		ror r16
 1054               		2:
 1055 0388 0A94      		dec r0
 1056 038a 02F4      		brpl 1b
 1057 038c 00FF      		sbrs r16,0
 1058 038e 00C0      		rjmp .L89
 150:Led.c         ****             PORTA|=DATA;
 1059               		.loc 1 150 0
 1060 0390 D99A      		sbi 0x1b,1
 1061 0392 00C0      		rjmp .L90
 1062               	.L89:
 151:Led.c         ****         }else{
 152:Led.c         ****             PORTA&=~DATA;
 1063               		.loc 1 152 0
 1064 0394 D998      		cbi 0x1b,1
 1065               	.L90:
 153:Led.c         ****         }
 154:Led.c         ****         PORTA|=CLK;
 1066               		.loc 1 154 0 discriminator 2
 1067 0396 DB9A      		sbi 0x1b,3
 155:Led.c         ****         PORTA&=~CLK;
 1068               		.loc 1 155 0 discriminator 2
 1069 0398 DB98      		cbi 0x1b,3
 1070               	.LVL92:
 1071 039a 4F5F      		subi r20,-1
 1072 039c 5F4F      		sbci r21,-1
 1073               	.LVL93:
 148:Led.c         ****         if((data>>i) & 0x00000001){
 1074               		.loc 1 148 0 discriminator 2
 1075 039e 4431      		cpi r20,20
 1076 03a0 5105      		cpc r21,__zero_reg__
 1077 03a2 01F4      		brne .L91
 1078               	.LBE80:
 156:Led.c         ****     }
 157:Led.c         ****     PORTA|=STROBE;
 1079               		.loc 1 157 0
 1080 03a4 DA9A      		sbi 0x1b,2
 158:Led.c         ****     PORTA&=~STROBE;
 1081               		.loc 1 158 0
 1082 03a6 DA98      		cbi 0x1b,2
 1083               	/* epilogue start */
 159:Led.c         **** }
 1084               		.loc 1 159 0
 1085 03a8 1F91      		pop r17
 1086 03aa 0F91      		pop r16
 1087 03ac 0895      		ret
 1088               		.cfi_endproc
 1089               	.LFE19:
 1091               		.section	.rodata
 1094               	ledMap:
 1095 0000 07        		.byte	7
 1096 0001 08        		.byte	8
 1097 0002 0A        		.byte	10
 1098 0003 0E        		.byte	14
 1099 0004 00        		.byte	0
 1100 0005 04        		.byte	4
 1101 0006 11        		.byte	17
 1102 0007 02        		.byte	2
 1103 0008 0C        		.byte	12
 1104 0009 06        		.byte	6
 1105 000a 10        		.byte	16
 1106               		.comm	currentColor,3,1
 1107               		.comm	USI_I2C_Master_State,1,1
 1108               		.comm	currentTime,5,1
 1109               		.text
 1110               	.Letext0:
 1111               		.file 2 "/usr/lib/avr/include/stdint.h"
 1112               		.file 3 "RTC.h"
 1113               		.file 4 "Led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Led.c
     /tmp/ccJXEj74.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccJXEj74.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccJXEj74.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccJXEj74.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccJXEj74.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccJXEj74.s:12     .text:0000000000000000 tcolor
     /tmp/ccJXEj74.s:35     .text:0000000000000008 tcolorV
     /tmp/ccJXEj74.s:77     .text:0000000000000028 ledInit
     /tmp/ccJXEj74.s:138    .text:000000000000005c getColorByLed
     /tmp/ccJXEj74.s:247    .text:00000000000000be getDataByColor
     /tmp/ccJXEj74.s:369    .text:000000000000013a ledOff
     /tmp/ccJXEj74.s:391    .text:0000000000000144 ledOn
     /tmp/ccJXEj74.s:415    .text:0000000000000150 ledOnC
     /tmp/ccJXEj74.s:435    .text:000000000000015a ledOnV
     /tmp/ccJXEj74.s:456    .text:0000000000000164 ledIsOff
     /tmp/ccJXEj74.s:521    .text:000000000000019c ledIsOn
     /tmp/ccJXEj74.s:579    .text:00000000000001d2 setLeds
                            *COM*:0000000000000005 currentTime
     /tmp/ccJXEj74.s:1094   .rodata:0000000000000000 ledMap
     /tmp/ccJXEj74.s:850    .text:00000000000002d8 setLedsNb
     /tmp/ccJXEj74.s:1017   .text:000000000000036a sendRawData
                            *COM*:0000000000000003 currentColor
                            *COM*:0000000000000001 USI_I2C_Master_State

UNDEFINED SYMBOLS
__udivmodqi4
__mulhi3
minquad
__do_copy_data
__do_clear_bss
