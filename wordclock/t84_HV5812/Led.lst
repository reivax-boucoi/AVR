   1               		.file	"Led.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	tcolor
  12               	tcolor:
  13               	.LFB6:
  14               		.file 1 "Led.c"
   1:Led.c         **** #include "Led.h" 
   2:Led.c         **** 
   3:Led.c         **** static const uint8_t ledMap[11]={7,8,10,14,0,4,17,2,12,6,16};
   4:Led.c         **** 
   5:Led.c         **** Tcolor tcolor(uint8_t r,uint8_t g,uint8_t b){
  15               		.loc 1 5 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 762F      		mov r23,r22
  23               	.LVL1:
   6:Led.c         ****     Tcolor c={r,g,b};
   7:Led.c         ****     return c;
   8:Led.c         **** }
  24               		.loc 1 8 0
  25 0002 682F      		mov r22,r24
  26               	.LVL2:
  27 0004 842F      		mov r24,r20
  28               	.LVL3:
  29 0006 0895      		ret
  30               		.cfi_endproc
  31               	.LFE6:
  33               	.global	tcolorV
  35               	tcolorV:
  36               	.LFB7:
   9:Led.c         **** 
  10:Led.c         **** Tcolor tcolorV(uint32_t v){
  37               		.loc 1 10 0
  38               		.cfi_startproc
  39               	.LVL4:
  40 0008 0F93      		push r16
  41               	.LCFI0:
  42               		.cfi_def_cfa_offset 3
  43               		.cfi_offset 16, -2
  44 000a 1F93      		push r17
  45               	.LCFI1:
  46               		.cfi_def_cfa_offset 4
  47               		.cfi_offset 17, -3
  48               	/* prologue: function */
  49               	/* frame size = 0 */
  50               	/* stack size = 2 */
  51               	.L__stack_usage = 2
  52 000c DC01      		movw r26,r24
  53 000e CB01      		movw r24,r22
  54               	.LVL5:
  11:Led.c         ****     Tcolor c={(v>>16)&0xFF,(v>>8)&0xFF,v&0xFF};
  12:Led.c         ****     return c;
  55               		.loc 1 12 0
  56 0010 AD01      		movw r20,r26
  57 0012 6627      		clr r22
  58 0014 7727      		clr r23
  59 0016 092F      		mov r16,r25
  60 0018 1A2F      		mov r17,r26
  61 001a 2B2F      		mov r18,r27
  62 001c 3327      		clr r19
  63               	.LVL6:
  13:Led.c         **** }
  64               		.loc 1 13 0
  65 001e 642F      		mov r22,r20
  66               	.LVL7:
  67 0020 702F      		mov r23,r16
  68               	/* epilogue start */
  69 0022 1F91      		pop r17
  70 0024 0F91      		pop r16
  71 0026 0895      		ret
  72               		.cfi_endproc
  73               	.LFE7:
  75               	.global	ledInit
  77               	ledInit:
  78               	.LFB8:
  14:Led.c         **** 
  15:Led.c         **** void ledInit(Led* leds){
  79               		.loc 1 15 0
  80               		.cfi_startproc
  81               	.LVL8:
  82               	/* prologue: function */
  83               	/* frame size = 0 */
  84               	/* stack size = 0 */
  85               	.L__stack_usage = 0
  86 0028 FC01      		movw r30,r24
  87               	.LVL9:
  88               	.LBB42:
  16:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
  89               		.loc 1 16 0
  90 002a 80E0      		ldi r24,0
  91               	.LVL10:
  92               	.L6:
  17:Led.c         ****         leds[i].row=i%2;//leds[0]=0, leds[1]=1
  93               		.loc 1 17 0
  94 002c 982F      		mov r25,r24
  95 002e 9170      		andi r25,lo8(1)
  96 0030 9183      		std Z+1,r25
  18:Led.c         ****         if(i<10){
  97               		.loc 1 18 0
  98 0032 8A30      		cpi r24,lo8(10)
  99 0034 00F4      		brsh .L4
  19:Led.c         ****             leds[i].col=i;//0-9
 100               		.loc 1 19 0
 101 0036 8083      		st Z,r24
 102 0038 00C0      		rjmp .L5
 103               	.L4:
  20:Led.c         ****         }else{
  21:Led.c         ****             leds[i].col=i-9;//1-9
 104               		.loc 1 21 0
 105 003a 97EF      		ldi r25,lo8(-9)
 106 003c 980F      		add r25,r24
 107 003e 9083      		st Z,r25
 108               	.L5:
  22:Led.c         ****         }
  23:Led.c         ****         leds[i].c.r=0;
 109               		.loc 1 23 0 discriminator 2
 110 0040 1282      		std Z+2,__zero_reg__
  24:Led.c         ****         leds[i].c.g=0;
 111               		.loc 1 24 0 discriminator 2
 112 0042 1382      		std Z+3,__zero_reg__
  25:Led.c         ****         leds[i].c.b=0;
 113               		.loc 1 25 0 discriminator 2
 114 0044 1482      		std Z+4,__zero_reg__
  16:Led.c         ****         leds[i].row=i%2;//leds[0]=0, leds[1]=1
 115               		.loc 1 16 0 discriminator 2
 116 0046 8F5F      		subi r24,lo8(-(1))
 117               	.LVL11:
 118 0048 3596      		adiw r30,5
 119 004a 8331      		cpi r24,lo8(19)
 120 004c 01F4      		brne .L6
 121               	/* epilogue start */
 122               	.LBE42:
  26:Led.c         ****     }
  27:Led.c         **** }
 123               		.loc 1 27 0
 124 004e 0895      		ret
 125               		.cfi_endproc
 126               	.LFE8:
 128               	.global	getColorByLed
 130               	getColorByLed:
 131               	.LFB9:
  28:Led.c         **** uint32_t getColorByLed(Led l){
 132               		.loc 1 28 0
 133               		.cfi_startproc
 134 0050 CF93      		push r28
 135               	.LCFI2:
 136               		.cfi_def_cfa_offset 3
 137               		.cfi_offset 28, -2
 138 0052 DF93      		push r29
 139               	.LCFI3:
 140               		.cfi_def_cfa_offset 4
 141               		.cfi_offset 29, -3
 142 0054 00D0      		rcall .
 143 0056 00D0      		rcall .
 144 0058 1F92      		push __zero_reg__
 145               	.LCFI4:
 146               		.cfi_def_cfa_offset 9
 147 005a CDB7      		in r28,__SP_L__
 148 005c DEB7      		in r29,__SP_H__
 149               	.LCFI5:
 150               		.cfi_def_cfa_register 28
 151               	/* prologue: function */
 152               	/* frame size = 5 */
 153               	/* stack size = 7 */
 154               	.L__stack_usage = 7
 155               	.LVL12:
 156 005e 272F      		mov r18,r23
 157               	.LVL13:
 158 0060 382F      		mov r19,r24
 159               	.LVL14:
  29:Led.c         ****     uint32_t d=0;
  30:Led.c         ****     if(l.row){
 160               		.loc 1 30 0
 161 0062 5523      		tst r21
 162 0064 01F0      		breq .L10
  31:Led.c         ****         if(l.c.r)d|=R2;
 163               		.loc 1 31 0
 164 0066 6623      		tst r22
 165 0068 01F0      		breq .L16
 166 006a 60E0      		ldi r22,0
 167 006c 70E4      		ldi r23,lo8(64)
 168 006e 80E0      		ldi r24,0
 169 0070 90E0      		ldi r25,0
 170               	.LVL15:
 171 0072 00C0      		rjmp .L11
 172               	.LVL16:
 173               	.L16:
  29:Led.c         ****     uint32_t d=0;
 174               		.loc 1 29 0
 175 0074 60E0      		ldi r22,0
 176 0076 70E0      		ldi r23,0
 177 0078 CB01      		movw r24,r22
 178               	.LVL17:
 179               	.L11:
  32:Led.c         ****         if(l.c.g)d|=G2;
 180               		.loc 1 32 0
 181 007a 2111      		cpse r18,__zero_reg__
 182               		.loc 1 32 0 is_stmt 0 discriminator 1
 183 007c 8460      		ori r24,4
 184               	.LVL18:
 185               	.L12:
  33:Led.c         ****         if(l.c.b)d|=B2;
 186               		.loc 1 33 0 is_stmt 1
 187 007e 3323      		tst r19
 188 0080 01F0      		breq .L13
 189               		.loc 1 33 0 is_stmt 0 discriminator 1
 190 0082 8260      		ori r24,2
 191               	.LVL19:
 192 0084 00C0      		rjmp .L13
 193               	.LVL20:
 194               	.L10:
  34:Led.c         ****     }else{
  35:Led.c         ****         if(l.c.r)d|=R1;
 195               		.loc 1 35 0 is_stmt 1
 196 0086 6623      		tst r22
 197 0088 01F0      		breq .L17
 198 008a 60E0      		ldi r22,0
 199 008c 70E8      		ldi r23,lo8(-128)
 200 008e 80E0      		ldi r24,0
 201 0090 90E0      		ldi r25,0
 202               	.LVL21:
 203 0092 00C0      		rjmp .L14
 204               	.LVL22:
 205               	.L17:
  29:Led.c         ****     if(l.row){
 206               		.loc 1 29 0
 207 0094 60E0      		ldi r22,0
 208 0096 70E0      		ldi r23,0
 209 0098 CB01      		movw r24,r22
 210               	.LVL23:
 211               	.L14:
  36:Led.c         ****         if(l.c.g)d|=G1;
 212               		.loc 1 36 0
 213 009a 2111      		cpse r18,__zero_reg__
 214               		.loc 1 36 0 is_stmt 0 discriminator 1
 215 009c 8860      		ori r24,8
 216               	.LVL24:
 217               	.L15:
  37:Led.c         ****         if(l.c.b)d|=B1;
 218               		.loc 1 37 0 is_stmt 1
 219 009e 3111      		cpse r19,__zero_reg__
 220               		.loc 1 37 0 is_stmt 0 discriminator 1
 221 00a0 8160      		ori r24,1
 222               	.LVL25:
 223               	.L13:
 224               	/* epilogue start */
  38:Led.c         ****     }
  39:Led.c         ****     return d;
  40:Led.c         **** }
 225               		.loc 1 40 0 is_stmt 1
 226 00a2 0F90      		pop __tmp_reg__
 227 00a4 0F90      		pop __tmp_reg__
 228 00a6 0F90      		pop __tmp_reg__
 229 00a8 0F90      		pop __tmp_reg__
 230 00aa 0F90      		pop __tmp_reg__
 231 00ac DF91      		pop r29
 232 00ae CF91      		pop r28
 233 00b0 0895      		ret
 234               		.cfi_endproc
 235               	.LFE9:
 237               	.global	getDataByColor
 239               	getDataByColor:
 240               	.LFB10:
  41:Led.c         **** 
  42:Led.c         **** uint32_t getDataByColor(Tcolor c, uint8_t mode, Led* leds){
 241               		.loc 1 42 0
 242               		.cfi_startproc
 243               	.LVL26:
 244 00b2 EF92      		push r14
 245               	.LCFI6:
 246               		.cfi_def_cfa_offset 3
 247               		.cfi_offset 14, -2
 248 00b4 FF92      		push r15
 249               	.LCFI7:
 250               		.cfi_def_cfa_offset 4
 251               		.cfi_offset 15, -3
 252 00b6 0F93      		push r16
 253               	.LCFI8:
 254               		.cfi_def_cfa_offset 5
 255               		.cfi_offset 16, -4
 256 00b8 1F93      		push r17
 257               	.LCFI9:
 258               		.cfi_def_cfa_offset 6
 259               		.cfi_offset 17, -5
 260 00ba CF93      		push r28
 261               	.LCFI10:
 262               		.cfi_def_cfa_offset 7
 263               		.cfi_offset 28, -6
 264 00bc DF93      		push r29
 265               	.LCFI11:
 266               		.cfi_def_cfa_offset 8
 267               		.cfi_offset 29, -7
 268               	/* prologue: function */
 269               	/* frame size = 0 */
 270               	/* stack size = 6 */
 271               	.L__stack_usage = 6
 272 00be 562F      		mov r21,r22
 273 00c0 F72E      		mov r15,r23
 274 00c2 E82E      		mov r14,r24
 275 00c4 F901      		movw r30,r18
 276               	.LVL27:
 277 00c6 D901      		movw r26,r18
 278 00c8 A15A      		subi r26,-95
 279 00ca BF4F      		sbci r27,-1
  43:Led.c         ****     uint32_t data=0;
 280               		.loc 1 43 0
 281 00cc 60E0      		ldi r22,0
 282 00ce 70E0      		ldi r23,0
 283 00d0 CB01      		movw r24,r22
 284               	.LVL28:
 285               	.LBB43:
  44:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
  45:Led.c         ****         if(leds[i].row==mode){
  46:Led.c         ****             if((leds[i].c.r && c.r) || (leds[i].c.g && c.g) || (leds[i].c.b && c.b)){
  47:Led.c         ****                 data|=(1<<leds[i].col);
 286               		.loc 1 47 0
 287 00d2 C1E0      		ldi r28,lo8(1)
 288 00d4 D0E0      		ldi r29,0
 289               	.LVL29:
 290               	.L35:
  45:Led.c         ****             if((leds[i].c.r && c.r) || (leds[i].c.g && c.g) || (leds[i].c.b && c.b)){
 291               		.loc 1 45 0
 292 00d6 2181      		ldd r18,Z+1
 293 00d8 2413      		cpse r18,r20
 294 00da 00C0      		rjmp .L31
  46:Led.c         ****                 data|=(1<<leds[i].col);
 295               		.loc 1 46 0
 296 00dc 2281      		ldd r18,Z+2
 297 00de 2223      		tst r18
 298 00e0 01F0      		breq .L32
  46:Led.c         ****                 data|=(1<<leds[i].col);
 299               		.loc 1 46 0 is_stmt 0 discriminator 1
 300 00e2 5111      		cpse r21,__zero_reg__
 301 00e4 00C0      		rjmp .L33
 302               	.L32:
  46:Led.c         ****                 data|=(1<<leds[i].col);
 303               		.loc 1 46 0 discriminator 3
 304 00e6 2381      		ldd r18,Z+3
 305 00e8 2223      		tst r18
 306 00ea 01F0      		breq .L34
 307               	.LVL30:
  46:Led.c         ****                 data|=(1<<leds[i].col);
 308               		.loc 1 46 0 discriminator 4
 309 00ec F110      		cpse r15,__zero_reg__
 310 00ee 00C0      		rjmp .L33
 311               	.L34:
  46:Led.c         ****                 data|=(1<<leds[i].col);
 312               		.loc 1 46 0 discriminator 6
 313 00f0 2481      		ldd r18,Z+4
 314 00f2 2223      		tst r18
 315 00f4 01F0      		breq .L31
 316               	.LVL31:
  46:Led.c         ****                 data|=(1<<leds[i].col);
 317               		.loc 1 46 0 discriminator 7
 318 00f6 EE20      		tst r14
 319 00f8 01F0      		breq .L31
 320               	.L33:
 321               		.loc 1 47 0 is_stmt 1
 322 00fa 8E01      		movw r16,r28
 323 00fc 0080      		ld r0,Z
 324 00fe 00C0      		rjmp 2f
 325               		1:
 326 0100 000F      		lsl r16
 327 0102 111F      		rol r17
 328               		2:
 329 0104 0A94      		dec r0
 330 0106 02F4      		brpl 1b
 331 0108 012E      		mov __tmp_reg__,r17
 332 010a 000C      		lsl r0
 333 010c 220B      		sbc r18,r18
 334 010e 330B      		sbc r19,r19
 335 0110 602B      		or r22,r16
 336 0112 712B      		or r23,r17
 337 0114 822B      		or r24,r18
 338 0116 932B      		or r25,r19
 339               	.LVL32:
 340               	.L31:
 341 0118 3596      		adiw r30,5
  44:Led.c         ****     for(uint8_t i=0;i<NBLEDS;i++){
 342               		.loc 1 44 0 discriminator 2
 343 011a EA17      		cp r30,r26
 344 011c FB07      		cpc r31,r27
 345 011e 01F4      		brne .L35
 346               	/* epilogue start */
 347               	.LBE43:
  48:Led.c         ****             }
  49:Led.c         ****         }
  50:Led.c         ****     }
  51:Led.c         ****     return data;
  52:Led.c         **** }
 348               		.loc 1 52 0
 349 0120 DF91      		pop r29
 350 0122 CF91      		pop r28
 351 0124 1F91      		pop r17
 352 0126 0F91      		pop r16
 353 0128 FF90      		pop r15
 354 012a EF90      		pop r14
 355 012c 0895      		ret
 356               		.cfi_endproc
 357               	.LFE10:
 359               	.global	ledOff
 361               	ledOff:
 362               	.LFB11:
  53:Led.c         **** 
  54:Led.c         **** void ledOff(Led* l){
 363               		.loc 1 54 0
 364               		.cfi_startproc
 365               	.LVL33:
 366               	/* prologue: function */
 367               	/* frame size = 0 */
 368               	/* stack size = 0 */
 369               	.L__stack_usage = 0
 370 012e FC01      		movw r30,r24
  55:Led.c         ****     l->c.r=0;
 371               		.loc 1 55 0
 372 0130 1282      		std Z+2,__zero_reg__
  56:Led.c         ****     l->c.g=0;
 373               		.loc 1 56 0
 374 0132 1382      		std Z+3,__zero_reg__
  57:Led.c         ****     l->c.b=0;
 375               		.loc 1 57 0
 376 0134 1482      		std Z+4,__zero_reg__
 377 0136 0895      		ret
 378               		.cfi_endproc
 379               	.LFE11:
 381               	.global	ledOn
 383               	ledOn:
 384               	.LFB12:
  58:Led.c         **** }
  59:Led.c         **** void ledOn(Led* l){
 385               		.loc 1 59 0
 386               		.cfi_startproc
 387               	.LVL34:
 388               	/* prologue: function */
 389               	/* frame size = 0 */
 390               	/* stack size = 0 */
 391               	.L__stack_usage = 0
 392 0138 FC01      		movw r30,r24
  60:Led.c         ****     l->c.r=255;
 393               		.loc 1 60 0
 394 013a 8FEF      		ldi r24,lo8(-1)
 395               	.LVL35:
 396 013c 8283      		std Z+2,r24
  61:Led.c         ****     l->c.g=255;
 397               		.loc 1 61 0
 398 013e 8383      		std Z+3,r24
  62:Led.c         ****     l->c.b=255;
 399               		.loc 1 62 0
 400 0140 8483      		std Z+4,r24
 401 0142 0895      		ret
 402               		.cfi_endproc
 403               	.LFE12:
 405               	.global	ledOnC
 407               	ledOnC:
 408               	.LFB13:
  63:Led.c         **** }
  64:Led.c         **** 
  65:Led.c         **** void ledOnC(Led* l,Tcolor c){
 409               		.loc 1 65 0
 410               		.cfi_startproc
 411               	.LVL36:
 412               	/* prologue: function */
 413               	/* frame size = 0 */
 414               	/* stack size = 0 */
 415               	.L__stack_usage = 0
  66:Led.c         ****     l->c=c;   
 416               		.loc 1 66 0
 417 0144 FC01      		movw r30,r24
 418 0146 4283      		std Z+2,r20
 419 0148 5383      		std Z+3,r21
 420 014a 6483      		std Z+4,r22
 421 014c 0895      		ret
 422               		.cfi_endproc
 423               	.LFE13:
 425               	.global	ledOnV
 427               	ledOnV:
 428               	.LFB14:
  67:Led.c         **** }
  68:Led.c         **** 
  69:Led.c         **** void ledOnV(Led* l,uint32_t v){
 429               		.loc 1 69 0
 430               		.cfi_startproc
 431               	.LVL37:
 432               	/* prologue: function */
 433               	/* frame size = 0 */
 434               	/* stack size = 0 */
 435               	.L__stack_usage = 0
 436 014e FC01      		movw r30,r24
 437               	.LVL38:
  70:Led.c         ****     l->c=tcolorV(v);
 438               		.loc 1 70 0
 439 0150 6283      		std Z+2,r22
 440 0152 5383      		std Z+3,r21
 441 0154 4483      		std Z+4,r20
 442 0156 0895      		ret
 443               		.cfi_endproc
 444               	.LFE14:
 446               	.global	ledIsOff
 448               	ledIsOff:
 449               	.LFB15:
  71:Led.c         **** }
  72:Led.c         **** 
  73:Led.c         **** uint8_t ledIsOff(Led l){
 450               		.loc 1 73 0
 451               		.cfi_startproc
 452 0158 CF93      		push r28
 453               	.LCFI12:
 454               		.cfi_def_cfa_offset 3
 455               		.cfi_offset 28, -2
 456 015a DF93      		push r29
 457               	.LCFI13:
 458               		.cfi_def_cfa_offset 4
 459               		.cfi_offset 29, -3
 460 015c 00D0      		rcall .
 461 015e 00D0      		rcall .
 462 0160 1F92      		push __zero_reg__
 463               	.LCFI14:
 464               		.cfi_def_cfa_offset 9
 465 0162 CDB7      		in r28,__SP_L__
 466 0164 DEB7      		in r29,__SP_H__
 467               	.LCFI15:
 468               		.cfi_def_cfa_register 28
 469               	/* prologue: function */
 470               	/* frame size = 5 */
 471               	/* stack size = 7 */
 472               	.L__stack_usage = 7
 473               	.LVL39:
 474               	.LBB44:
 475               	.LBB45:
  74:Led.c         ****     return !ledIsOn(l);
  75:Led.c         **** }
  76:Led.c         **** uint8_t ledIsOn(Led l){
  77:Led.c         ****     return l.c.r || l.c.g || l.c.b;
 476               		.loc 1 77 0
 477 0166 6111      		cpse r22,__zero_reg__
 478 0168 00C0      		rjmp .L57
 479 016a 7111      		cpse r23,__zero_reg__
 480 016c 00C0      		rjmp .L57
 481 016e 91E0      		ldi r25,lo8(1)
 482 0170 8111      		cpse r24,__zero_reg__
 483 0172 00C0      		rjmp .L55
 484 0174 90E0      		ldi r25,0
 485               	.L55:
 486 0176 892F      		mov r24,r25
 487               	.LVL40:
 488 0178 00C0      		rjmp .L54
 489               	.LVL41:
 490               	.L57:
 491 017a 81E0      		ldi r24,lo8(1)
 492               	.LVL42:
 493               	.L54:
 494               	.LBE45:
 495               	.LBE44:
  75:Led.c         **** uint8_t ledIsOn(Led l){
 496               		.loc 1 75 0
 497 017c 91E0      		ldi r25,lo8(1)
 498 017e 8927      		eor r24,r25
 499               	/* epilogue start */
 500 0180 0F90      		pop __tmp_reg__
 501 0182 0F90      		pop __tmp_reg__
 502 0184 0F90      		pop __tmp_reg__
 503 0186 0F90      		pop __tmp_reg__
 504 0188 0F90      		pop __tmp_reg__
 505 018a DF91      		pop r29
 506 018c CF91      		pop r28
 507 018e 0895      		ret
 508               		.cfi_endproc
 509               	.LFE15:
 511               	.global	ledIsOn
 513               	ledIsOn:
 514               	.LFB16:
  76:Led.c         ****     return l.c.r || l.c.g || l.c.b;
 515               		.loc 1 76 0
 516               		.cfi_startproc
 517 0190 CF93      		push r28
 518               	.LCFI16:
 519               		.cfi_def_cfa_offset 3
 520               		.cfi_offset 28, -2
 521 0192 DF93      		push r29
 522               	.LCFI17:
 523               		.cfi_def_cfa_offset 4
 524               		.cfi_offset 29, -3
 525 0194 00D0      		rcall .
 526 0196 00D0      		rcall .
 527 0198 1F92      		push __zero_reg__
 528               	.LCFI18:
 529               		.cfi_def_cfa_offset 9
 530 019a CDB7      		in r28,__SP_L__
 531 019c DEB7      		in r29,__SP_H__
 532               	.LCFI19:
 533               		.cfi_def_cfa_register 28
 534               	/* prologue: function */
 535               	/* frame size = 5 */
 536               	/* stack size = 7 */
 537               	.L__stack_usage = 7
 538 019e 8D83      		std Y+5,r24
 539               		.loc 1 77 0
 540 01a0 6111      		cpse r22,__zero_reg__
 541 01a2 00C0      		rjmp .L62
 542               		.loc 1 77 0 is_stmt 0 discriminator 2
 543 01a4 7111      		cpse r23,__zero_reg__
 544 01a6 00C0      		rjmp .L62
 545               		.loc 1 77 0 discriminator 4
 546 01a8 81E0      		ldi r24,lo8(1)
 547 01aa 9D81      		ldd r25,Y+5
 548 01ac 9111      		cpse r25,__zero_reg__
 549 01ae 00C0      		rjmp .L59
 550 01b0 80E0      		ldi r24,0
 551 01b2 00C0      		rjmp .L59
 552               	.L62:
 553               		.loc 1 77 0
 554 01b4 81E0      		ldi r24,lo8(1)
 555               	.L59:
 556               	/* epilogue start */
  78:Led.c         **** }
 557               		.loc 1 78 0 is_stmt 1 discriminator 8
 558 01b6 0F90      		pop __tmp_reg__
 559 01b8 0F90      		pop __tmp_reg__
 560 01ba 0F90      		pop __tmp_reg__
 561 01bc 0F90      		pop __tmp_reg__
 562 01be 0F90      		pop __tmp_reg__
 563 01c0 DF91      		pop r29
 564 01c2 CF91      		pop r28
 565 01c4 0895      		ret
 566               		.cfi_endproc
 567               	.LFE16:
 569               	.global	setLeds
 571               	setLeds:
 572               	.LFB17:
  79:Led.c         **** void setLeds(Ttime t,Led* l,Tcolor c){
 573               		.loc 1 79 0
 574               		.cfi_startproc
 575               	.LVL43:
 576 01c6 6F92      		push r6
 577               	.LCFI20:
 578               		.cfi_def_cfa_offset 3
 579               		.cfi_offset 6, -2
 580 01c8 7F92      		push r7
 581               	.LCFI21:
 582               		.cfi_def_cfa_offset 4
 583               		.cfi_offset 7, -3
 584 01ca 8F92      		push r8
 585               	.LCFI22:
 586               		.cfi_def_cfa_offset 5
 587               		.cfi_offset 8, -4
 588 01cc CF92      		push r12
 589               	.LCFI23:
 590               		.cfi_def_cfa_offset 6
 591               		.cfi_offset 12, -5
 592 01ce DF92      		push r13
 593               	.LCFI24:
 594               		.cfi_def_cfa_offset 7
 595               		.cfi_offset 13, -6
 596 01d0 EF92      		push r14
 597               	.LCFI25:
 598               		.cfi_def_cfa_offset 8
 599               		.cfi_offset 14, -7
 600 01d2 FF92      		push r15
 601               	.LCFI26:
 602               		.cfi_def_cfa_offset 9
 603               		.cfi_offset 15, -8
 604 01d4 0F93      		push r16
 605               	.LCFI27:
 606               		.cfi_def_cfa_offset 10
 607               		.cfi_offset 16, -9
 608 01d6 CF93      		push r28
 609               	.LCFI28:
 610               		.cfi_def_cfa_offset 11
 611               		.cfi_offset 28, -10
 612 01d8 DF93      		push r29
 613               	.LCFI29:
 614               		.cfi_def_cfa_offset 12
 615               		.cfi_offset 29, -11
 616 01da 00D0      		rcall .
 617 01dc 00D0      		rcall .
 618 01de 1F92      		push __zero_reg__
 619               	.LCFI30:
 620               		.cfi_def_cfa_offset 17
 621 01e0 CDB7      		in r28,__SP_L__
 622 01e2 DEB7      		in r29,__SP_H__
 623               	.LCFI31:
 624               		.cfi_def_cfa_register 28
 625               	/* prologue: function */
 626               	/* frame size = 5 */
 627               	/* stack size = 15 */
 628               	.L__stack_usage = 15
 629 01e4 6901      		movw r12,r18
 630 01e6 3701      		movw r6,r14
 631 01e8 802E      		mov r8,r16
 632               	.LVL44:
 633 01ea F901      		movw r30,r18
 634 01ec C901      		movw r24,r18
 635 01ee 815A      		subi r24,-95
 636 01f0 9F4F      		sbci r25,-1
 637               	.LVL45:
 638               	.L64:
 639               	.LBB46:
 640               	.LBB47:
  55:Led.c         ****     l->c.g=0;
 641               		.loc 1 55 0 discriminator 2
 642 01f2 1282      		std Z+2,__zero_reg__
  56:Led.c         ****     l->c.b=0;
 643               		.loc 1 56 0 discriminator 2
 644 01f4 1382      		std Z+3,__zero_reg__
  57:Led.c         **** }
 645               		.loc 1 57 0 discriminator 2
 646 01f6 1482      		std Z+4,__zero_reg__
 647               	.LVL46:
 648 01f8 3596      		adiw r30,5
 649               	.LBE47:
 650               	.LBE46:
  80:Led.c         ****     uint8_t i=0;
  81:Led.c         ****     for(;i<NBLEDS;i++){
 651               		.loc 1 81 0 discriminator 2
 652 01fa E817      		cp r30,r24
 653 01fc F907      		cpc r31,r25
 654 01fe 01F4      		brne .L64
 655               	.LVL47:
 656               	.LBB48:
 657               	.LBB49:
  66:Led.c         **** }
 658               		.loc 1 66 0
 659 0200 F601      		movw r30,r12
 660 0202 E65A      		subi r30,-90
 661 0204 FF4F      		sbci r31,-1
 662               	.LVL48:
 663 0206 6282      		std Z+2,r6
 664 0208 7382      		std Z+3,r7
 665 020a 8482      		std Z+4,r8
 666               	.LVL49:
 667               	.LBE49:
 668               	.LBE48:
  82:Led.c         ****         ledOff(&l[i]);
  83:Led.c         ****     }
  84:Led.c         ****     ledOnC(&l[ILEST],c);
  85:Led.c         ****     
  86:Led.c         ****     switch(currentTime.hour){
 669               		.loc 1 86 0
 670 020c 8091 0000 		lds r24,currentTime
 671 0210 8823      		tst r24
 672 0212 01F0      		breq .L66
 673 0214 8C30      		cpi r24,lo8(12)
 674 0216 01F4      		brne .L80
 675               	.LVL50:
 676               	.LBB50:
 677               	.LBB51:
  66:Led.c         **** }
 678               		.loc 1 66 0
 679 0218 F601      		movw r30,r12
 680 021a EF5B      		subi r30,-65
 681 021c FF4F      		sbci r31,-1
 682               	.LVL51:
 683 021e 00C0      		rjmp .L79
 684               	.LVL52:
 685               	.L66:
 686               	.LBE51:
 687               	.LBE50:
 688               	.LBB52:
 689               	.LBB53:
 690 0220 F601      		movw r30,r12
 691 0222 618A      		std Z+17,r6
 692 0224 728A      		std Z+18,r7
 693 0226 838A      		std Z+19,r8
 694 0228 00C0      		rjmp .L68
 695               	.LVL53:
 696               	.L80:
 697               	.LBE53:
 698               	.LBE52:
  87:Led.c         ****         case 0 :
  88:Led.c         ****             ledOnC(&l[MINUIT],c);
  89:Led.c         ****             break;
  90:Led.c         ****         case 12 :
  91:Led.c         ****             ledOnC(&l[MIDI],c);
  92:Led.c         ****             break;
  93:Led.c         ****         default :
  94:Led.c         ****             if(currentTime.min>35){
 699               		.loc 1 94 0
 700 022a 9091 0000 		lds r25,currentTime+1
  95:Led.c         ****                 ledOnC(&l[ledMap[(currentTime.hour%12)]],c);
 701               		.loc 1 95 0
 702 022e 6CE0      		ldi r22,lo8(12)
  94:Led.c         ****                 ledOnC(&l[ledMap[(currentTime.hour%12)]],c);
 703               		.loc 1 94 0
 704 0230 9432      		cpi r25,lo8(36)
 705 0232 00F0      		brlo .L69
 706               		.loc 1 95 0
 707 0234 00D0      		rcall __udivmodqi4
 708 0236 E92F      		mov r30,r25
 709 0238 F0E0      		ldi r31,0
 710 023a E050      		subi r30,lo8(-(ledMap))
 711 023c F040      		sbci r31,hi8(-(ledMap))
 712 023e 00C0      		rjmp .L78
 713               	.L69:
  96:Led.c         ****             }else{
  97:Led.c         ****                 ledOnC(&l[ledMap[(currentTime.hour%12)-1]],c);
 714               		.loc 1 97 0
 715 0240 00D0      		rcall __udivmodqi4
 716 0242 E92F      		mov r30,r25
 717 0244 F0E0      		ldi r31,0
 718 0246 E050      		subi r30,lo8(-(ledMap-1))
 719 0248 F040      		sbci r31,hi8(-(ledMap-1))
 720               	.L78:
 721 024a 8081      		ld r24,Z
 722 024c 90E0      		ldi r25,0
 723 024e 65E0      		ldi r22,lo8(5)
 724 0250 70E0      		ldi r23,0
 725 0252 00D0      		rcall __mulhi3
 726 0254 8C0D      		add r24,r12
 727 0256 9D1D      		adc r25,r13
 728               	.LVL54:
 729               	.LBB54:
 730               	.LBB55:
  66:Led.c         **** }
 731               		.loc 1 66 0
 732 0258 FC01      		movw r30,r24
 733 025a 6282      		std Z+2,r6
 734 025c 7382      		std Z+3,r7
 735 025e 8482      		std Z+4,r8
 736               	.LVL55:
 737               	.LBE55:
 738               	.LBE54:
 739               	.LBB56:
 740               	.LBB57:
 741 0260 F601      		movw r30,r12
 742 0262 E55B      		subi r30,-75
 743 0264 FF4F      		sbci r31,-1
 744               	.LVL56:
 745               	.L79:
 746 0266 6282      		std Z+2,r6
 747 0268 7382      		std Z+3,r7
 748 026a 8482      		std Z+4,r8
 749               	.L68:
 750               	.LBE57:
 751               	.LBE56:
  98:Led.c         ****             }
  99:Led.c         ****             ledOnC(&l[HEURE],c);
 100:Led.c         ****             break;
 101:Led.c         ****     }
 102:Led.c         ****     uint8_t mins = minquad(currentTime.min); 
 752               		.loc 1 102 0
 753 026c 8091 0000 		lds r24,currentTime+1
 754 0270 00D0      		rcall minquad
 755               	.LVL57:
 103:Led.c         ****     if(mins > 30){
 756               		.loc 1 103 0
 757 0272 8F31      		cpi r24,lo8(31)
 758 0274 00F0      		brlo .L71
 759               	.LVL58:
 760               	.LBB58:
 761               	.LBB59:
  66:Led.c         **** }
 762               		.loc 1 66 0
 763 0276 F601      		movw r30,r12
 764 0278 67A6      		std Z+47,r6
 765 027a 70AA      		std Z+48,r7
 766 027c 81AA      		std Z+49,r8
 767               	.LVL59:
 768               	.LBE59:
 769               	.LBE58:
 104:Led.c         ****         ledOnC(&l[MOINS],c);
 105:Led.c         ****         mins=60-mins;
 770               		.loc 1 105 0
 771 027e 9CE3      		ldi r25,lo8(60)
 772 0280 981B      		sub r25,r24
 773 0282 892F      		mov r24,r25
 774               	.LVL60:
 775               	.L71:
 106:Led.c         ****     }
 107:Led.c         ****     switch(mins){
 776               		.loc 1 107 0
 777 0284 8431      		cpi r24,lo8(20)
 778 0286 01F0      		breq .L73
 779 0288 8E31      		cpi r24,lo8(30)
 780 028a 01F0      		breq .L74
 781 028c 8A30      		cpi r24,lo8(10)
 782 028e 01F4      		brne .L63
 783               	.LVL61:
 784               	.LBB60:
 785               	.LBB61:
  66:Led.c         **** }
 786               		.loc 1 66 0
 787 0290 F601      		movw r30,r12
 788 0292 638E      		std Z+27,r6
 789 0294 748E      		std Z+28,r7
 790 0296 858E      		std Z+29,r8
 791 0298 00C0      		rjmp .L63
 792               	.LVL62:
 793               	.L73:
 794               	.LBE61:
 795               	.LBE60:
 796               	.LBB62:
 797               	.LBB63:
 798 029a F601      		movw r30,r12
 799 029c 61AE      		std Z+57,r6
 800 029e 72AE      		std Z+58,r7
 801 02a0 83AE      		std Z+59,r8
 802 02a2 00C0      		rjmp .L63
 803               	.LVL63:
 804               	.L74:
 805               	.LBE63:
 806               	.LBE62:
 807               	.LBB64:
 808               	.LBB65:
 809 02a4 F601      		movw r30,r12
 810 02a6 6782      		std Z+7,r6
 811 02a8 7086      		std Z+8,r7
 812 02aa 8186      		std Z+9,r8
 813               	.LVL64:
 814               	.L63:
 815               	/* epilogue start */
 816               	.LBE65:
 817               	.LBE64:
 108:Led.c         ****         case 10 :
 109:Led.c         ****             ledOnC(&l[DIX],c);
 110:Led.c         ****             break;
 111:Led.c         ****         case 20 :
 112:Led.c         ****             ledOnC(&l[VINGT],c);
 113:Led.c         ****             break;
 114:Led.c         ****         case 30 :
 115:Led.c         ****             ledOnC(&l[ETDEMIE],c);
 116:Led.c         ****             break;
 117:Led.c         ****     }
 118:Led.c         **** }
 818               		.loc 1 118 0
 819 02ac 0F90      		pop __tmp_reg__
 820 02ae 0F90      		pop __tmp_reg__
 821 02b0 0F90      		pop __tmp_reg__
 822 02b2 0F90      		pop __tmp_reg__
 823 02b4 0F90      		pop __tmp_reg__
 824 02b6 DF91      		pop r29
 825 02b8 CF91      		pop r28
 826 02ba 0F91      		pop r16
 827 02bc FF90      		pop r15
 828 02be EF90      		pop r14
 829 02c0 DF90      		pop r13
 830 02c2 CF90      		pop r12
 831               	.LVL65:
 832 02c4 8F90      		pop r8
 833 02c6 7F90      		pop r7
 834 02c8 6F90      		pop r6
 835               	.LVL66:
 836 02ca 0895      		ret
 837               		.cfi_endproc
 838               	.LFE17:
 840               	.global	setLedsNb
 842               	setLedsNb:
 843               	.LFB18:
 119:Led.c         **** 
 120:Led.c         **** void setLedsNb(int8_t nb, Led* l, Tcolor c){
 844               		.loc 1 120 0
 845               		.cfi_startproc
 846               	.LVL67:
 847 02cc CF93      		push r28
 848               	.LCFI32:
 849               		.cfi_def_cfa_offset 3
 850               		.cfi_offset 28, -2
 851 02ce DF93      		push r29
 852               	.LCFI33:
 853               		.cfi_def_cfa_offset 4
 854               		.cfi_offset 29, -3
 855               	/* prologue: function */
 856               	/* frame size = 0 */
 857               	/* stack size = 2 */
 858               	.L__stack_usage = 2
 859 02d0 E82F      		mov r30,r24
 860 02d2 DB01      		movw r26,r22
 861               	.LVL68:
 862 02d4 EB01      		movw r28,r22
 863 02d6 CB01      		movw r24,r22
 864               	.LVL69:
 865 02d8 815A      		subi r24,-95
 866 02da 9F4F      		sbci r25,-1
 867               	.LVL70:
 868               	.L82:
 869               	.LBB66:
 870               	.LBB67:
  55:Led.c         ****     l->c.g=0;
 871               		.loc 1 55 0 discriminator 2
 872 02dc 1A82      		std Y+2,__zero_reg__
  56:Led.c         ****     l->c.b=0;
 873               		.loc 1 56 0 discriminator 2
 874 02de 1B82      		std Y+3,__zero_reg__
  57:Led.c         **** }
 875               		.loc 1 57 0 discriminator 2
 876 02e0 1C82      		std Y+4,__zero_reg__
 877               	.LVL71:
 878 02e2 2596      		adiw r28,5
 879               	.LBE67:
 880               	.LBE66:
 121:Led.c         ****     uint8_t i=0;
 122:Led.c         ****     for(;i<NBLEDS;i++){
 881               		.loc 1 122 0 discriminator 2
 882 02e4 8C17      		cp r24,r28
 883 02e6 9D07      		cpc r25,r29
 884 02e8 01F4      		brne .L82
 123:Led.c         ****         ledOff(&l[i]);
 124:Led.c         ****     }
 125:Led.c         ****     if(nb < 0){
 885               		.loc 1 125 0
 886 02ea E7FF      		sbrs r30,7
 887 02ec 00C0      		rjmp .L83
 888               	.LVL72:
 889               	.LBB68:
 890               	.LBB69:
  66:Led.c         **** }
 891               		.loc 1 66 0
 892 02ee 9F96      		adiw r26,47
 893 02f0 2D93      		st X+,r18
 894 02f2 3D93      		st X+,r19
 895 02f4 4C93      		st X,r20
 896 02f6 D197      		sbiw r26,47+2
 897               	.LVL73:
 898               	.LBE69:
 899               	.LBE68:
 126:Led.c         ****         ledOnC(&l[MOINS],c);
 127:Led.c         ****         nb=-nb;
 900               		.loc 1 127 0
 901 02f8 E195      		neg r30
 902               	.LVL74:
 903               	.L83:
 128:Led.c         ****     }
 129:Led.c         ****     if(nb>30){
 904               		.loc 1 129 0
 905 02fa EF31      		cpi r30,lo8(31)
 906 02fc 04F0      		brlt .L84
 907               	.LVL75:
 908               	.LBB70:
 909               	.LBB71:
  66:Led.c         **** }
 910               		.loc 1 66 0
 911 02fe D996      		adiw r26,57
 912 0300 2D93      		st X+,r18
 913 0302 3D93      		st X+,r19
 914 0304 4C93      		st X,r20
 915 0306 DB97      		sbiw r26,57+2
 916               	.LVL76:
 917               	.LBE71:
 918               	.LBE70:
 919               	.LBB72:
 920               	.LBB73:
 921 0308 5B96      		adiw r26,27
 922 030a 2D93      		st X+,r18
 923 030c 3D93      		st X+,r19
 924 030e 4C93      		st X,r20
 925 0310 5D97      		sbiw r26,27+2
 926               	.LVL77:
 927               	.LBE73:
 928               	.LBE72:
 130:Led.c         ****         ledOnC(&l[VINGT],c);
 131:Led.c         ****         ledOnC(&l[DIX],c);
 132:Led.c         ****         nb=nb-30;
 929               		.loc 1 132 0
 930 0312 EE51      		subi r30,lo8(-(-30))
 931               	.LVL78:
 932 0314 00C0      		rjmp .L85
 933               	.L84:
 133:Led.c         ****     }else if(nb>20){
 934               		.loc 1 133 0
 935 0316 E531      		cpi r30,lo8(21)
 936 0318 04F0      		brlt .L86
 937               	.LVL79:
 938               	.LBB74:
 939               	.LBB75:
  66:Led.c         **** }
 940               		.loc 1 66 0
 941 031a D996      		adiw r26,57
 942 031c 2D93      		st X+,r18
 943 031e 3D93      		st X+,r19
 944 0320 4C93      		st X,r20
 945 0322 DB97      		sbiw r26,57+2
 946               	.LVL80:
 947 0324 00C0      		rjmp .L88
 948               	.L86:
 949               	.LBE75:
 950               	.LBE74:
 134:Led.c         ****         ledOnC(&l[VINGT],c);
 135:Led.c         ****         nb=nb-10;
 136:Led.c         ****     }else if(nb>11){
 951               		.loc 1 136 0
 952 0326 EC30      		cpi r30,lo8(12)
 953 0328 04F0      		brlt .L85
 954               	.LVL81:
 955               	.LBB76:
 956               	.LBB77:
  66:Led.c         **** }
 957               		.loc 1 66 0
 958 032a 5B96      		adiw r26,27
 959 032c 2D93      		st X+,r18
 960 032e 3D93      		st X+,r19
 961 0330 4C93      		st X,r20
 962 0332 5D97      		sbiw r26,27+2
 963               	.LVL82:
 964               	.L88:
 965               	.LBE77:
 966               	.LBE76:
 137:Led.c         ****         ledOnC(&l[DIX],c);
 138:Led.c         ****         nb=nb-10;
 967               		.loc 1 138 0
 968 0334 EA50      		subi r30,lo8(-(-10))
 969               	.LVL83:
 970               	.L85:
 139:Led.c         ****     }
 140:Led.c         ****     ledOnC(&l[ledMap[nb-1]],c);
 971               		.loc 1 140 0
 972 0336 0E2E      		mov __tmp_reg__,r30
 973 0338 000C      		lsl r0
 974 033a FF0B      		sbc r31,r31
 975 033c E050      		subi r30,lo8(-(ledMap-1))
 976 033e F040      		sbci r31,hi8(-(ledMap-1))
 977               	.LVL84:
 978 0340 8081      		ld r24,Z
 979 0342 90E0      		ldi r25,0
 980 0344 65E0      		ldi r22,lo8(5)
 981 0346 70E0      		ldi r23,0
 982               	.LVL85:
 983 0348 00D0      		rcall __mulhi3
 984 034a A80F      		add r26,r24
 985 034c B91F      		adc r27,r25
 986               	.LVL86:
 987               	.LBB78:
 988               	.LBB79:
  66:Led.c         **** }
 989               		.loc 1 66 0
 990 034e 1296      		adiw r26,2
 991 0350 2D93      		st X+,r18
 992 0352 3D93      		st X+,r19
 993 0354 4C93      		st X,r20
 994               	.LVL87:
 995               	/* epilogue start */
 996               	.LBE79:
 997               	.LBE78:
 141:Led.c         **** }
 998               		.loc 1 141 0
 999 0356 DF91      		pop r29
 1000 0358 CF91      		pop r28
 1001 035a 0895      		ret
 1002               		.cfi_endproc
 1003               	.LFE18:
 1005               		.section	.rodata
 1008               	ledMap:
 1009 0000 07        		.byte	7
 1010 0001 08        		.byte	8
 1011 0002 0A        		.byte	10
 1012 0003 0E        		.byte	14
 1013 0004 00        		.byte	0
 1014 0005 04        		.byte	4
 1015 0006 11        		.byte	17
 1016 0007 02        		.byte	2
 1017 0008 0C        		.byte	12
 1018 0009 06        		.byte	6
 1019 000a 10        		.byte	16
 1020               		.comm	currentColor,3,1
 1021               		.comm	USI_I2C_Master_State,1,1
 1022               		.comm	currentTime,5,1
 1023               		.text
 1024               	.Letext0:
 1025               		.file 2 "/usr/lib/avr/include/stdint.h"
 1026               		.file 3 "RTC.h"
 1027               		.file 4 "Led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Led.c
     /tmp/ccBjCKXX.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccBjCKXX.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccBjCKXX.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccBjCKXX.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccBjCKXX.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccBjCKXX.s:12     .text:0000000000000000 tcolor
     /tmp/ccBjCKXX.s:35     .text:0000000000000008 tcolorV
     /tmp/ccBjCKXX.s:77     .text:0000000000000028 ledInit
     /tmp/ccBjCKXX.s:130    .text:0000000000000050 getColorByLed
     /tmp/ccBjCKXX.s:239    .text:00000000000000b2 getDataByColor
     /tmp/ccBjCKXX.s:361    .text:000000000000012e ledOff
     /tmp/ccBjCKXX.s:383    .text:0000000000000138 ledOn
     /tmp/ccBjCKXX.s:407    .text:0000000000000144 ledOnC
     /tmp/ccBjCKXX.s:427    .text:000000000000014e ledOnV
     /tmp/ccBjCKXX.s:448    .text:0000000000000158 ledIsOff
     /tmp/ccBjCKXX.s:513    .text:0000000000000190 ledIsOn
     /tmp/ccBjCKXX.s:571    .text:00000000000001c6 setLeds
                            *COM*:0000000000000005 currentTime
     /tmp/ccBjCKXX.s:1008   .rodata:0000000000000000 ledMap
     /tmp/ccBjCKXX.s:842    .text:00000000000002cc setLedsNb
                            *COM*:0000000000000003 currentColor
                            *COM*:0000000000000001 USI_I2C_Master_State

UNDEFINED SYMBOLS
__udivmodqi4
__mulhi3
minquad
__do_copy_data
__do_clear_bss
