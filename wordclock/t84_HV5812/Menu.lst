   1               		.file	"Menu.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	MsetRainbow
  12               	MsetRainbow:
  13               	.LFB17:
  14               		.file 1 "Menu.c"
   1:Menu.c        **** #include "Menu.h"
   2:Menu.c        **** const struct Menu M0main={7,0,{
   3:Menu.c        ****     {1,&M1mode},
   4:Menu.c        ****     {2,&M1cmode},
   5:Menu.c        ****     {3,&M1nightmode},
   6:Menu.c        ****     {4,&M1setTime},
   7:Menu.c        ****     {5,&M1eventMode},
   8:Menu.c        ****     {6,&M1reset},
   9:Menu.c        ****     {7,&M1rainbow}    
  10:Menu.c        **** }};
  11:Menu.c        **** const struct Menu M1mode={5,MsetMode,{
  12:Menu.c        ****     {1,0},//Hour only
  13:Menu.c        ****     {2,0},//Hour + temp (slow)
  14:Menu.c        ****     {3,0},//Hour + temp (fast)
  15:Menu.c        ****     {4,0},//temp only
  16:Menu.c        ****     {HEURE,&M0main}//return    
  17:Menu.c        **** }};
  18:Menu.c        **** const struct Menu M1cmode={8,MsetColorMode,{
  19:Menu.c        ****     {1,0},//fixed
  20:Menu.c        ****     {2,0},//random single (slow)
  21:Menu.c        ****     {3,0},//random single (fast)
  22:Menu.c        ****     {4,0},//random all (slow)
  23:Menu.c        ****     {5,0},//random all (fast)
  24:Menu.c        ****     {6,0},//cycle (slow)
  25:Menu.c        ****     {7,0},//cycle (fast)
  26:Menu.c        ****     {HEURE,&M0main}//return    
  27:Menu.c        **** }};
  28:Menu.c        **** const struct Menu M1nightmode={4,MsetNightMode,{
  29:Menu.c        ****     {1,0},//none
  30:Menu.c        ****     {2,&M2offhour},//Half brightness
  31:Menu.c        ****     {3,&M2offhour},//Off completely
  32:Menu.c        ****     {HEURE,&M0main}//return
  33:Menu.c        **** }};
  34:Menu.c        **** const struct Menu M2offhour={12,MsetNightOff,{
  35:Menu.c        ****     {1,&M3onhour},//heures
  36:Menu.c        ****     {2,&M3onhour},
  37:Menu.c        ****     {3,&M3onhour},
  38:Menu.c        ****     {4,&M3onhour},
  39:Menu.c        ****     {5,&M3onhour},
  40:Menu.c        ****     {6,&M3onhour},
  41:Menu.c        ****     {7,&M3onhour},
  42:Menu.c        ****     {8,&M3onhour},
  43:Menu.c        ****     {9,&M3onhour},
  44:Menu.c        ****     {10,&M3onhour},
  45:Menu.c        ****     {11,&M3onhour},
  46:Menu.c        ****     {HEURE,&M1nightmode}//return
  47:Menu.c        **** }};
  48:Menu.c        **** const struct Menu M3onhour={12,MsetNightOn,{
  49:Menu.c        ****     {1,0},//heure
  50:Menu.c        ****     {2,0},
  51:Menu.c        ****     {3,0},
  52:Menu.c        ****     {4,0},
  53:Menu.c        ****     {5,0},
  54:Menu.c        ****     {6,0},
  55:Menu.c        ****     {7,0},
  56:Menu.c        ****     {8,0},
  57:Menu.c        ****     {9,0},
  58:Menu.c        ****     {10,0},
  59:Menu.c        ****     {11,0},
  60:Menu.c        ****     {HEURE,&M1nightmode}//return
  61:Menu.c        **** }};
  62:Menu.c        **** const struct Menu M1setTime={5,0,{
  63:Menu.c        ****     {1,&M2sethouram},//hour am
  64:Menu.c        ****     {2,&M2sethourpm},//hour pm
  65:Menu.c        ****     {3,&M2setminam},//min am
  66:Menu.c        ****     {4,&M2setminpm},//min pm
  67:Menu.c        ****     {HEURE,&M0main}//return
  68:Menu.c        **** }};
  69:Menu.c        **** const struct Menu M2sethouram={13,MsetHouram,{
  70:Menu.c        ****     {1,0},//heure
  71:Menu.c        ****     {2,0},
  72:Menu.c        ****     {3,0},
  73:Menu.c        ****     {4,0},
  74:Menu.c        ****     {5,0},
  75:Menu.c        ****     {6,0},
  76:Menu.c        ****     {7,0},
  77:Menu.c        ****     {8,0},
  78:Menu.c        ****     {9,0},
  79:Menu.c        ****     {10,0},
  80:Menu.c        ****     {11,0},
  81:Menu.c        ****     {MIDI,0},//midi
  82:Menu.c        ****     {HEURE,&M1setTime}//return
  83:Menu.c        **** }};
  84:Menu.c        **** const struct Menu M2sethourpm={13,MsetHourpm,{
  85:Menu.c        ****     {1,0},//heure
  86:Menu.c        ****     {2,0},
  87:Menu.c        ****     {3,0},
  88:Menu.c        ****     {4,0},
  89:Menu.c        ****     {5,0},
  90:Menu.c        ****     {6,0},
  91:Menu.c        ****     {7,0},
  92:Menu.c        ****     {8,0},
  93:Menu.c        ****     {9,0},
  94:Menu.c        ****     {10,0},
  95:Menu.c        ****     {11,0},
  96:Menu.c        ****     {MINUIT,0},//minuit
  97:Menu.c        ****     {HEURE,&M1setTime}//return
  98:Menu.c        **** }};
  99:Menu.c        **** const struct Menu M2setminam={4,MsetMinam,{
 100:Menu.c        ****     {DIX,0},//dix
 101:Menu.c        ****     {VINGT,0},//vingt
 102:Menu.c        ****     {ETDEMIE,0},//1/2
 103:Menu.c        ****     {HEURE,&M1setTime}//return
 104:Menu.c        **** }};
 105:Menu.c        **** const struct Menu M2setminpm={4,MsetMinpm,{
 106:Menu.c        ****     {DIX,0},//dix
 107:Menu.c        ****     {VINGT,0},//vingt
 108:Menu.c        ****     {ETDEMIE,0},//1/2
 109:Menu.c        ****     {HEURE,&M1setTime}//return
 110:Menu.c        **** }};
 111:Menu.c        **** const struct Menu M1eventMode={3,MsetEventMode,{
 112:Menu.c        ****     {1,0},//Event on
 113:Menu.c        ****     {2,0},//Event off
 114:Menu.c        ****     {HEURE,&M0main}//return
 115:Menu.c        **** }};
 116:Menu.c        **** const struct Menu M1reset={3,Mreset,{
 117:Menu.c        ****     {1,0},//yes
 118:Menu.c        ****     {HEURE,&M0main}//return
 119:Menu.c        **** }};
 120:Menu.c        **** const struct Menu M1rainbow={3,MsetRainbow,{
 121:Menu.c        ****     {1,0},//Rainbow on
 122:Menu.c        ****     {2,0},//Rainbow off
 123:Menu.c        ****     {HEURE,&M0main}//return
 124:Menu.c        **** }};
 125:Menu.c        **** 
 126:Menu.c        **** void MsetMode(uint8_t i){
 127:Menu.c        **** }
 128:Menu.c        **** void MsetColorMode(uint8_t i){
 129:Menu.c        **** }
 130:Menu.c        **** void MsetNightMode(uint8_t i){
 131:Menu.c        **** }
 132:Menu.c        **** void MsetNightOff(uint8_t i){
 133:Menu.c        **** }
 134:Menu.c        **** void MsetNightOn(uint8_t i){
 135:Menu.c        **** }
 136:Menu.c        **** void MsetHouram(uint8_t i){
 137:Menu.c        **** }
 138:Menu.c        **** void MsetHourpm(uint8_t i){
 139:Menu.c        **** }
 140:Menu.c        **** void MsetMinam(uint8_t i){
 141:Menu.c        **** }
 142:Menu.c        **** void MsetMinpm(uint8_t i){
 143:Menu.c        **** }
 144:Menu.c        **** void MsetEventMode(uint8_t i){
 145:Menu.c        **** }
 146:Menu.c        **** void Mreset(uint8_t i){
 147:Menu.c        **** }
 148:Menu.c        **** void MsetRainbow(uint8_t i){
  15               		.loc 1 148 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE17:
  26               	.global	Mreset
  28               	Mreset:
  29               	.LFB19:
  30               		.cfi_startproc
  31               	/* prologue: function */
  32               	/* frame size = 0 */
  33               	/* stack size = 0 */
  34               	.L__stack_usage = 0
  35 0002 0895      		ret
  36               		.cfi_endproc
  37               	.LFE19:
  39               	.global	MsetMode
  41               	MsetMode:
  42               	.LFB39:
  43               		.cfi_startproc
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 0 */
  47               	.L__stack_usage = 0
  48 0004 0895      		ret
  49               		.cfi_endproc
  50               	.LFE39:
  52               	.global	MsetColorMode
  54               	MsetColorMode:
  55               	.LFB37:
  56               		.cfi_startproc
  57               	/* prologue: function */
  58               	/* frame size = 0 */
  59               	/* stack size = 0 */
  60               	.L__stack_usage = 0
  61 0006 0895      		ret
  62               		.cfi_endproc
  63               	.LFE37:
  65               	.global	MsetNightMode
  67               	MsetNightMode:
  68               	.LFB35:
  69               		.cfi_startproc
  70               	/* prologue: function */
  71               	/* frame size = 0 */
  72               	/* stack size = 0 */
  73               	.L__stack_usage = 0
  74 0008 0895      		ret
  75               		.cfi_endproc
  76               	.LFE35:
  78               	.global	MsetNightOff
  80               	MsetNightOff:
  81               	.LFB33:
  82               		.cfi_startproc
  83               	/* prologue: function */
  84               	/* frame size = 0 */
  85               	/* stack size = 0 */
  86               	.L__stack_usage = 0
  87 000a 0895      		ret
  88               		.cfi_endproc
  89               	.LFE33:
  91               	.global	MsetNightOn
  93               	MsetNightOn:
  94               	.LFB31:
  95               		.cfi_startproc
  96               	/* prologue: function */
  97               	/* frame size = 0 */
  98               	/* stack size = 0 */
  99               	.L__stack_usage = 0
 100 000c 0895      		ret
 101               		.cfi_endproc
 102               	.LFE31:
 104               	.global	MsetHouram
 106               	MsetHouram:
 107               	.LFB29:
 108               		.cfi_startproc
 109               	/* prologue: function */
 110               	/* frame size = 0 */
 111               	/* stack size = 0 */
 112               	.L__stack_usage = 0
 113 000e 0895      		ret
 114               		.cfi_endproc
 115               	.LFE29:
 117               	.global	MsetHourpm
 119               	MsetHourpm:
 120               	.LFB27:
 121               		.cfi_startproc
 122               	/* prologue: function */
 123               	/* frame size = 0 */
 124               	/* stack size = 0 */
 125               	.L__stack_usage = 0
 126 0010 0895      		ret
 127               		.cfi_endproc
 128               	.LFE27:
 130               	.global	MsetMinam
 132               	MsetMinam:
 133               	.LFB25:
 134               		.cfi_startproc
 135               	/* prologue: function */
 136               	/* frame size = 0 */
 137               	/* stack size = 0 */
 138               	.L__stack_usage = 0
 139 0012 0895      		ret
 140               		.cfi_endproc
 141               	.LFE25:
 143               	.global	MsetMinpm
 145               	MsetMinpm:
 146               	.LFB23:
 147               		.cfi_startproc
 148               	/* prologue: function */
 149               	/* frame size = 0 */
 150               	/* stack size = 0 */
 151               	.L__stack_usage = 0
 152 0014 0895      		ret
 153               		.cfi_endproc
 154               	.LFE23:
 156               	.global	MsetEventMode
 158               	MsetEventMode:
 159               	.LFB21:
 160               		.cfi_startproc
 161               	/* prologue: function */
 162               	/* frame size = 0 */
 163               	/* stack size = 0 */
 164               	.L__stack_usage = 0
 165 0016 0895      		ret
 166               		.cfi_endproc
 167               	.LFE21:
 169               	.global	M1rainbow
 170               		.section	.rodata
 173               	M1rainbow:
 174 0000 03        		.byte	3
 175 0001 0000      		.word	gs(MsetRainbow)
 176 0003 01        		.byte	1
 177 0004 0000      		.word	0
 178 0006 02        		.byte	2
 179 0007 0000      		.word	0
 180 0009 0F        		.byte	15
 181 000a 0000      		.word	M0main
 182               	.global	M1reset
 185               	M1reset:
 186 000c 03        		.byte	3
 187 000d 0000      		.word	gs(Mreset)
 188 000f 01        		.byte	1
 189 0010 0000      		.word	0
 190 0012 0F        		.byte	15
 191 0013 0000      		.word	M0main
 192               	.global	M1eventMode
 195               	M1eventMode:
 196 0015 03        		.byte	3
 197 0016 0000      		.word	gs(MsetEventMode)
 198 0018 01        		.byte	1
 199 0019 0000      		.word	0
 200 001b 02        		.byte	2
 201 001c 0000      		.word	0
 202 001e 0F        		.byte	15
 203 001f 0000      		.word	M0main
 204               	.global	M2setminpm
 207               	M2setminpm:
 208 0021 04        		.byte	4
 209 0022 0000      		.word	gs(MsetMinpm)
 210 0024 05        		.byte	5
 211 0025 0000      		.word	0
 212 0027 0B        		.byte	11
 213 0028 0000      		.word	0
 214 002a 01        		.byte	1
 215 002b 0000      		.word	0
 216 002d 0F        		.byte	15
 217 002e 0000      		.word	M1setTime
 218               	.global	M2setminam
 221               	M2setminam:
 222 0030 04        		.byte	4
 223 0031 0000      		.word	gs(MsetMinam)
 224 0033 05        		.byte	5
 225 0034 0000      		.word	0
 226 0036 0B        		.byte	11
 227 0037 0000      		.word	0
 228 0039 01        		.byte	1
 229 003a 0000      		.word	0
 230 003c 0F        		.byte	15
 231 003d 0000      		.word	M1setTime
 232               	.global	M2sethourpm
 235               	M2sethourpm:
 236 003f 0D        		.byte	13
 237 0040 0000      		.word	gs(MsetHourpm)
 238 0042 01        		.byte	1
 239 0043 0000      		.word	0
 240 0045 02        		.byte	2
 241 0046 0000      		.word	0
 242 0048 03        		.byte	3
 243 0049 0000      		.word	0
 244 004b 04        		.byte	4
 245 004c 0000      		.word	0
 246 004e 05        		.byte	5
 247 004f 0000      		.word	0
 248 0051 06        		.byte	6
 249 0052 0000      		.word	0
 250 0054 07        		.byte	7
 251 0055 0000      		.word	0
 252 0057 08        		.byte	8
 253 0058 0000      		.word	0
 254 005a 09        		.byte	9
 255 005b 0000      		.word	0
 256 005d 0A        		.byte	10
 257 005e 0000      		.word	0
 258 0060 0B        		.byte	11
 259 0061 0000      		.word	0
 260 0063 03        		.byte	3
 261 0064 0000      		.word	0
 262 0066 0F        		.byte	15
 263 0067 0000      		.word	M1setTime
 264               	.global	M2sethouram
 267               	M2sethouram:
 268 0069 0D        		.byte	13
 269 006a 0000      		.word	gs(MsetHouram)
 270 006c 01        		.byte	1
 271 006d 0000      		.word	0
 272 006f 02        		.byte	2
 273 0070 0000      		.word	0
 274 0072 03        		.byte	3
 275 0073 0000      		.word	0
 276 0075 04        		.byte	4
 277 0076 0000      		.word	0
 278 0078 05        		.byte	5
 279 0079 0000      		.word	0
 280 007b 06        		.byte	6
 281 007c 0000      		.word	0
 282 007e 07        		.byte	7
 283 007f 0000      		.word	0
 284 0081 08        		.byte	8
 285 0082 0000      		.word	0
 286 0084 09        		.byte	9
 287 0085 0000      		.word	0
 288 0087 0A        		.byte	10
 289 0088 0000      		.word	0
 290 008a 0B        		.byte	11
 291 008b 0000      		.word	0
 292 008d 0D        		.byte	13
 293 008e 0000      		.word	0
 294 0090 0F        		.byte	15
 295 0091 0000      		.word	M1setTime
 296               	.global	M1setTime
 299               	M1setTime:
 300 0093 05        		.byte	5
 301 0094 0000      		.word	0
 302 0096 01        		.byte	1
 303 0097 0000      		.word	M2sethouram
 304 0099 02        		.byte	2
 305 009a 0000      		.word	M2sethourpm
 306 009c 03        		.byte	3
 307 009d 0000      		.word	M2setminam
 308 009f 04        		.byte	4
 309 00a0 0000      		.word	M2setminpm
 310 00a2 0F        		.byte	15
 311 00a3 0000      		.word	M0main
 312               	.global	M3onhour
 315               	M3onhour:
 316 00a5 0C        		.byte	12
 317 00a6 0000      		.word	gs(MsetNightOn)
 318 00a8 01        		.byte	1
 319 00a9 0000      		.word	0
 320 00ab 02        		.byte	2
 321 00ac 0000      		.word	0
 322 00ae 03        		.byte	3
 323 00af 0000      		.word	0
 324 00b1 04        		.byte	4
 325 00b2 0000      		.word	0
 326 00b4 05        		.byte	5
 327 00b5 0000      		.word	0
 328 00b7 06        		.byte	6
 329 00b8 0000      		.word	0
 330 00ba 07        		.byte	7
 331 00bb 0000      		.word	0
 332 00bd 08        		.byte	8
 333 00be 0000      		.word	0
 334 00c0 09        		.byte	9
 335 00c1 0000      		.word	0
 336 00c3 0A        		.byte	10
 337 00c4 0000      		.word	0
 338 00c6 0B        		.byte	11
 339 00c7 0000      		.word	0
 340 00c9 0F        		.byte	15
 341 00ca 0000      		.word	M1nightmode
 342               	.global	M2offhour
 345               	M2offhour:
 346 00cc 0C        		.byte	12
 347 00cd 0000      		.word	gs(MsetNightOff)
 348 00cf 01        		.byte	1
 349 00d0 0000      		.word	M3onhour
 350 00d2 02        		.byte	2
 351 00d3 0000      		.word	M3onhour
 352 00d5 03        		.byte	3
 353 00d6 0000      		.word	M3onhour
 354 00d8 04        		.byte	4
 355 00d9 0000      		.word	M3onhour
 356 00db 05        		.byte	5
 357 00dc 0000      		.word	M3onhour
 358 00de 06        		.byte	6
 359 00df 0000      		.word	M3onhour
 360 00e1 07        		.byte	7
 361 00e2 0000      		.word	M3onhour
 362 00e4 08        		.byte	8
 363 00e5 0000      		.word	M3onhour
 364 00e7 09        		.byte	9
 365 00e8 0000      		.word	M3onhour
 366 00ea 0A        		.byte	10
 367 00eb 0000      		.word	M3onhour
 368 00ed 0B        		.byte	11
 369 00ee 0000      		.word	M3onhour
 370 00f0 0F        		.byte	15
 371 00f1 0000      		.word	M1nightmode
 372               	.global	M1nightmode
 375               	M1nightmode:
 376 00f3 04        		.byte	4
 377 00f4 0000      		.word	gs(MsetNightMode)
 378 00f6 01        		.byte	1
 379 00f7 0000      		.word	0
 380 00f9 02        		.byte	2
 381 00fa 0000      		.word	M2offhour
 382 00fc 03        		.byte	3
 383 00fd 0000      		.word	M2offhour
 384 00ff 0F        		.byte	15
 385 0100 0000      		.word	M0main
 386               	.global	M1cmode
 389               	M1cmode:
 390 0102 08        		.byte	8
 391 0103 0000      		.word	gs(MsetColorMode)
 392 0105 01        		.byte	1
 393 0106 0000      		.word	0
 394 0108 02        		.byte	2
 395 0109 0000      		.word	0
 396 010b 03        		.byte	3
 397 010c 0000      		.word	0
 398 010e 04        		.byte	4
 399 010f 0000      		.word	0
 400 0111 05        		.byte	5
 401 0112 0000      		.word	0
 402 0114 06        		.byte	6
 403 0115 0000      		.word	0
 404 0117 07        		.byte	7
 405 0118 0000      		.word	0
 406 011a 0F        		.byte	15
 407 011b 0000      		.word	M0main
 408               	.global	M1mode
 411               	M1mode:
 412 011d 05        		.byte	5
 413 011e 0000      		.word	gs(MsetMode)
 414 0120 01        		.byte	1
 415 0121 0000      		.word	0
 416 0123 02        		.byte	2
 417 0124 0000      		.word	0
 418 0126 03        		.byte	3
 419 0127 0000      		.word	0
 420 0129 04        		.byte	4
 421 012a 0000      		.word	0
 422 012c 0F        		.byte	15
 423 012d 0000      		.word	M0main
 424               	.global	M0main
 427               	M0main:
 428 012f 07        		.byte	7
 429 0130 0000      		.word	0
 430 0132 01        		.byte	1
 431 0133 0000      		.word	M1mode
 432 0135 02        		.byte	2
 433 0136 0000      		.word	M1cmode
 434 0138 03        		.byte	3
 435 0139 0000      		.word	M1nightmode
 436 013b 04        		.byte	4
 437 013c 0000      		.word	M1setTime
 438 013e 05        		.byte	5
 439 013f 0000      		.word	M1eventMode
 440 0141 06        		.byte	6
 441 0142 0000      		.word	M1reset
 442 0144 07        		.byte	7
 443 0145 0000      		.word	M1rainbow
 444               		.comm	currentColor,3,1
 445               		.comm	USI_I2C_Master_State,1,1
 446               		.comm	currentTime,5,1
 447               		.text
 448               	.Letext0:
 449               		.file 2 "/usr/lib/avr/include/stdint.h"
 450               		.file 3 "RTC.h"
 451               		.file 4 "Led.h"
 452               		.file 5 "Menu.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Menu.c
     /tmp/cct4UUpY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cct4UUpY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cct4UUpY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cct4UUpY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cct4UUpY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cct4UUpY.s:12     .text:0000000000000000 MsetRainbow
     /tmp/cct4UUpY.s:28     .text:0000000000000002 Mreset
     /tmp/cct4UUpY.s:41     .text:0000000000000004 MsetMode
     /tmp/cct4UUpY.s:54     .text:0000000000000006 MsetColorMode
     /tmp/cct4UUpY.s:67     .text:0000000000000008 MsetNightMode
     /tmp/cct4UUpY.s:80     .text:000000000000000a MsetNightOff
     /tmp/cct4UUpY.s:93     .text:000000000000000c MsetNightOn
     /tmp/cct4UUpY.s:106    .text:000000000000000e MsetHouram
     /tmp/cct4UUpY.s:119    .text:0000000000000010 MsetHourpm
     /tmp/cct4UUpY.s:132    .text:0000000000000012 MsetMinam
     /tmp/cct4UUpY.s:145    .text:0000000000000014 MsetMinpm
     /tmp/cct4UUpY.s:158    .text:0000000000000016 MsetEventMode
     /tmp/cct4UUpY.s:173    .rodata:0000000000000000 M1rainbow
     /tmp/cct4UUpY.s:427    .rodata:000000000000012f M0main
     /tmp/cct4UUpY.s:185    .rodata:000000000000000c M1reset
     /tmp/cct4UUpY.s:195    .rodata:0000000000000015 M1eventMode
     /tmp/cct4UUpY.s:207    .rodata:0000000000000021 M2setminpm
     /tmp/cct4UUpY.s:299    .rodata:0000000000000093 M1setTime
     /tmp/cct4UUpY.s:221    .rodata:0000000000000030 M2setminam
     /tmp/cct4UUpY.s:235    .rodata:000000000000003f M2sethourpm
     /tmp/cct4UUpY.s:267    .rodata:0000000000000069 M2sethouram
     /tmp/cct4UUpY.s:315    .rodata:00000000000000a5 M3onhour
     /tmp/cct4UUpY.s:375    .rodata:00000000000000f3 M1nightmode
     /tmp/cct4UUpY.s:345    .rodata:00000000000000cc M2offhour
     /tmp/cct4UUpY.s:389    .rodata:0000000000000102 M1cmode
     /tmp/cct4UUpY.s:411    .rodata:000000000000011d M1mode
                            *COM*:0000000000000003 currentColor
                            *COM*:0000000000000001 USI_I2C_Master_State
                            *COM*:0000000000000005 currentTime

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
