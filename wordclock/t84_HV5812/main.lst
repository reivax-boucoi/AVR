   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	sendRawData
  12               	sendRawData:
  13               	.LFB6:
  14               		.file 1 "main.c"
   1:main.c        **** #define F_CPU 16000000UL
   2:main.c        **** #include <avr/io.h>
   3:main.c        **** #include <avr/interrupt.h>
   4:main.c        **** #include <util/delay.h>
   5:main.c        **** #include "defines.h"
   6:main.c        **** #include "Led.h"
   7:main.c        **** #include "RTC.h"
   8:main.c        **** 
   9:main.c        **** void sendRawData(uint32_t data){
  15               		.loc 1 9 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 0F93      		push r16
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 16, -2
  22 0002 1F93      		push r17
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 17, -3
  26               	/* prologue: function */
  27               	/* frame size = 0 */
  28               	/* stack size = 2 */
  29               	.L__stack_usage = 2
  10:main.c        ****     PORTA &=~(STROBE|CLK);
  30               		.loc 1 10 0
  31 0004 2BB3      		in r18,0x1b
  32 0006 237F      		andi r18,lo8(-13)
  33 0008 2BBB      		out 0x1b,r18
  34               	.LVL1:
  35 000a 40E0      		ldi r20,0
  36 000c 50E0      		ldi r21,0
  37               	.LVL2:
  38               	.L4:
  39               	.LBB2:
  11:main.c        ****     for(uint8_t i=0;i<20;i++){
  12:main.c        ****         if((data>>i) & 0x00000001){
  40               		.loc 1 12 0
  41 000e 8B01      		movw r16,r22
  42 0010 9C01      		movw r18,r24
  43 0012 042E      		mov r0,r20
  44 0014 00C0      		rjmp 2f
  45               		1:
  46 0016 3695      		lsr r19
  47 0018 2795      		ror r18
  48 001a 1795      		ror r17
  49 001c 0795      		ror r16
  50               		2:
  51 001e 0A94      		dec r0
  52 0020 02F4      		brpl 1b
  53 0022 00FF      		sbrs r16,0
  54 0024 00C0      		rjmp .L2
  13:main.c        ****             PORTA|=DATA;
  55               		.loc 1 13 0
  56 0026 D99A      		sbi 0x1b,1
  57 0028 00C0      		rjmp .L3
  58               	.L2:
  14:main.c        ****         }else{
  15:main.c        ****             PORTA&=~DATA;
  59               		.loc 1 15 0
  60 002a D998      		cbi 0x1b,1
  61               	.L3:
  16:main.c        ****         }
  17:main.c        ****         PORTA|=CLK;
  62               		.loc 1 17 0 discriminator 2
  63 002c DB9A      		sbi 0x1b,3
  18:main.c        ****         PORTA&=~CLK;
  64               		.loc 1 18 0 discriminator 2
  65 002e DB98      		cbi 0x1b,3
  66               	.LVL3:
  67 0030 4F5F      		subi r20,-1
  68 0032 5F4F      		sbci r21,-1
  69               	.LVL4:
  11:main.c        ****         if((data>>i) & 0x00000001){
  70               		.loc 1 11 0 discriminator 2
  71 0034 4431      		cpi r20,20
  72 0036 5105      		cpc r21,__zero_reg__
  73 0038 01F4      		brne .L4
  74               	.LBE2:
  19:main.c        ****     }
  20:main.c        ****     PORTA|=STROBE;
  75               		.loc 1 20 0
  76 003a DA9A      		sbi 0x1b,2
  21:main.c        ****     PORTA&=~STROBE;
  77               		.loc 1 21 0
  78 003c DA98      		cbi 0x1b,2
  79               	/* epilogue start */
  22:main.c        **** }
  80               		.loc 1 22 0
  81 003e 1F91      		pop r17
  82 0040 0F91      		pop r16
  83 0042 0895      		ret
  84               		.cfi_endproc
  85               	.LFE6:
  87               	.global	sendData
  89               	sendData:
  90               	.LFB7:
  23:main.c        **** uint8_t ledr=0;
  24:main.c        **** uint8_t ledb=0;
  25:main.c        **** void sendData(uint32_t data){
  91               		.loc 1 25 0
  92               		.cfi_startproc
  93               	.LVL5:
  94               	/* prologue: function */
  95               	/* frame size = 0 */
  96               	/* stack size = 0 */
  97               	.L__stack_usage = 0
  26:main.c        ****     if(ledr)data|=LEDR;
  98               		.loc 1 26 0
  99 0044 2091 0000 		lds r18,ledr
 100 0048 2111      		cpse r18,__zero_reg__
 101               		.loc 1 26 0 is_stmt 0 discriminator 1
 102 004a 7860      		ori r23,8
 103               	.LVL6:
 104               	.L8:
  27:main.c        ****     if(ledb)data|=LEDB;
 105               		.loc 1 27 0 is_stmt 1
 106 004c 2091 0000 		lds r18,ledb
 107 0050 2111      		cpse r18,__zero_reg__
 108               		.loc 1 27 0 is_stmt 0 discriminator 1
 109 0052 7460      		ori r23,4
 110               	.LVL7:
 111               	.L9:
  28:main.c        ****     sendRawData(data);
 112               		.loc 1 28 0 is_stmt 1
 113 0054 00C0      		rjmp sendRawData
 114               	.LVL8:
 115               		.cfi_endproc
 116               	.LFE7:
 118               		.section	.text.startup,"ax",@progbits
 119               	.global	main
 121               	main:
 122               	.LFB8:
  29:main.c        **** }
  30:main.c        **** volatile uint8_t state=0;
  31:main.c        **** Led leds[NBLEDS];
  32:main.c        **** 
  33:main.c        **** int main(void){    
 123               		.loc 1 33 0
 124               		.cfi_startproc
 125               	/* prologue: function */
 126               	/* frame size = 0 */
 127               	/* stack size = 0 */
 128               	.L__stack_usage = 0
  34:main.c        ****     DDRA |= CLK|DATA|STROBE|LED;
 129               		.loc 1 34 0
 130 0000 8AB3      		in r24,0x1a
 131 0002 8F60      		ori r24,lo8(15)
 132 0004 8ABB      		out 0x1a,r24
  35:main.c        ****     PORTA &= ~(CLK|DATA|STROBE|LED);
 133               		.loc 1 35 0
 134 0006 8BB3      		in r24,0x1b
 135 0008 807F      		andi r24,lo8(-16)
 136 000a 8BBB      		out 0x1b,r24
  36:main.c        ****     ledInit(leds);
 137               		.loc 1 36 0
 138 000c 80E0      		ldi r24,lo8(leds)
 139 000e 90E0      		ldi r25,hi8(leds)
 140 0010 00D0      		rcall ledInit
 141               	.LVL9:
  37:main.c        ****     
  38:main.c        ****     TIMSK1|=(1<<TOIE1);
 142               		.loc 1 38 0
 143 0012 609A      		sbi 0xc,0
  39:main.c        ****     TIMSK0|=(1<<TOIE0);
 144               		.loc 1 39 0
 145 0014 89B7      		in r24,0x39
 146 0016 8160      		ori r24,lo8(1)
 147 0018 89BF      		out 0x39,r24
  40:main.c        ****     sei();
 148               		.loc 1 40 0
 149               	/* #APP */
 150               	 ;  40 "main.c" 1
 151 001a 7894      		sei
 152               	 ;  0 "" 2
  41:main.c        ****     /*
  42:main.c        ****     sendData(0b11111100001111111111 | LEDB);
  43:main.c        ****     _delay_ms(2500);
  44:main.c        ****     sendData(0b11000000001111111111);
  45:main.c        ****     _delay_ms(2500);
  46:main.c        ****     sendData(0b00001100001111111111 | LEDR);
  47:main.c        ****     _delay_ms(2500);
  48:main.c        ****     sendData(0b00110000001111111111);
  49:main.c        ****     _delay_ms(2500);*/
  50:main.c        ****     sendData(0b00000100000000000001 | LEDR);
 153               		.loc 1 50 0
 154               	/* #NOAPP */
 155 001c 61E0      		ldi r22,lo8(1)
 156 001e 78E4      		ldi r23,lo8(72)
 157 0020 80E0      		ldi r24,0
 158 0022 90E0      		ldi r25,0
 159 0024 00D0      		rcall sendData
 160               	.LVL10:
  51:main.c        ****     #ifdef DELLONG
  52:main.c        **** 		TCCR1B|=(1<<CS12)|(1<<CS10);
  53:main.c        **** 	#else
  54:main.c        **** 		TCCR1B|=(1<<CS12);//|(1<<CS10);
 161               		.loc 1 54 0
 162 0026 8EB5      		in r24,0x2e
 163 0028 8460      		ori r24,lo8(4)
 164 002a 8EBD      		out 0x2e,r24
  55:main.c        **** 	#endif
  56:main.c        **** 	
  57:main.c        **** 	TCCR0B|=(1<<CS01)|(1<<CS00);
 165               		.loc 1 57 0
 166 002c 83B7      		in r24,0x33
 167 002e 8360      		ori r24,lo8(3)
 168 0030 83BF      		out 0x33,r24
  58:main.c        ****     
  59:main.c        ****     currentColor=tcolorV(RED);
 169               		.loc 1 59 0
 170 0032 60E0      		ldi r22,0
 171 0034 70E0      		ldi r23,0
 172 0036 8FEF      		ldi r24,lo8(-1)
 173 0038 90E0      		ldi r25,0
 174 003a 00D0      		rcall tcolorV
 175               	.LVL11:
 176 003c 6093 0000 		sts currentColor,r22
 177 0040 7093 0000 		sts currentColor+1,r23
 178 0044 8093 0000 		sts currentColor+2,r24
  60:main.c        ****     setCurrentTime(15,45,7,11);
 179               		.loc 1 60 0
 180 0048 2BE0      		ldi r18,lo8(11)
 181 004a 47E0      		ldi r20,lo8(7)
 182 004c 6DE2      		ldi r22,lo8(45)
 183 004e 8FE0      		ldi r24,lo8(15)
 184 0050 00D0      		rcall setCurrentTime
 185               	.LVL12:
  61:main.c        **** 	//RTC_readTime(&currentTime);
  62:main.c        ****     currentTime.temp=11;
 186               		.loc 1 62 0
 187 0052 8BE0      		ldi r24,lo8(11)
 188 0054 8093 0000 		sts currentTime+4,r24
 189               	.L17:
 190 0058 00C0      		rjmp .L17
 191               		.cfi_endproc
 192               	.LFE8:
 194               		.text
 195               	.global	__vector_8
 197               	__vector_8:
 198               	.LFB9:
  63:main.c        ****     //setLeds(currentTime,leds,currentColor);
  64:main.c        ****     
  65:main.c        ****     while(1){
  66:main.c        ****        
  67:main.c        ****     }
  68:main.c        ****     return(0);
  69:main.c        ****     
  70:main.c        **** }
  71:main.c        **** ISR( TIM1_OVF_vect ){
 199               		.loc 1 71 0
 200               		.cfi_startproc
 201 0056 1F92      		push r1
 202               	.LCFI2:
 203               		.cfi_def_cfa_offset 3
 204               		.cfi_offset 1, -2
 205 0058 0F92      		push r0
 206               	.LCFI3:
 207               		.cfi_def_cfa_offset 4
 208               		.cfi_offset 0, -3
 209 005a 0FB6      		in r0,__SREG__
 210 005c 0F92      		push r0
 211 005e 1124      		clr __zero_reg__
 212 0060 8F93      		push r24
 213               	.LCFI4:
 214               		.cfi_def_cfa_offset 5
 215               		.cfi_offset 24, -4
 216 0062 9F93      		push r25
 217               	.LCFI5:
 218               		.cfi_def_cfa_offset 6
 219               		.cfi_offset 25, -5
 220               	/* prologue: Signal */
 221               	/* frame size = 0 */
 222               	/* stack size = 5 */
 223               	.L__stack_usage = 5
  72:main.c        ****     ledb=1-ledb;
 224               		.loc 1 72 0
 225 0064 9091 0000 		lds r25,ledb
 226 0068 81E0      		ldi r24,lo8(1)
 227 006a 891B      		sub r24,r25
 228 006c 8093 0000 		sts ledb,r24
  73:main.c        ****     ledr=!ledb;
 229               		.loc 1 73 0
 230 0070 91E0      		ldi r25,lo8(1)
 231 0072 8111      		cpse r24,__zero_reg__
 232 0074 90E0      		ldi r25,0
 233               	.L19:
 234 0076 9093 0000 		sts ledr,r25
 235               	/* epilogue start */
  74:main.c        ****     //RTC_readTime(&currentTime);
  75:main.c        ****     //setLeds(currentTime,leds,currentColor);
  76:main.c        **** }
 236               		.loc 1 76 0
 237 007a 9F91      		pop r25
 238 007c 8F91      		pop r24
 239 007e 0F90      		pop r0
 240 0080 0FBE      		out __SREG__,r0
 241 0082 0F90      		pop r0
 242 0084 1F90      		pop r1
 243 0086 1895      		reti
 244               		.cfi_endproc
 245               	.LFE9:
 247               	.global	__vector_11
 249               	__vector_11:
 250               	.LFB10:
  77:main.c        **** ISR( TIM0_OVF_vect ){/*
 251               		.loc 1 77 0
 252               		.cfi_startproc
 253 0088 1F92      		push r1
 254               	.LCFI6:
 255               		.cfi_def_cfa_offset 3
 256               		.cfi_offset 1, -2
 257 008a 0F92      		push r0
 258               	.LCFI7:
 259               		.cfi_def_cfa_offset 4
 260               		.cfi_offset 0, -3
 261 008c 0FB6      		in r0,__SREG__
 262 008e 0F92      		push r0
 263 0090 1124      		clr __zero_reg__
 264               	/* prologue: Signal */
 265               	/* frame size = 0 */
 266               	/* stack size = 3 */
 267               	.L__stack_usage = 3
 268               	/* epilogue start */
  78:main.c        ****     switch(state){
  79:main.c        ****         case 0:
  80:main.c        ****             sendData(R2 | getDataByColor(tcolor(1,0,0),0,leds));
  81:main.c        ****             break;
  82:main.c        ****         case 1:
  83:main.c        ****             sendData(R1 | getDataByColor(tcolor(1,0,0),1,leds));
  84:main.c        ****             break;
  85:main.c        ****         case 2:
  86:main.c        ****             sendData(G2 | getDataByColor(tcolor(0,1,0),0,leds));
  87:main.c        ****             break;
  88:main.c        ****         case 3:
  89:main.c        ****             sendData(G1 | getDataByColor(tcolor(0,1,0),1,leds));
  90:main.c        ****             break;
  91:main.c        ****         case 4:
  92:main.c        ****             sendData(B2 | getDataByColor(tcolor(0,0,1),0,leds));
  93:main.c        ****             break;
  94:main.c        ****         case 5:
  95:main.c        ****             sendData(B1 | getDataByColor(tcolor(0,0,1),1,leds));
  96:main.c        ****             break;
  97:main.c        ****     }
  98:main.c        ****     state++;
  99:main.c        ****     if(state>5)state=0;*/
 100:main.c        **** }
 269               		.loc 1 100 0
 270 0092 0F90      		pop r0
 271 0094 0FBE      		out __SREG__,r0
 272 0096 0F90      		pop r0
 273 0098 1F90      		pop r1
 274 009a 1895      		reti
 275               		.cfi_endproc
 276               	.LFE10:
 278               		.comm	leds,95,1
 279               	.global	state
 280               		.section .bss
 283               	state:
 284 0000 00        		.zero	1
 285               	.global	ledb
 288               	ledb:
 289 0001 00        		.zero	1
 290               	.global	ledr
 293               	ledr:
 294 0002 00        		.zero	1
 295               		.comm	currentColor,3,1
 296               		.comm	USI_I2C_Master_State,1,1
 297               		.comm	currentTime,5,1
 298               		.text
 299               	.Letext0:
 300               		.file 2 "/usr/lib/avr/include/stdint.h"
 301               		.file 3 "RTC.h"
 302               		.file 4 "Led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccaPWKJa.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccaPWKJa.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccaPWKJa.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccaPWKJa.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccaPWKJa.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccaPWKJa.s:12     .text:0000000000000000 sendRawData
     /tmp/ccaPWKJa.s:89     .text:0000000000000044 sendData
     /tmp/ccaPWKJa.s:293    .bss:0000000000000002 ledr
     /tmp/ccaPWKJa.s:288    .bss:0000000000000001 ledb
     /tmp/ccaPWKJa.s:121    .text.startup:0000000000000000 main
                            *COM*:000000000000005f leds
                            *COM*:0000000000000003 currentColor
                            *COM*:0000000000000005 currentTime
     /tmp/ccaPWKJa.s:197    .text:0000000000000056 __vector_8
     /tmp/ccaPWKJa.s:249    .text:0000000000000088 __vector_11
     /tmp/ccaPWKJa.s:283    .bss:0000000000000000 state
                            *COM*:0000000000000001 USI_I2C_Master_State

UNDEFINED SYMBOLS
ledInit
tcolorV
setCurrentTime
__do_clear_bss
