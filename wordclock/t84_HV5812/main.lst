   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	sendRawData
  12               	sendRawData:
  13               	.LFB6:
  14               		.file 1 "main.c"
   1:main.c        **** #define F_CPU 16000000UL
   2:main.c        **** #include <avr/io.h>
   3:main.c        **** #include <avr/interrupt.h>
   4:main.c        **** #include <util/delay.h>
   5:main.c        **** #include "defines.h"
   6:main.c        **** #include "Led.h"
   7:main.c        **** #include "RTC.h"
   8:main.c        **** 
   9:main.c        **** void sendRawData(uint32_t data){
  15               		.loc 1 9 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 0F93      		push r16
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 16, -2
  22 0002 1F93      		push r17
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 17, -3
  26               	/* prologue: function */
  27               	/* frame size = 0 */
  28               	/* stack size = 2 */
  29               	.L__stack_usage = 2
  10:main.c        ****     PORTA &=~(STROBE|CLK);
  30               		.loc 1 10 0
  31 0004 2BB3      		in r18,0x1b
  32 0006 237F      		andi r18,lo8(-13)
  33 0008 2BBB      		out 0x1b,r18
  34               	.LVL1:
  35 000a 40E0      		ldi r20,0
  36 000c 50E0      		ldi r21,0
  37               	.LVL2:
  38               	.L4:
  39               	.LBB2:
  11:main.c        ****     for(uint8_t i=0;i<20;i++){
  12:main.c        ****         if((data>>i) & 0x00000001){
  40               		.loc 1 12 0
  41 000e 8B01      		movw r16,r22
  42 0010 9C01      		movw r18,r24
  43 0012 042E      		mov r0,r20
  44 0014 00C0      		rjmp 2f
  45               		1:
  46 0016 3695      		lsr r19
  47 0018 2795      		ror r18
  48 001a 1795      		ror r17
  49 001c 0795      		ror r16
  50               		2:
  51 001e 0A94      		dec r0
  52 0020 02F4      		brpl 1b
  53 0022 00FF      		sbrs r16,0
  54 0024 00C0      		rjmp .L2
  13:main.c        ****             PORTA|=DATA;
  55               		.loc 1 13 0
  56 0026 D99A      		sbi 0x1b,1
  57 0028 00C0      		rjmp .L3
  58               	.L2:
  14:main.c        ****         }else{
  15:main.c        ****             PORTA&=~DATA;
  59               		.loc 1 15 0
  60 002a D998      		cbi 0x1b,1
  61               	.L3:
  16:main.c        ****         }
  17:main.c        ****         PORTA|=CLK;
  62               		.loc 1 17 0 discriminator 2
  63 002c DB9A      		sbi 0x1b,3
  18:main.c        ****         PORTA&=~CLK;
  64               		.loc 1 18 0 discriminator 2
  65 002e DB98      		cbi 0x1b,3
  66               	.LVL3:
  67 0030 4F5F      		subi r20,-1
  68 0032 5F4F      		sbci r21,-1
  69               	.LVL4:
  11:main.c        ****         if((data>>i) & 0x00000001){
  70               		.loc 1 11 0 discriminator 2
  71 0034 4431      		cpi r20,20
  72 0036 5105      		cpc r21,__zero_reg__
  73 0038 01F4      		brne .L4
  74               	.LBE2:
  19:main.c        ****     }
  20:main.c        ****     PORTA|=STROBE;
  75               		.loc 1 20 0
  76 003a DA9A      		sbi 0x1b,2
  21:main.c        ****     PORTA&=~STROBE;
  77               		.loc 1 21 0
  78 003c DA98      		cbi 0x1b,2
  79               	/* epilogue start */
  22:main.c        **** }
  80               		.loc 1 22 0
  81 003e 1F91      		pop r17
  82 0040 0F91      		pop r16
  83 0042 0895      		ret
  84               		.cfi_endproc
  85               	.LFE6:
  87               	.global	sendData
  89               	sendData:
  90               	.LFB7:
  23:main.c        **** uint8_t ledr=0;
  24:main.c        **** uint8_t ledb=0;
  25:main.c        **** void sendData(uint32_t data){
  91               		.loc 1 25 0
  92               		.cfi_startproc
  93               	.LVL5:
  94               	/* prologue: function */
  95               	/* frame size = 0 */
  96               	/* stack size = 0 */
  97               	.L__stack_usage = 0
  26:main.c        ****     if(ledr)data|=LEDR;
  98               		.loc 1 26 0
  99 0044 2091 0000 		lds r18,ledr
 100 0048 2111      		cpse r18,__zero_reg__
 101               		.loc 1 26 0 is_stmt 0 discriminator 1
 102 004a 7860      		ori r23,8
 103               	.LVL6:
 104               	.L8:
  27:main.c        ****     if(ledb)data|=LEDB;
 105               		.loc 1 27 0 is_stmt 1
 106 004c 2091 0000 		lds r18,ledb
 107 0050 2111      		cpse r18,__zero_reg__
 108               		.loc 1 27 0 is_stmt 0 discriminator 1
 109 0052 7460      		ori r23,4
 110               	.LVL7:
 111               	.L9:
  28:main.c        ****     sendRawData(data);
 112               		.loc 1 28 0 is_stmt 1
 113 0054 00C0      		rjmp sendRawData
 114               	.LVL8:
 115               		.cfi_endproc
 116               	.LFE7:
 118               		.section	.text.startup,"ax",@progbits
 119               	.global	main
 121               	main:
 122               	.LFB8:
  29:main.c        **** }
  30:main.c        **** volatile uint8_t state=0;
  31:main.c        **** Led leds[NBLEDS];
  32:main.c        **** 
  33:main.c        **** int main(void){    
 123               		.loc 1 33 0
 124               		.cfi_startproc
 125               	/* prologue: function */
 126               	/* frame size = 0 */
 127               	/* stack size = 0 */
 128               	.L__stack_usage = 0
  34:main.c        ****     DDRA |= CLK|DATA|STROBE|LED;
 129               		.loc 1 34 0
 130 0000 8AB3      		in r24,0x1a
 131 0002 8F60      		ori r24,lo8(15)
 132 0004 8ABB      		out 0x1a,r24
  35:main.c        ****     PORTA &= ~(CLK|DATA|STROBE|LED);
 133               		.loc 1 35 0
 134 0006 8BB3      		in r24,0x1b
 135 0008 807F      		andi r24,lo8(-16)
 136 000a 8BBB      		out 0x1b,r24
  36:main.c        ****     ledInit(leds);
 137               		.loc 1 36 0
 138 000c 80E0      		ldi r24,lo8(leds)
 139 000e 90E0      		ldi r25,hi8(leds)
 140 0010 00D0      		rcall ledInit
 141               	.LVL9:
  37:main.c        ****     
  38:main.c        ****     TIMSK1|=(1<<TOIE1);
 142               		.loc 1 38 0
 143 0012 609A      		sbi 0xc,0
  39:main.c        ****     TIMSK0|=(1<<TOIE0);
 144               		.loc 1 39 0
 145 0014 89B7      		in r24,0x39
 146 0016 8160      		ori r24,lo8(1)
 147 0018 89BF      		out 0x39,r24
  40:main.c        ****     sei();
 148               		.loc 1 40 0
 149               	/* #APP */
 150               	 ;  40 "main.c" 1
 151 001a 7894      		sei
 152               	 ;  0 "" 2
  41:main.c        ****     /*
  42:main.c        ****     sendData(0b11111100001111111111 | LEDB);
  43:main.c        ****     _delay_ms(2500);
  44:main.c        ****     sendData(0b11000000001111111111);
  45:main.c        ****     _delay_ms(2500);
  46:main.c        ****     sendData(0b00001100001111111111 | LEDR);
  47:main.c        ****     _delay_ms(2500);
  48:main.c        ****     sendData(0b00110000001111111111);
  49:main.c        ****     _delay_ms(2500);*/
  50:main.c        ****     sendData(0b00000100000000000001 | LEDR);
 153               		.loc 1 50 0
 154               	/* #NOAPP */
 155 001c 61E0      		ldi r22,lo8(1)
 156 001e 78E4      		ldi r23,lo8(72)
 157 0020 80E0      		ldi r24,0
 158 0022 90E0      		ldi r25,0
 159 0024 00D0      		rcall sendData
 160               	.LVL10:
  51:main.c        ****     #ifdef DELLONG
  52:main.c        **** 		TCCR1B|=(1<<CS12)|(1<<CS10);
  53:main.c        **** 	#else
  54:main.c        **** 		TCCR1B|=(1<<CS12);//|(1<<CS10);
 161               		.loc 1 54 0
 162 0026 8EB5      		in r24,0x2e
 163 0028 8460      		ori r24,lo8(4)
 164 002a 8EBD      		out 0x2e,r24
  55:main.c        **** 	#endif
  56:main.c        **** 	
  57:main.c        **** 	TCCR0B|=(1<<CS01)|(1<<CS00);
 165               		.loc 1 57 0
 166 002c 83B7      		in r24,0x33
 167 002e 8360      		ori r24,lo8(3)
 168 0030 83BF      		out 0x33,r24
  58:main.c        ****     
  59:main.c        ****     currentColor=tcolorV(RED);
 169               		.loc 1 59 0
 170 0032 60E0      		ldi r22,0
 171 0034 70E0      		ldi r23,0
 172 0036 8FEF      		ldi r24,lo8(-1)
 173 0038 90E0      		ldi r25,0
 174 003a 00D0      		rcall tcolorV
 175               	.LVL11:
 176 003c 6093 0000 		sts currentColor,r22
 177 0040 7093 0000 		sts currentColor+1,r23
 178 0044 8093 0000 		sts currentColor+2,r24
  60:main.c        ****     setCurrentTime(15,45,7,11);
 179               		.loc 1 60 0
 180 0048 2BE0      		ldi r18,lo8(11)
 181 004a 47E0      		ldi r20,lo8(7)
 182 004c 6DE2      		ldi r22,lo8(45)
 183 004e 8FE0      		ldi r24,lo8(15)
 184 0050 00D0      		rcall setCurrentTime
 185               	.LVL12:
  61:main.c        **** 	//RTC_readTime(&currentTime);
  62:main.c        ****     currentTime.temp=11;
 186               		.loc 1 62 0
 187 0052 8BE0      		ldi r24,lo8(11)
 188 0054 8093 0000 		sts currentTime+4,r24
 189               	.L17:
 190 0058 00C0      		rjmp .L17
 191               		.cfi_endproc
 192               	.LFE8:
 194               		.text
 195               	.global	__vector_8
 197               	__vector_8:
 198               	.LFB9:
  63:main.c        ****     //setLeds(currentTime,leds,currentColor);
  64:main.c        ****     
  65:main.c        ****     while(1){
  66:main.c        ****        
  67:main.c        ****     }
  68:main.c        ****     return(0);
  69:main.c        ****     
  70:main.c        **** }
  71:main.c        **** ISR( TIM1_OVF_vect ){
 199               		.loc 1 71 0
 200               		.cfi_startproc
 201 0056 1F92      		push r1
 202               	.LCFI2:
 203               		.cfi_def_cfa_offset 3
 204               		.cfi_offset 1, -2
 205 0058 0F92      		push r0
 206               	.LCFI3:
 207               		.cfi_def_cfa_offset 4
 208               		.cfi_offset 0, -3
 209 005a 0FB6      		in r0,__SREG__
 210 005c 0F92      		push r0
 211 005e 1124      		clr __zero_reg__
 212 0060 8F93      		push r24
 213               	.LCFI4:
 214               		.cfi_def_cfa_offset 5
 215               		.cfi_offset 24, -4
 216 0062 9F93      		push r25
 217               	.LCFI5:
 218               		.cfi_def_cfa_offset 6
 219               		.cfi_offset 25, -5
 220               	/* prologue: Signal */
 221               	/* frame size = 0 */
 222               	/* stack size = 5 */
 223               	.L__stack_usage = 5
  72:main.c        ****     ledb=1-ledb;
 224               		.loc 1 72 0
 225 0064 9091 0000 		lds r25,ledb
 226 0068 81E0      		ldi r24,lo8(1)
 227 006a 891B      		sub r24,r25
 228 006c 8093 0000 		sts ledb,r24
  73:main.c        ****     ledr=!ledb;
 229               		.loc 1 73 0
 230 0070 91E0      		ldi r25,lo8(1)
 231 0072 8111      		cpse r24,__zero_reg__
 232 0074 90E0      		ldi r25,0
 233               	.L19:
 234 0076 9093 0000 		sts ledr,r25
 235               	/* epilogue start */
  74:main.c        ****     //RTC_readTime(&currentTime);
  75:main.c        ****     //setLeds(currentTime,leds,currentColor);
  76:main.c        **** }
 236               		.loc 1 76 0
 237 007a 9F91      		pop r25
 238 007c 8F91      		pop r24
 239 007e 0F90      		pop r0
 240 0080 0FBE      		out __SREG__,r0
 241 0082 0F90      		pop r0
 242 0084 1F90      		pop r1
 243 0086 1895      		reti
 244               		.cfi_endproc
 245               	.LFE9:
 247               	.global	__vector_11
 249               	__vector_11:
 250               	.LFB10:
  77:main.c        **** ISR( TIM0_OVF_vect ){
 251               		.loc 1 77 0
 252               		.cfi_startproc
 253 0088 1F92      		push r1
 254               	.LCFI6:
 255               		.cfi_def_cfa_offset 3
 256               		.cfi_offset 1, -2
 257 008a 0F92      		push r0
 258               	.LCFI7:
 259               		.cfi_def_cfa_offset 4
 260               		.cfi_offset 0, -3
 261 008c 0FB6      		in r0,__SREG__
 262 008e 0F92      		push r0
 263 0090 1124      		clr __zero_reg__
 264 0092 2F93      		push r18
 265               	.LCFI8:
 266               		.cfi_def_cfa_offset 5
 267               		.cfi_offset 18, -4
 268 0094 3F93      		push r19
 269               	.LCFI9:
 270               		.cfi_def_cfa_offset 6
 271               		.cfi_offset 19, -5
 272 0096 4F93      		push r20
 273               	.LCFI10:
 274               		.cfi_def_cfa_offset 7
 275               		.cfi_offset 20, -6
 276 0098 5F93      		push r21
 277               	.LCFI11:
 278               		.cfi_def_cfa_offset 8
 279               		.cfi_offset 21, -7
 280 009a 6F93      		push r22
 281               	.LCFI12:
 282               		.cfi_def_cfa_offset 9
 283               		.cfi_offset 22, -8
 284 009c 7F93      		push r23
 285               	.LCFI13:
 286               		.cfi_def_cfa_offset 10
 287               		.cfi_offset 23, -9
 288 009e 8F93      		push r24
 289               	.LCFI14:
 290               		.cfi_def_cfa_offset 11
 291               		.cfi_offset 24, -10
 292 00a0 9F93      		push r25
 293               	.LCFI15:
 294               		.cfi_def_cfa_offset 12
 295               		.cfi_offset 25, -11
 296 00a2 AF93      		push r26
 297               	.LCFI16:
 298               		.cfi_def_cfa_offset 13
 299               		.cfi_offset 26, -12
 300 00a4 BF93      		push r27
 301               	.LCFI17:
 302               		.cfi_def_cfa_offset 14
 303               		.cfi_offset 27, -13
 304 00a6 EF93      		push r30
 305               	.LCFI18:
 306               		.cfi_def_cfa_offset 15
 307               		.cfi_offset 30, -14
 308 00a8 FF93      		push r31
 309               	.LCFI19:
 310               		.cfi_def_cfa_offset 16
 311               		.cfi_offset 31, -15
 312               	/* prologue: Signal */
 313               	/* frame size = 0 */
 314               	/* stack size = 15 */
 315               	.L__stack_usage = 15
  78:main.c        ****     switch(state){
 316               		.loc 1 78 0
 317 00aa 8091 0000 		lds r24,state
 318 00ae 8230      		cpi r24,lo8(2)
 319 00b0 01F0      		breq .L25
 320 00b2 00F4      		brsh .L26
 321 00b4 8823      		tst r24
 322 00b6 01F0      		breq .L27
 323 00b8 8130      		cpi r24,lo8(1)
 324 00ba 01F0      		breq .+2
 325 00bc 00C0      		rjmp .L24
  79:main.c        ****         case 0:
  80:main.c        ****             sendData(R2 | getDataByColor(tcolor(1,0,0),0,leds));
  81:main.c        ****             break;
  82:main.c        ****         case 1:
  83:main.c        ****             sendData(R1 | getDataByColor(tcolor(1,0,0),1,leds));
 326               		.loc 1 83 0
 327 00be 40E0      		ldi r20,0
 328 00c0 60E0      		ldi r22,0
 329 00c2 81E0      		ldi r24,lo8(1)
 330 00c4 00D0      		rcall tcolor
 331               	.LVL13:
 332 00c6 20E0      		ldi r18,lo8(leds)
 333 00c8 30E0      		ldi r19,hi8(leds)
 334 00ca 41E0      		ldi r20,lo8(1)
 335 00cc 00D0      		rcall getDataByColor
 336               	.LVL14:
 337 00ce 7068      		ori r23,128
 338 00d0 00C0      		rjmp .L33
 339               	.L26:
  78:main.c        ****     switch(state){
 340               		.loc 1 78 0
 341 00d2 8430      		cpi r24,lo8(4)
 342 00d4 01F0      		breq .L29
 343 00d6 00F0      		brlo .L30
 344 00d8 8530      		cpi r24,lo8(5)
 345 00da 01F4      		brne .L24
  84:main.c        ****             break;
  85:main.c        ****         case 2:
  86:main.c        ****             sendData(G2 | getDataByColor(tcolor(0,1,0),0,leds));
  87:main.c        ****             break;
  88:main.c        ****         case 3:
  89:main.c        ****             sendData(G1 | getDataByColor(tcolor(0,1,0),1,leds));
  90:main.c        ****             break;
  91:main.c        ****         case 4:
  92:main.c        ****             sendData(B2 | getDataByColor(tcolor(0,0,1),0,leds));
  93:main.c        ****             break;
  94:main.c        ****         case 5:
  95:main.c        ****             sendData(B1 | getDataByColor(tcolor(0,0,1),1,leds));
 346               		.loc 1 95 0
 347 00dc 41E0      		ldi r20,lo8(1)
 348 00de 60E0      		ldi r22,0
 349 00e0 80E0      		ldi r24,0
 350 00e2 00D0      		rcall tcolor
 351               	.LVL15:
 352 00e4 20E0      		ldi r18,lo8(leds)
 353 00e6 30E0      		ldi r19,hi8(leds)
 354 00e8 41E0      		ldi r20,lo8(1)
 355 00ea 00D0      		rcall getDataByColor
 356               	.LVL16:
 357 00ec 8160      		ori r24,1
 358 00ee 00C0      		rjmp .L33
 359               	.L27:
  80:main.c        ****             break;
 360               		.loc 1 80 0
 361 00f0 40E0      		ldi r20,0
 362 00f2 60E0      		ldi r22,0
 363 00f4 81E0      		ldi r24,lo8(1)
 364 00f6 00D0      		rcall tcolor
 365               	.LVL17:
 366 00f8 20E0      		ldi r18,lo8(leds)
 367 00fa 30E0      		ldi r19,hi8(leds)
 368 00fc 40E0      		ldi r20,0
 369 00fe 00D0      		rcall getDataByColor
 370               	.LVL18:
 371 0100 7064      		ori r23,64
 372 0102 00C0      		rjmp .L33
 373               	.L25:
  86:main.c        ****             break;
 374               		.loc 1 86 0
 375 0104 40E0      		ldi r20,0
 376 0106 61E0      		ldi r22,lo8(1)
 377 0108 80E0      		ldi r24,0
 378 010a 00D0      		rcall tcolor
 379               	.LVL19:
 380 010c 20E0      		ldi r18,lo8(leds)
 381 010e 30E0      		ldi r19,hi8(leds)
 382 0110 40E0      		ldi r20,0
 383 0112 00D0      		rcall getDataByColor
 384               	.LVL20:
 385 0114 8460      		ori r24,4
 386 0116 00C0      		rjmp .L33
 387               	.L30:
  89:main.c        ****             break;
 388               		.loc 1 89 0
 389 0118 40E0      		ldi r20,0
 390 011a 61E0      		ldi r22,lo8(1)
 391 011c 80E0      		ldi r24,0
 392 011e 00D0      		rcall tcolor
 393               	.LVL21:
 394 0120 20E0      		ldi r18,lo8(leds)
 395 0122 30E0      		ldi r19,hi8(leds)
 396 0124 41E0      		ldi r20,lo8(1)
 397 0126 00D0      		rcall getDataByColor
 398               	.LVL22:
 399 0128 8860      		ori r24,8
 400 012a 00C0      		rjmp .L33
 401               	.L29:
  92:main.c        ****             break;
 402               		.loc 1 92 0
 403 012c 41E0      		ldi r20,lo8(1)
 404 012e 60E0      		ldi r22,0
 405 0130 80E0      		ldi r24,0
 406 0132 00D0      		rcall tcolor
 407               	.LVL23:
 408 0134 20E0      		ldi r18,lo8(leds)
 409 0136 30E0      		ldi r19,hi8(leds)
 410 0138 40E0      		ldi r20,0
 411 013a 00D0      		rcall getDataByColor
 412               	.LVL24:
 413 013c 8260      		ori r24,2
 414               	.L33:
 415               		.loc 1 95 0
 416 013e 00D0      		rcall sendData
 417               	.LVL25:
 418               	.L24:
  96:main.c        ****             break;
  97:main.c        ****     }
  98:main.c        ****     state++;
 419               		.loc 1 98 0
 420 0140 8091 0000 		lds r24,state
 421 0144 8F5F      		subi r24,lo8(-(1))
 422 0146 8093 0000 		sts state,r24
  99:main.c        ****     if(state>5)state=0;
 423               		.loc 1 99 0
 424 014a 8091 0000 		lds r24,state
 425 014e 8630      		cpi r24,lo8(6)
 426 0150 00F0      		brlo .L23
 427               		.loc 1 99 0 is_stmt 0 discriminator 1
 428 0152 1092 0000 		sts state,__zero_reg__
 429               	.L23:
 430               	/* epilogue start */
 100:main.c        **** }
 431               		.loc 1 100 0 is_stmt 1
 432 0156 FF91      		pop r31
 433 0158 EF91      		pop r30
 434 015a BF91      		pop r27
 435 015c AF91      		pop r26
 436 015e 9F91      		pop r25
 437 0160 8F91      		pop r24
 438 0162 7F91      		pop r23
 439 0164 6F91      		pop r22
 440 0166 5F91      		pop r21
 441 0168 4F91      		pop r20
 442 016a 3F91      		pop r19
 443 016c 2F91      		pop r18
 444 016e 0F90      		pop r0
 445 0170 0FBE      		out __SREG__,r0
 446 0172 0F90      		pop r0
 447 0174 1F90      		pop r1
 448 0176 1895      		reti
 449               		.cfi_endproc
 450               	.LFE10:
 452               		.comm	leds,95,1
 453               	.global	state
 454               		.section .bss
 457               	state:
 458 0000 00        		.zero	1
 459               	.global	ledb
 462               	ledb:
 463 0001 00        		.zero	1
 464               	.global	ledr
 467               	ledr:
 468 0002 00        		.zero	1
 469               		.comm	currentColor,3,1
 470               		.comm	USI_I2C_Master_State,1,1
 471               		.comm	currentTime,5,1
 472               		.text
 473               	.Letext0:
 474               		.file 2 "/usr/lib/avr/include/stdint.h"
 475               		.file 3 "RTC.h"
 476               		.file 4 "Led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccck1TEw.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccck1TEw.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccck1TEw.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccck1TEw.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccck1TEw.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccck1TEw.s:12     .text:0000000000000000 sendRawData
     /tmp/ccck1TEw.s:89     .text:0000000000000044 sendData
     /tmp/ccck1TEw.s:467    .bss:0000000000000002 ledr
     /tmp/ccck1TEw.s:462    .bss:0000000000000001 ledb
     /tmp/ccck1TEw.s:121    .text.startup:0000000000000000 main
                            *COM*:000000000000005f leds
                            *COM*:0000000000000003 currentColor
                            *COM*:0000000000000005 currentTime
     /tmp/ccck1TEw.s:197    .text:0000000000000056 __vector_8
     /tmp/ccck1TEw.s:249    .text:0000000000000088 __vector_11
     /tmp/ccck1TEw.s:457    .bss:0000000000000000 state
                            *COM*:0000000000000001 USI_I2C_Master_State

UNDEFINED SYMBOLS
ledInit
tcolorV
setCurrentTime
tcolor
getDataByColor
__do_clear_bss
