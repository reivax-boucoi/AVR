
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  0000170a  0000179e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000170a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000049  00800150  00800150  000017ee  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  000017ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000011b  00000000  00000000  0000180e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000053f  00000000  00000000  00001929  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000216  00000000  00000000  00001e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000509  00000000  00000000  0000207e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  00002588  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001a8  00000000  00000000  00002658  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000010c  00000000  00000000  00002800  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000290c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 19 02 	jmp	0x432	; 0x432 <__vector_14>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 02 02 	jmp	0x404	; 0x404 <__vector_18>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__c.1790>:
      68:	6e 61 6e 00                                         nan.

0000006c <__c.1788>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ea e0       	ldi	r30, 0x0A	; 10
     17e:	f7 e1       	ldi	r31, 0x17	; 23
     180:	02 c0       	rjmp	.+4      	; 0x186 <.do_copy_data_start>

00000182 <.do_copy_data_loop>:
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0

00000186 <.do_copy_data_start>:
     186:	a0 35       	cpi	r26, 0x50	; 80
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <.do_copy_data_loop>

0000018c <__do_clear_bss>:
     18c:	11 e0       	ldi	r17, 0x01	; 1
     18e:	a0 e5       	ldi	r26, 0x50	; 80
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a9 39       	cpi	r26, 0x99	; 153
     198:	b1 07       	cpc	r27, r17
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 a0 02 	call	0x540	; 0x540 <main>
     1a0:	0c 94 83 0b 	jmp	0x1706	; 0x1706 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <uart_init>:
struct S_Result{
	float v, i, p ;
}Res;

void uart_init (void){
	UBRR0H = (BAUDRATE>>8);
     1a8:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = BAUDRATE;	// set baud rate
     1ac:	8f ec       	ldi	r24, 0xCF	; 207
     1ae:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0B|= (1<<TXEN0)|(1<<RXEN0)|(1<<RXCIE0);	// enable receiver and transmitter
     1b2:	e1 ec       	ldi	r30, 0xC1	; 193
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	80 81       	ld	r24, Z
     1b8:	88 69       	ori	r24, 0x98	; 152
     1ba:	80 83       	st	Z, r24
	UCSR0C|= (1<<UCSZ00)|(1<<UCSZ01);	// 8bit data format
     1bc:	e2 ec       	ldi	r30, 0xC2	; 194
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z
     1c2:	86 60       	ori	r24, 0x06	; 6
     1c4:	80 83       	st	Z, r24
}
     1c6:	08 95       	ret

000001c8 <uart_transmit>:
void uart_transmit (uint8_t data){
     1c8:	98 2f       	mov	r25, r24
	while (!( UCSR0A & (1<<UDRE0)));	// wait while register is free
     1ca:	80 91 c0 00 	lds	r24, 0x00C0
     1ce:	85 ff       	sbrs	r24, 5
     1d0:	fc cf       	rjmp	.-8      	; 0x1ca <uart_transmit+0x2>
	UDR0 = data;	// load data in the register
     1d2:	90 93 c6 00 	sts	0x00C6, r25
}
     1d6:	08 95       	ret

000001d8 <uart_transmitMult>:
void uart_transmitMult(char *Data){
     1d8:	fc 01       	movw	r30, r24
     1da:	07 c0       	rjmp	.+14     	; 0x1ea <uart_transmitMult+0x12>
	UBRR0L = BAUDRATE;	// set baud rate
	UCSR0B|= (1<<TXEN0)|(1<<RXEN0)|(1<<RXCIE0);	// enable receiver and transmitter
	UCSR0C|= (1<<UCSZ00)|(1<<UCSZ01);	// 8bit data format
}
void uart_transmit (uint8_t data){
	while (!( UCSR0A & (1<<UDRE0)));	// wait while register is free
     1dc:	80 91 c0 00 	lds	r24, 0x00C0
     1e0:	85 ff       	sbrs	r24, 5
     1e2:	fc cf       	rjmp	.-8      	; 0x1dc <uart_transmitMult+0x4>
	UDR0 = data;	// load data in the register
}
void uart_transmitMult(char *Data){
	while(*Data>0){
		uart_transmit(*Data++);
     1e4:	31 96       	adiw	r30, 0x01	; 1
	UCSR0B|= (1<<TXEN0)|(1<<RXEN0)|(1<<RXCIE0);	// enable receiver and transmitter
	UCSR0C|= (1<<UCSZ00)|(1<<UCSZ01);	// 8bit data format
}
void uart_transmit (uint8_t data){
	while (!( UCSR0A & (1<<UDRE0)));	// wait while register is free
	UDR0 = data;	// load data in the register
     1e6:	90 93 c6 00 	sts	0x00C6, r25
}
void uart_transmitMult(char *Data){
	while(*Data>0){
     1ea:	90 81       	ld	r25, Z
     1ec:	99 23       	and	r25, r25
     1ee:	b1 f7       	brne	.-20     	; 0x1dc <uart_transmitMult+0x4>
		uart_transmit(*Data++);
	}
}
     1f0:	08 95       	ret

000001f2 <uart_recieve>:
uint8_t uart_recieve (void){
	while(!(UCSR0A) & (1<<RXC0));	// wait while data is being received
     1f2:	80 91 c0 00 	lds	r24, 0x00C0
	return UDR0;	// return 8-bit data
     1f6:	80 91 c6 00 	lds	r24, 0x00C6
}
     1fa:	08 95       	ret

000001fc <spi_masterInit>:

void spi_masterInit(void){
DDRB = (1<<PINB3)|(1<<PINB5)|(1<<CS);
     1fc:	8c e2       	ldi	r24, 0x2C	; 44
     1fe:	84 b9       	out	0x04, r24	; 4
SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)/*|(1<<SPIE)*/; //sample rising & setup falling
     200:	81 e5       	ldi	r24, 0x51	; 81
     202:	8c bd       	out	0x2c, r24	; 44
PORTB |=(1<<CS);
     204:	2a 9a       	sbi	0x05, 2	; 5
}
     206:	08 95       	ret

00000208 <spi_rxtx>:
uint8_t spi_rxtx(uint8_t data){
SPDR = data;
     208:	8e bd       	out	0x2e, r24	; 46
while(!(SPSR & (1<<SPIF)));
     20a:	0d b4       	in	r0, 0x2d	; 45
     20c:	07 fe       	sbrs	r0, 7
     20e:	fd cf       	rjmp	.-6      	; 0x20a <spi_rxtx+0x2>
return (SPDR);
     210:	8e b5       	in	r24, 0x2e	; 46
}
     212:	08 95       	ret

00000214 <adc_v>:

uint16_t adc_v(void){
	uint16_t val=0;
	PORTB &=~(1<<CS);
     214:	2a 98       	cbi	0x05, 2	; 5
DDRB = (1<<PINB3)|(1<<PINB5)|(1<<CS);
SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)/*|(1<<SPIE)*/; //sample rising & setup falling
PORTB |=(1<<CS);
}
uint8_t spi_rxtx(uint8_t data){
SPDR = data;
     216:	8c e0       	ldi	r24, 0x0C	; 12
     218:	8e bd       	out	0x2e, r24	; 46
while(!(SPSR & (1<<SPIF)));
     21a:	0d b4       	in	r0, 0x2d	; 45
     21c:	07 fe       	sbrs	r0, 7
     21e:	fd cf       	rjmp	.-6      	; 0x21a <adc_v+0x6>
return (SPDR);
     220:	8e b5       	in	r24, 0x2e	; 46
DDRB = (1<<PINB3)|(1<<PINB5)|(1<<CS);
SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)/*|(1<<SPIE)*/; //sample rising & setup falling
PORTB |=(1<<CS);
}
uint8_t spi_rxtx(uint8_t data){
SPDR = data;
     222:	80 e8       	ldi	r24, 0x80	; 128
     224:	8e bd       	out	0x2e, r24	; 46
while(!(SPSR & (1<<SPIF)));
     226:	0d b4       	in	r0, 0x2d	; 45
     228:	07 fe       	sbrs	r0, 7
     22a:	fd cf       	rjmp	.-6      	; 0x226 <adc_v+0x12>
return (SPDR);
     22c:	2e b5       	in	r18, 0x2e	; 46
DDRB = (1<<PINB3)|(1<<PINB5)|(1<<CS);
SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)/*|(1<<SPIE)*/; //sample rising & setup falling
PORTB |=(1<<CS);
}
uint8_t spi_rxtx(uint8_t data){
SPDR = data;
     22e:	1e bc       	out	0x2e, r1	; 46
while(!(SPSR & (1<<SPIF)));
     230:	0d b4       	in	r0, 0x2d	; 45
     232:	07 fe       	sbrs	r0, 7
     234:	fd cf       	rjmp	.-6      	; 0x230 <adc_v+0x1c>
return (SPDR);
     236:	8e b5       	in	r24, 0x2e	; 46

uint16_t adc_v(void){
	uint16_t val=0;
	PORTB &=~(1<<CS);
	spi_rxtx(VCH0);
	val=(spi_rxtx(128) &15)<<8;
     238:	30 e0       	ldi	r19, 0x00	; 0
     23a:	2f 70       	andi	r18, 0x0F	; 15
     23c:	30 70       	andi	r19, 0x00	; 0
     23e:	32 2f       	mov	r19, r18
     240:	22 27       	eor	r18, r18
	val|=spi_rxtx(0);
	PORTB |=(1<<CS);
     242:	2a 9a       	sbi	0x05, 2	; 5
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	28 2b       	or	r18, r24
     248:	39 2b       	or	r19, r25
	return (val);
}
     24a:	c9 01       	movw	r24, r18
     24c:	08 95       	ret

0000024e <adc_i>:
int16_t adc_i(void){
	uint16_t val=0;
	PORTB &=~(1<<CS);
     24e:	2a 98       	cbi	0x05, 2	; 5
DDRB = (1<<PINB3)|(1<<PINB5)|(1<<CS);
SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)/*|(1<<SPIE)*/; //sample rising & setup falling
PORTB |=(1<<CS);
}
uint8_t spi_rxtx(uint8_t data){
SPDR = data;
     250:	89 e0       	ldi	r24, 0x09	; 9
     252:	8e bd       	out	0x2e, r24	; 46
while(!(SPSR & (1<<SPIF)));
     254:	0d b4       	in	r0, 0x2d	; 45
     256:	07 fe       	sbrs	r0, 7
     258:	fd cf       	rjmp	.-6      	; 0x254 <adc_i+0x6>
return (SPDR);
     25a:	8e b5       	in	r24, 0x2e	; 46
DDRB = (1<<PINB3)|(1<<PINB5)|(1<<CS);
SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)/*|(1<<SPIE)*/; //sample rising & setup falling
PORTB |=(1<<CS);
}
uint8_t spi_rxtx(uint8_t data){
SPDR = data;
     25c:	80 e8       	ldi	r24, 0x80	; 128
     25e:	8e bd       	out	0x2e, r24	; 46
while(!(SPSR & (1<<SPIF)));
     260:	0d b4       	in	r0, 0x2d	; 45
     262:	07 fe       	sbrs	r0, 7
     264:	fd cf       	rjmp	.-6      	; 0x260 <adc_i+0x12>
return (SPDR);
     266:	4e b5       	in	r20, 0x2e	; 46
DDRB = (1<<PINB3)|(1<<PINB5)|(1<<CS);
SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)/*|(1<<SPIE)*/; //sample rising & setup falling
PORTB |=(1<<CS);
}
uint8_t spi_rxtx(uint8_t data){
SPDR = data;
     268:	1e bc       	out	0x2e, r1	; 46
while(!(SPSR & (1<<SPIF)));
     26a:	0d b4       	in	r0, 0x2d	; 45
     26c:	07 fe       	sbrs	r0, 7
     26e:	fd cf       	rjmp	.-6      	; 0x26a <adc_i+0x1c>
return (SPDR);
     270:	2e b5       	in	r18, 0x2e	; 46
int16_t adc_i(void){
	uint16_t val=0;
	PORTB &=~(1<<CS);
	spi_rxtx(ICH0);
	uint8_t sign=spi_rxtx(128);;
	val=(sign&15)<<8;
     272:	84 2f       	mov	r24, r20
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	8f 70       	andi	r24, 0x0F	; 15
     278:	90 70       	andi	r25, 0x00	; 0
     27a:	98 2f       	mov	r25, r24
     27c:	88 27       	eor	r24, r24
	sign=(sign&0b00010000);	
	val|=spi_rxtx(0);;
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	82 2b       	or	r24, r18
     282:	93 2b       	or	r25, r19
	PORTB |=(1<<CS);
     284:	2a 9a       	sbi	0x05, 2	; 5
	if(sign)return (-val);
     286:	44 ff       	sbrs	r20, 4
     288:	05 c0       	rjmp	.+10     	; 0x294 <adc_i+0x46>
     28a:	22 27       	eor	r18, r18
     28c:	33 27       	eor	r19, r19
     28e:	28 1b       	sub	r18, r24
     290:	39 0b       	sbc	r19, r25
     292:	01 c0       	rjmp	.+2      	; 0x296 <adc_i+0x48>
	return (val);
     294:	9c 01       	movw	r18, r24
}
     296:	c9 01       	movw	r24, r18
     298:	08 95       	ret

0000029a <acquisition>:
void acquisition(uint8_t index){//reads adc, filters, TODO calibrate and accumulate
     29a:	af 92       	push	r10
     29c:	bf 92       	push	r11
     29e:	cf 92       	push	r12
     2a0:	df 92       	push	r13
     2a2:	ef 92       	push	r14
     2a4:	ff 92       	push	r15
     2a6:	0f 93       	push	r16
     2a8:	1f 93       	push	r17
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	28 2f       	mov	r18, r24
	Sample[index].previous = Sample[index].current;
     2b0:	c8 2f       	mov	r28, r24
     2b2:	d0 e0       	ldi	r29, 0x00	; 0
     2b4:	fe 01       	movw	r30, r28
     2b6:	94 e0       	ldi	r25, 0x04	; 4
     2b8:	ee 0f       	add	r30, r30
     2ba:	ff 1f       	adc	r31, r31
     2bc:	9a 95       	dec	r25
     2be:	e1 f7       	brne	.-8      	; 0x2b8 <acquisition+0x1e>
     2c0:	ea 5a       	subi	r30, 0xAA	; 170
     2c2:	fe 4f       	sbci	r31, 0xFE	; 254
     2c4:	de 01       	movw	r26, r28
     2c6:	84 e0       	ldi	r24, 0x04	; 4
     2c8:	aa 0f       	add	r26, r26
     2ca:	bb 1f       	adc	r27, r27
     2cc:	8a 95       	dec	r24
     2ce:	e1 f7       	brne	.-8      	; 0x2c8 <acquisition+0x2e>
     2d0:	ac 5a       	subi	r26, 0xAC	; 172
     2d2:	be 4f       	sbci	r27, 0xFE	; 254
     2d4:	8d 91       	ld	r24, X+
     2d6:	9c 91       	ld	r25, X
     2d8:	91 83       	std	Z+1, r25	; 0x01
     2da:	80 83       	st	Z, r24
	// adc read
	switch (index){
     2dc:	22 23       	and	r18, r18
     2de:	19 f0       	breq	.+6      	; 0x2e6 <acquisition+0x4c>
     2e0:	21 30       	cpi	r18, 0x01	; 1
     2e2:	79 f4       	brne	.+30     	; 0x302 <acquisition+0x68>
     2e4:	07 c0       	rjmp	.+14     	; 0x2f4 <acquisition+0x5a>
		case 0:
			Sample[0].current = adc_v();
     2e6:	0e 94 0a 01 	call	0x214	; 0x214 <adc_v>
     2ea:	90 93 55 01 	sts	0x0155, r25
     2ee:	80 93 54 01 	sts	0x0154, r24
     2f2:	0c c0       	rjmp	.+24     	; 0x30c <acquisition+0x72>
		break;
		case 1:
			Sample[1].current = adc_i();
     2f4:	0e 94 27 01 	call	0x24e	; 0x24e <adc_i>
     2f8:	90 93 65 01 	sts	0x0165, r25
     2fc:	80 93 64 01 	sts	0x0164, r24
     300:	05 c0       	rjmp	.+10     	; 0x30c <acquisition+0x72>
		break;
		default:
			Flags|=(1<<F_FAULT);
     302:	80 91 53 01 	lds	r24, 0x0153
     306:	81 60       	ori	r24, 0x01	; 1
     308:	80 93 53 01 	sts	0x0153, r24
		break;
	}
	// filtering
	Sample[index].previousFiltered = Sample[index].filtered;  // y[n] -> y[n-1]
     30c:	fe 01       	movw	r30, r28
     30e:	04 e0       	ldi	r16, 0x04	; 4
     310:	ee 0f       	add	r30, r30
     312:	ff 1f       	adc	r31, r31
     314:	0a 95       	dec	r16
     316:	e1 f7       	brne	.-8      	; 0x310 <acquisition+0x76>
     318:	e4 5a       	subi	r30, 0xA4	; 164
     31a:	fe 4f       	sbci	r31, 0xFE	; 254
     31c:	14 e0       	ldi	r17, 0x04	; 4
     31e:	cc 0f       	add	r28, r28
     320:	dd 1f       	adc	r29, r29
     322:	1a 95       	dec	r17
     324:	e1 f7       	brne	.-8      	; 0x31e <acquisition+0x84>
     326:	b8 e5       	ldi	r27, 0x58	; 88
     328:	ab 2e       	mov	r10, r27
     32a:	b1 e0       	ldi	r27, 0x01	; 1
     32c:	bb 2e       	mov	r11, r27
     32e:	ac 0e       	add	r10, r28
     330:	bd 1e       	adc	r11, r29
     332:	d5 01       	movw	r26, r10
     334:	6d 91       	ld	r22, X+
     336:	7d 91       	ld	r23, X+
     338:	8d 91       	ld	r24, X+
     33a:	9c 91       	ld	r25, X
     33c:	60 83       	st	Z, r22
     33e:	71 83       	std	Z+1, r23	; 0x01
     340:	82 83       	std	Z+2, r24	; 0x02
     342:	93 83       	std	Z+3, r25	; 0x03
	int32_t temp0 = 255*(int32_t)Sample[index].filtered; // =0.996*y[n-1]
     344:	2f ef       	ldi	r18, 0xFF	; 255
     346:	30 e0       	ldi	r19, 0x00	; 0
     348:	40 e0       	ldi	r20, 0x00	; 0
     34a:	50 e0       	ldi	r21, 0x00	; 0
     34c:	0e 94 91 09 	call	0x1322	; 0x1322 <__mulsi3>
	temp0 = temp0>>8;
     350:	e7 2e       	mov	r14, r23
     352:	f8 2e       	mov	r15, r24
     354:	09 2f       	mov	r16, r25
     356:	11 27       	eor	r17, r17
     358:	07 fd       	sbrc	r16, 7
     35a:	1a 95       	dec	r17
	int16_t temp1 = Sample[index].current - Sample[index].previous; //=x[n]-x[n-1]
	temp0 = temp0 + 255*(int32_t)temp1; // =0.996*(x[n]-x[n-1]) + 0.996*y[n-1]
     35c:	e4 e5       	ldi	r30, 0x54	; 84
     35e:	ce 2e       	mov	r12, r30
     360:	e1 e0       	ldi	r30, 0x01	; 1
     362:	de 2e       	mov	r13, r30
     364:	cc 0e       	add	r12, r28
     366:	dd 1e       	adc	r13, r29
     368:	ca 5a       	subi	r28, 0xAA	; 170
     36a:	de 4f       	sbci	r29, 0xFE	; 254
     36c:	f6 01       	movw	r30, r12
     36e:	60 81       	ld	r22, Z
     370:	71 81       	ldd	r23, Z+1	; 0x01
     372:	28 81       	ld	r18, Y
     374:	39 81       	ldd	r19, Y+1	; 0x01
     376:	62 1b       	sub	r22, r18
     378:	73 0b       	sbc	r23, r19
     37a:	88 27       	eor	r24, r24
     37c:	77 fd       	sbrc	r23, 7
     37e:	80 95       	com	r24
     380:	98 2f       	mov	r25, r24
     382:	2f ef       	ldi	r18, 0xFF	; 255
     384:	30 e0       	ldi	r19, 0x00	; 0
     386:	40 e0       	ldi	r20, 0x00	; 0
     388:	50 e0       	ldi	r21, 0x00	; 0
     38a:	0e 94 91 09 	call	0x1322	; 0x1322 <__mulsi3>
     38e:	9b 01       	movw	r18, r22
     390:	ac 01       	movw	r20, r24
     392:	2e 0d       	add	r18, r14
     394:	3f 1d       	adc	r19, r15
     396:	40 1f       	adc	r20, r16
     398:	51 1f       	adc	r21, r17
	Sample[index].filtered = temp0;
     39a:	d5 01       	movw	r26, r10
     39c:	2d 93       	st	X+, r18
     39e:	3d 93       	st	X+, r19
     3a0:	4d 93       	st	X+, r20
     3a2:	5c 93       	st	X, r21
     3a4:	13 97       	sbiw	r26, 0x03	; 3
	
	//TODO : Add calibration for phase lag here
	Sample[index].calibrated=Sample[index].filtered;
     3a6:	f6 01       	movw	r30, r12
     3a8:	24 87       	std	Z+12, r18	; 0x0c
     3aa:	35 87       	std	Z+13, r19	; 0x0d
     3ac:	46 87       	std	Z+14, r20	; 0x0e
     3ae:	57 87       	std	Z+15, r21	; 0x0f
	// accumulation
	Acc.v += (Sample[index].calibrated>>6)*(Sample[index].calibrated>>6); //TODO check shift nbs	
     3b0:	66 e0       	ldi	r22, 0x06	; 6
     3b2:	55 95       	asr	r21
     3b4:	47 95       	ror	r20
     3b6:	37 95       	ror	r19
     3b8:	27 95       	ror	r18
     3ba:	6a 95       	dec	r22
     3bc:	d1 f7       	brne	.-12     	; 0x3b2 <acquisition+0x118>
     3be:	ca 01       	movw	r24, r20
     3c0:	b9 01       	movw	r22, r18
     3c2:	0e 94 91 09 	call	0x1322	; 0x1322 <__mulsi3>
     3c6:	20 91 81 01 	lds	r18, 0x0181
     3ca:	30 91 82 01 	lds	r19, 0x0182
     3ce:	40 91 83 01 	lds	r20, 0x0183
     3d2:	50 91 84 01 	lds	r21, 0x0184
     3d6:	26 0f       	add	r18, r22
     3d8:	37 1f       	adc	r19, r23
     3da:	48 1f       	adc	r20, r24
     3dc:	59 1f       	adc	r21, r25
     3de:	20 93 81 01 	sts	0x0181, r18
     3e2:	30 93 82 01 	sts	0x0182, r19
     3e6:	40 93 83 01 	sts	0x0183, r20
     3ea:	50 93 84 01 	sts	0x0184, r21
}
     3ee:	df 91       	pop	r29
     3f0:	cf 91       	pop	r28
     3f2:	1f 91       	pop	r17
     3f4:	0f 91       	pop	r16
     3f6:	ff 90       	pop	r15
     3f8:	ef 90       	pop	r14
     3fa:	df 90       	pop	r13
     3fc:	cf 90       	pop	r12
     3fe:	bf 90       	pop	r11
     400:	af 90       	pop	r10
     402:	08 95       	ret

00000404 <__vector_18>:
		}
	}
	return 0;
}

ISR(USART_RX_vect, ISR_BLOCK){
     404:	1f 92       	push	r1
     406:	0f 92       	push	r0
     408:	0f b6       	in	r0, 0x3f	; 63
     40a:	0f 92       	push	r0
     40c:	11 24       	eor	r1, r1
     40e:	8f 93       	push	r24
	while(*Data>0){
		uart_transmit(*Data++);
	}
}
uint8_t uart_recieve (void){
	while(!(UCSR0A) & (1<<RXC0));	// wait while data is being received
     410:	80 91 c0 00 	lds	r24, 0x00C0
	return UDR0;	// return 8-bit data
     414:	80 91 c6 00 	lds	r24, 0x00C6
	}
	return 0;
}

ISR(USART_RX_vect, ISR_BLOCK){
	data=uart_recieve();
     418:	80 93 80 01 	sts	0x0180, r24
	Flags|=F_UARTRX;
     41c:	80 91 53 01 	lds	r24, 0x0153
     420:	84 60       	ori	r24, 0x04	; 4
     422:	80 93 53 01 	sts	0x0153, r24
}
     426:	8f 91       	pop	r24
     428:	0f 90       	pop	r0
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	0f 90       	pop	r0
     42e:	1f 90       	pop	r1
     430:	18 95       	reti

00000432 <__vector_14>:
ISR(TIMER0_COMPA_vect){
     432:	1f 92       	push	r1
     434:	0f 92       	push	r0
     436:	0f b6       	in	r0, 0x3f	; 63
     438:	0f 92       	push	r0
     43a:	11 24       	eor	r1, r1
     43c:	2f 93       	push	r18
     43e:	3f 93       	push	r19
     440:	4f 93       	push	r20
     442:	5f 93       	push	r21
     444:	6f 93       	push	r22
     446:	7f 93       	push	r23
     448:	8f 93       	push	r24
     44a:	9f 93       	push	r25
     44c:	af 93       	push	r26
     44e:	bf 93       	push	r27
     450:	ef 93       	push	r30
     452:	ff 93       	push	r31
	PORTD |=(1<<STATUS1); // debug
     454:	5e 9a       	sbi	0x0b, 6	; 11
	acquisition(0);
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	0e 94 4d 01 	call	0x29a	; 0x29a <acquisition>
	acquisition(1);
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	0e 94 4d 01 	call	0x29a	; 0x29a <acquisition>
	Acc.p += (Sample[0].calibrated>>6)*(Sample[1].calibrated>>6); // v*i
     462:	60 91 70 01 	lds	r22, 0x0170
     466:	70 91 71 01 	lds	r23, 0x0171
     46a:	80 91 72 01 	lds	r24, 0x0172
     46e:	90 91 73 01 	lds	r25, 0x0173
     472:	f6 e0       	ldi	r31, 0x06	; 6
     474:	95 95       	asr	r25
     476:	87 95       	ror	r24
     478:	77 95       	ror	r23
     47a:	67 95       	ror	r22
     47c:	fa 95       	dec	r31
     47e:	d1 f7       	brne	.-12     	; 0x474 <__vector_14+0x42>
     480:	20 91 60 01 	lds	r18, 0x0160
     484:	30 91 61 01 	lds	r19, 0x0161
     488:	40 91 62 01 	lds	r20, 0x0162
     48c:	50 91 63 01 	lds	r21, 0x0163
     490:	e6 e0       	ldi	r30, 0x06	; 6
     492:	55 95       	asr	r21
     494:	47 95       	ror	r20
     496:	37 95       	ror	r19
     498:	27 95       	ror	r18
     49a:	ea 95       	dec	r30
     49c:	d1 f7       	brne	.-12     	; 0x492 <__vector_14+0x60>
     49e:	0e 94 91 09 	call	0x1322	; 0x1322 <__mulsi3>
     4a2:	20 91 89 01 	lds	r18, 0x0189
     4a6:	30 91 8a 01 	lds	r19, 0x018A
     4aa:	40 91 8b 01 	lds	r20, 0x018B
     4ae:	50 91 8c 01 	lds	r21, 0x018C
     4b2:	26 0f       	add	r18, r22
     4b4:	37 1f       	adc	r19, r23
     4b6:	48 1f       	adc	r20, r24
     4b8:	59 1f       	adc	r21, r25
     4ba:	20 93 89 01 	sts	0x0189, r18
     4be:	30 93 8a 01 	sts	0x018A, r19
     4c2:	40 93 8b 01 	sts	0x018B, r20
     4c6:	50 93 8c 01 	sts	0x018C, r21
	if(++scnt>NMAX){
     4ca:	80 91 50 01 	lds	r24, 0x0150
     4ce:	8f 5f       	subi	r24, 0xFF	; 255
     4d0:	80 93 50 01 	sts	0x0150, r24
     4d4:	80 91 50 01 	lds	r24, 0x0150
     4d8:	89 36       	cpi	r24, 0x69	; 105
     4da:	38 f0       	brcs	.+14     	; 0x4ea <__vector_14+0xb8>
		scnt=0;
     4dc:	10 92 50 01 	sts	0x0150, r1
		Flags|=F_CYCLE_FULL;
     4e0:	80 91 53 01 	lds	r24, 0x0153
     4e4:	81 60       	ori	r24, 0x01	; 1
     4e6:	80 93 53 01 	sts	0x0153, r24
	}
	cnt++;
     4ea:	80 91 51 01 	lds	r24, 0x0151
     4ee:	90 91 52 01 	lds	r25, 0x0152
     4f2:	01 96       	adiw	r24, 0x01	; 1
     4f4:	90 93 52 01 	sts	0x0152, r25
     4f8:	80 93 51 01 	sts	0x0151, r24
	if(cnt>=2048){ // TODO pick appropriately
     4fc:	80 91 51 01 	lds	r24, 0x0151
     500:	90 91 52 01 	lds	r25, 0x0152
     504:	80 50       	subi	r24, 0x00	; 0
     506:	98 40       	sbci	r25, 0x08	; 8
     508:	48 f0       	brcs	.+18     	; 0x51c <__vector_14+0xea>
		Flags|=F_UARTTX;
     50a:	80 91 53 01 	lds	r24, 0x0153
     50e:	82 60       	ori	r24, 0x02	; 2
     510:	80 93 53 01 	sts	0x0153, r24
		cnt=0;
     514:	10 92 52 01 	sts	0x0152, r1
     518:	10 92 51 01 	sts	0x0151, r1
	}
	
	PORTD &=~(1<<STATUS1); // debug
     51c:	5e 98       	cbi	0x0b, 6	; 11
     51e:	ff 91       	pop	r31
     520:	ef 91       	pop	r30
     522:	bf 91       	pop	r27
     524:	af 91       	pop	r26
     526:	9f 91       	pop	r25
     528:	8f 91       	pop	r24
     52a:	7f 91       	pop	r23
     52c:	6f 91       	pop	r22
     52e:	5f 91       	pop	r21
     530:	4f 91       	pop	r20
     532:	3f 91       	pop	r19
     534:	2f 91       	pop	r18
     536:	0f 90       	pop	r0
     538:	0f be       	out	0x3f, r0	; 63
     53a:	0f 90       	pop	r0
     53c:	1f 90       	pop	r1
     53e:	18 95       	reti

00000540 <main>:
	Sample[index].calibrated=Sample[index].filtered;
	// accumulation
	Acc.v += (Sample[index].calibrated>>6)*(Sample[index].calibrated>>6); //TODO check shift nbs	
}

int main(void){
     540:	2f 92       	push	r2
     542:	3f 92       	push	r3
     544:	4f 92       	push	r4
     546:	5f 92       	push	r5
     548:	6f 92       	push	r6
     54a:	7f 92       	push	r7
     54c:	8f 92       	push	r8
     54e:	9f 92       	push	r9
     550:	af 92       	push	r10
     552:	bf 92       	push	r11
     554:	cf 92       	push	r12
     556:	df 92       	push	r13
     558:	ef 92       	push	r14
     55a:	ff 92       	push	r15
     55c:	0f 93       	push	r16
     55e:	1f 93       	push	r17
     560:	df 93       	push	r29
     562:	cf 93       	push	r28
     564:	cd b7       	in	r28, 0x3d	; 61
     566:	de b7       	in	r29, 0x3e	; 62
     568:	e2 97       	sbiw	r28, 0x32	; 50
     56a:	0f b6       	in	r0, 0x3f	; 63
     56c:	f8 94       	cli
     56e:	de bf       	out	0x3e, r29	; 62
     570:	0f be       	out	0x3f, r0	; 63
     572:	cd bf       	out	0x3d, r28	; 61
	// TODO  : Watchdog
	PRR|=(1<<PRTWI)|(1<<PRTIM2)|(1<<PRTIM1)|(1<<PRADC);// Power saving features
     574:	80 91 64 00 	lds	r24, 0x0064
     578:	89 6c       	ori	r24, 0xC9	; 201
     57a:	80 93 64 00 	sts	0x0064, r24
	DDRD |=(1<<STATUS)|(1<<STATUS1);
     57e:	8a b1       	in	r24, 0x0a	; 10
     580:	80 66       	ori	r24, 0x60	; 96
     582:	8a b9       	out	0x0a, r24	; 10
	DDRB |= 1 << PINB0 ;
     584:	20 9a       	sbi	0x04, 0	; 4
	PORTB |= 1<<PINB0;
     586:	28 9a       	sbi	0x05, 0	; 5
	uart_init();
     588:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <uart_init>
	uart_transmitMult("\ninitialized uart !\n");
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	91 e0       	ldi	r25, 0x01	; 1
     590:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <uart_transmitMult>
	while(!(UCSR0A) & (1<<RXC0));	// wait while data is being received
	return UDR0;	// return 8-bit data
}

void spi_masterInit(void){
DDRB = (1<<PINB3)|(1<<PINB5)|(1<<CS);
     594:	8c e2       	ldi	r24, 0x2C	; 44
     596:	84 b9       	out	0x04, r24	; 4
SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)/*|(1<<SPIE)*/; //sample rising & setup falling
     598:	81 e5       	ldi	r24, 0x51	; 81
     59a:	8c bd       	out	0x2c, r24	; 44
PORTB |=(1<<CS);
     59c:	2a 9a       	sbi	0x05, 2	; 5
	DDRB |= 1 << PINB0 ;
	PORTB |= 1<<PINB0;
	uart_init();
	uart_transmitMult("\ninitialized uart !\n");
	spi_masterInit();
	uart_transmitMult("initialized spi !\n");
     59e:	85 e1       	ldi	r24, 0x15	; 21
     5a0:	91 e0       	ldi	r25, 0x01	; 1
     5a2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <uart_transmitMult>
	TCCR0A |=(1<<WGM01); // CTC mode
     5a6:	84 b5       	in	r24, 0x24	; 36
     5a8:	82 60       	ori	r24, 0x02	; 2
     5aa:	84 bd       	out	0x24, r24	; 36
	TIMSK0|=1<<OCIE0A;
     5ac:	80 91 6e 00 	lds	r24, 0x006E
     5b0:	82 60       	ori	r24, 0x02	; 2
     5b2:	80 93 6e 00 	sts	0x006E, r24
	OCR0A=6; // 16MHz/(2*1024*(1+OCR0A))=1.953.125KHz
     5b6:	86 e0       	ldi	r24, 0x06	; 6
     5b8:	87 bd       	out	0x27, r24	; 39
	sei();
     5ba:	78 94       	sei
	TCCR0B |=(1<<CS02) |(1<<CS00); // N=1024
     5bc:	85 b5       	in	r24, 0x25	; 37
     5be:	85 60       	ori	r24, 0x05	; 5
     5c0:	85 bd       	out	0x25, r24	; 37
	Res.p=1.0;
     5c2:	80 e0       	ldi	r24, 0x00	; 0
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	a0 e8       	ldi	r26, 0x80	; 128
     5c8:	bf e3       	ldi	r27, 0x3F	; 63
     5ca:	80 93 7c 01 	sts	0x017C, r24
     5ce:	90 93 7d 01 	sts	0x017D, r25
     5d2:	a0 93 7e 01 	sts	0x017E, r26
     5d6:	b0 93 7f 01 	sts	0x017F, r27
	Res.v=2.0;
     5da:	80 e0       	ldi	r24, 0x00	; 0
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	a0 e0       	ldi	r26, 0x00	; 0
     5e0:	b0 e4       	ldi	r27, 0x40	; 64
     5e2:	80 93 74 01 	sts	0x0174, r24
     5e6:	90 93 75 01 	sts	0x0175, r25
     5ea:	a0 93 76 01 	sts	0x0176, r26
     5ee:	b0 93 77 01 	sts	0x0177, r27
	Res.i=3.0;
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	a0 e4       	ldi	r26, 0x40	; 64
     5f8:	b0 e4       	ldi	r27, 0x40	; 64
     5fa:	80 93 78 01 	sts	0x0178, r24
     5fe:	90 93 79 01 	sts	0x0179, r25
     602:	a0 93 7a 01 	sts	0x017A, r26
     606:	b0 93 7b 01 	sts	0x017B, r27
		if(Flags&F_UARTTX){
			Flags=Flags&(0xFF-F_UARTTX);
			PORTD |=(1<<STATUS); // debug
			
			// TODO : stream results better : sprintf ~= 2573 CPU cycles ! (itoa ~= 879 CCk)
			char str[40] = {0};
     60a:	ce 01       	movw	r24, r28
     60c:	01 96       	adiw	r24, 0x01	; 1
     60e:	9a ab       	std	Y+50, r25	; 0x32
     610:	89 ab       	std	Y+49, r24	; 0x31
			Acc.v=0;
			Acc.i=0;
			Acc.p=0;
			uint16_t temp0;
			temp0 = Sum.v*NORM;
			Res.v = sqrt(temp0)*CalCoeffs[0].gain; // estimated 494 CPU Cycles !
     612:	20 91 4b 01 	lds	r18, 0x014B
     616:	30 e0       	ldi	r19, 0x00	; 0
			temp0 = Sum.i*NORM;
			Res.i = sqrt(temp0)*CalCoeffs[1].gain;
     618:	80 91 4e 01 	lds	r24, 0x014E
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	e0 90 78 01 	lds	r14, 0x0178
     622:	f0 90 79 01 	lds	r15, 0x0179
     626:	00 91 7a 01 	lds	r16, 0x017A
     62a:	10 91 7b 01 	lds	r17, 0x017B
     62e:	a0 91 74 01 	lds	r26, 0x0174
     632:	a9 a7       	std	Y+41, r26	; 0x29
     634:	b0 91 75 01 	lds	r27, 0x0175
     638:	ba a7       	std	Y+42, r27	; 0x2a
     63a:	e0 91 76 01 	lds	r30, 0x0176
     63e:	eb a7       	std	Y+43, r30	; 0x2b
     640:	f0 91 77 01 	lds	r31, 0x0177
     644:	fc a7       	std	Y+44, r31	; 0x2c
     646:	c0 90 7c 01 	lds	r12, 0x017C
     64a:	d0 90 7d 01 	lds	r13, 0x017D
     64e:	70 91 7e 01 	lds	r23, 0x017E
     652:	60 91 7f 01 	lds	r22, 0x017F
			Acc.v=0;
			Acc.i=0;
			Acc.p=0;
			uint16_t temp0;
			temp0 = Sum.v*NORM;
			Res.v = sqrt(temp0)*CalCoeffs[0].gain; // estimated 494 CPU Cycles !
     656:	49 01       	movw	r8, r18
     658:	aa 24       	eor	r10, r10
     65a:	97 fc       	sbrc	r9, 7
     65c:	a0 94       	com	r10
     65e:	ba 2c       	mov	r11, r10
     660:	8d a6       	std	Y+45, r8	; 0x2d
     662:	9e a6       	std	Y+46, r9	; 0x2e
     664:	af a6       	std	Y+47, r10	; 0x2f
     666:	b8 aa       	std	Y+48, r11	; 0x30
			temp0 = Sum.i*NORM;
			Res.i = sqrt(temp0)*CalCoeffs[1].gain;
     668:	1c 01       	movw	r2, r24
     66a:	44 24       	eor	r4, r4
     66c:	37 fc       	sbrc	r3, 7
     66e:	40 94       	com	r4
     670:	54 2c       	mov	r5, r4
	Res.p=1.0;
	Res.v=2.0;
	Res.i=3.0;
	
	while(1){
		if(Flags&F_CYCLE_FULL){
     672:	80 91 53 01 	lds	r24, 0x0153
     676:	80 ff       	sbrs	r24, 0
     678:	a2 c0       	rjmp	.+324    	; 0x7be <main+0x27e>
			Flags=Flags&(0xFF-F_CYCLE_FULL);
     67a:	80 91 53 01 	lds	r24, 0x0153
     67e:	8e 7f       	andi	r24, 0xFE	; 254
     680:	80 93 53 01 	sts	0x0153, r24
			Sum = Acc;
     684:	ad e8       	ldi	r26, 0x8D	; 141
     686:	b1 e0       	ldi	r27, 0x01	; 1
     688:	e1 e8       	ldi	r30, 0x81	; 129
     68a:	f1 e0       	ldi	r31, 0x01	; 1
     68c:	8c e0       	ldi	r24, 0x0C	; 12
     68e:	01 90       	ld	r0, Z+
     690:	0d 92       	st	X+, r0
     692:	81 50       	subi	r24, 0x01	; 1
     694:	e1 f7       	brne	.-8      	; 0x68e <main+0x14e>
			Acc.v=0;
     696:	10 92 81 01 	sts	0x0181, r1
     69a:	10 92 82 01 	sts	0x0182, r1
     69e:	10 92 83 01 	sts	0x0183, r1
     6a2:	10 92 84 01 	sts	0x0184, r1
			Acc.i=0;
     6a6:	10 92 85 01 	sts	0x0185, r1
     6aa:	10 92 86 01 	sts	0x0186, r1
     6ae:	10 92 87 01 	sts	0x0187, r1
     6b2:	10 92 88 01 	sts	0x0188, r1
			Acc.p=0;
     6b6:	10 92 89 01 	sts	0x0189, r1
     6ba:	10 92 8a 01 	sts	0x018A, r1
     6be:	10 92 8b 01 	sts	0x018B, r1
     6c2:	10 92 8c 01 	sts	0x018C, r1
			uint16_t temp0;
			temp0 = Sum.v*NORM;
			Res.v = sqrt(temp0)*CalCoeffs[0].gain; // estimated 494 CPU Cycles !
     6c6:	60 91 8d 01 	lds	r22, 0x018D
     6ca:	70 91 8e 01 	lds	r23, 0x018E
     6ce:	80 91 8f 01 	lds	r24, 0x018F
     6d2:	90 91 90 01 	lds	r25, 0x0190
     6d6:	0e 94 27 08 	call	0x104e	; 0x104e <__floatsisf>
     6da:	29 ed       	ldi	r18, 0xD9	; 217
     6dc:	39 e8       	ldi	r19, 0x89	; 137
     6de:	4d e1       	ldi	r20, 0x1D	; 29
     6e0:	5c e3       	ldi	r21, 0x3C	; 60
     6e2:	0e 94 af 08 	call	0x115e	; 0x115e <__mulsf3>
     6e6:	0e 94 f9 07 	call	0xff2	; 0xff2 <__fixunssfsi>
     6ea:	80 e0       	ldi	r24, 0x00	; 0
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	0e 94 25 08 	call	0x104a	; 0x104a <__floatunsisf>
     6f2:	0e 94 16 09 	call	0x122c	; 0x122c <sqrt>
     6f6:	7b 01       	movw	r14, r22
     6f8:	8c 01       	movw	r16, r24
     6fa:	6d a5       	ldd	r22, Y+45	; 0x2d
     6fc:	7e a5       	ldd	r23, Y+46	; 0x2e
     6fe:	8f a5       	ldd	r24, Y+47	; 0x2f
     700:	98 a9       	ldd	r25, Y+48	; 0x30
     702:	0e 94 27 08 	call	0x104e	; 0x104e <__floatsisf>
     706:	3b 01       	movw	r6, r22
     708:	4c 01       	movw	r8, r24
     70a:	c8 01       	movw	r24, r16
     70c:	b7 01       	movw	r22, r14
     70e:	a4 01       	movw	r20, r8
     710:	93 01       	movw	r18, r6
     712:	0e 94 af 08 	call	0x115e	; 0x115e <__mulsf3>
     716:	69 a7       	std	Y+41, r22	; 0x29
     718:	7a a7       	std	Y+42, r23	; 0x2a
     71a:	8b a7       	std	Y+43, r24	; 0x2b
     71c:	9c a7       	std	Y+44, r25	; 0x2c
			temp0 = Sum.i*NORM;
			Res.i = sqrt(temp0)*CalCoeffs[1].gain;
     71e:	60 91 91 01 	lds	r22, 0x0191
     722:	70 91 92 01 	lds	r23, 0x0192
     726:	80 91 93 01 	lds	r24, 0x0193
     72a:	90 91 94 01 	lds	r25, 0x0194
     72e:	0e 94 27 08 	call	0x104e	; 0x104e <__floatsisf>
     732:	29 ed       	ldi	r18, 0xD9	; 217
     734:	39 e8       	ldi	r19, 0x89	; 137
     736:	4d e1       	ldi	r20, 0x1D	; 29
     738:	5c e3       	ldi	r21, 0x3C	; 60
     73a:	0e 94 af 08 	call	0x115e	; 0x115e <__mulsf3>
     73e:	0e 94 f9 07 	call	0xff2	; 0xff2 <__fixunssfsi>
     742:	80 e0       	ldi	r24, 0x00	; 0
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	0e 94 25 08 	call	0x104a	; 0x104a <__floatunsisf>
     74a:	0e 94 16 09 	call	0x122c	; 0x122c <sqrt>
     74e:	7b 01       	movw	r14, r22
     750:	8c 01       	movw	r16, r24
     752:	c2 01       	movw	r24, r4
     754:	b1 01       	movw	r22, r2
     756:	0e 94 27 08 	call	0x104e	; 0x104e <__floatsisf>
     75a:	5b 01       	movw	r10, r22
     75c:	6c 01       	movw	r12, r24
     75e:	c8 01       	movw	r24, r16
     760:	b7 01       	movw	r22, r14
     762:	a6 01       	movw	r20, r12
     764:	95 01       	movw	r18, r10
     766:	0e 94 af 08 	call	0x115e	; 0x115e <__mulsf3>
     76a:	7b 01       	movw	r14, r22
     76c:	8c 01       	movw	r16, r24
			if(Res.i<IMIN){
     76e:	2f e6       	ldi	r18, 0x6F	; 111
     770:	32 e1       	ldi	r19, 0x12	; 18
     772:	43 e8       	ldi	r20, 0x83	; 131
     774:	5a e3       	ldi	r21, 0x3A	; 58
     776:	0e 94 f5 07 	call	0xfea	; 0xfea <__cmpsf2>
     77a:	88 23       	and	r24, r24
     77c:	2c f4       	brge	.+10     	; 0x788 <main+0x248>
     77e:	cc 24       	eor	r12, r12
     780:	dd 24       	eor	r13, r13
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	60 e0       	ldi	r22, 0x00	; 0
     786:	1b c0       	rjmp	.+54     	; 0x7be <main+0x27e>
				Res.p=0.0;
			}else{
				Res.p = Sum.p*NORM*CalCoeffs[0].gain*CalCoeffs[1].gain;
     788:	60 91 95 01 	lds	r22, 0x0195
     78c:	70 91 96 01 	lds	r23, 0x0196
     790:	80 91 97 01 	lds	r24, 0x0197
     794:	90 91 98 01 	lds	r25, 0x0198
     798:	0e 94 27 08 	call	0x104e	; 0x104e <__floatsisf>
     79c:	29 ed       	ldi	r18, 0xD9	; 217
     79e:	39 e8       	ldi	r19, 0x89	; 137
     7a0:	4d e1       	ldi	r20, 0x1D	; 29
     7a2:	5c e3       	ldi	r21, 0x3C	; 60
     7a4:	0e 94 af 08 	call	0x115e	; 0x115e <__mulsf3>
     7a8:	a4 01       	movw	r20, r8
     7aa:	93 01       	movw	r18, r6
     7ac:	0e 94 af 08 	call	0x115e	; 0x115e <__mulsf3>
     7b0:	a6 01       	movw	r20, r12
     7b2:	95 01       	movw	r18, r10
     7b4:	0e 94 af 08 	call	0x115e	; 0x115e <__mulsf3>
     7b8:	6b 01       	movw	r12, r22
     7ba:	78 2f       	mov	r23, r24
     7bc:	69 2f       	mov	r22, r25
			}
		}
		if(Flags&F_UARTRX){//TODO : add user input cal here
     7be:	80 91 53 01 	lds	r24, 0x0153
     7c2:	82 ff       	sbrs	r24, 2
     7c4:	18 c0       	rjmp	.+48     	; 0x7f6 <main+0x2b6>
		Flags=Flags&(0xFF-F_UARTRX);
     7c6:	80 91 53 01 	lds	r24, 0x0153
     7ca:	8b 7f       	andi	r24, 0xFB	; 251
     7cc:	80 93 53 01 	sts	0x0153, r24
			uart_transmit(data);
     7d0:	90 91 80 01 	lds	r25, 0x0180
	UBRR0L = BAUDRATE;	// set baud rate
	UCSR0B|= (1<<TXEN0)|(1<<RXEN0)|(1<<RXCIE0);	// enable receiver and transmitter
	UCSR0C|= (1<<UCSZ00)|(1<<UCSZ01);	// 8bit data format
}
void uart_transmit (uint8_t data){
	while (!( UCSR0A & (1<<UDRE0)));	// wait while register is free
     7d4:	80 91 c0 00 	lds	r24, 0x00C0
     7d8:	85 ff       	sbrs	r24, 5
     7da:	fc cf       	rjmp	.-8      	; 0x7d4 <main+0x294>
	UDR0 = data;	// load data in the register
     7dc:	90 93 c6 00 	sts	0x00C6, r25
			}
		}
		if(Flags&F_UARTRX){//TODO : add user input cal here
		Flags=Flags&(0xFF-F_UARTRX);
			uart_transmit(data);
			if(data=='a')PORTD ^=(1<<STATUS1);
     7e0:	80 91 80 01 	lds	r24, 0x0180
     7e4:	81 36       	cpi	r24, 0x61	; 97
     7e6:	29 f4       	brne	.+10     	; 0x7f2 <main+0x2b2>
     7e8:	8b b1       	in	r24, 0x0b	; 11
     7ea:	90 e4       	ldi	r25, 0x40	; 64
     7ec:	99 2e       	mov	r9, r25
     7ee:	89 25       	eor	r24, r9
     7f0:	8b b9       	out	0x0b, r24	; 11
			data=0;
     7f2:	10 92 80 01 	sts	0x0180, r1
		}
		if(Flags&F_UARTTX){
     7f6:	80 91 53 01 	lds	r24, 0x0153
     7fa:	81 ff       	sbrs	r24, 1
     7fc:	3a cf       	rjmp	.-396    	; 0x672 <main+0x132>
     7fe:	c7 01       	movw	r24, r14
     800:	d8 01       	movw	r26, r16
     802:	80 93 78 01 	sts	0x0178, r24
     806:	90 93 79 01 	sts	0x0179, r25
     80a:	a0 93 7a 01 	sts	0x017A, r26
     80e:	b0 93 7b 01 	sts	0x017B, r27
     812:	29 a5       	ldd	r18, Y+41	; 0x29
     814:	3a a5       	ldd	r19, Y+42	; 0x2a
     816:	4b a5       	ldd	r20, Y+43	; 0x2b
     818:	5c a5       	ldd	r21, Y+44	; 0x2c
     81a:	c9 01       	movw	r24, r18
     81c:	da 01       	movw	r26, r20
     81e:	80 93 74 01 	sts	0x0174, r24
     822:	90 93 75 01 	sts	0x0175, r25
     826:	a0 93 76 01 	sts	0x0176, r26
     82a:	b0 93 77 01 	sts	0x0177, r27
     82e:	47 2f       	mov	r20, r23
     830:	56 2f       	mov	r21, r22
     832:	c6 01       	movw	r24, r12
     834:	da 01       	movw	r26, r20
     836:	80 93 7c 01 	sts	0x017C, r24
     83a:	90 93 7d 01 	sts	0x017D, r25
     83e:	a0 93 7e 01 	sts	0x017E, r26
     842:	b0 93 7f 01 	sts	0x017F, r27
			Flags=Flags&(0xFF-F_UARTTX);
     846:	80 91 53 01 	lds	r24, 0x0153
     84a:	8d 7f       	andi	r24, 0xFD	; 253
     84c:	80 93 53 01 	sts	0x0153, r24
			PORTD |=(1<<STATUS); // debug
     850:	5d 9a       	sbi	0x0b, 5	; 11
			
			// TODO : stream results better : sprintf ~= 2573 CPU cycles ! (itoa ~= 879 CCk)
			char str[40] = {0};
     852:	a9 a9       	ldd	r26, Y+49	; 0x31
     854:	ba a9       	ldd	r27, Y+50	; 0x32
     856:	e8 e2       	ldi	r30, 0x28	; 40
     858:	1d 92       	st	X+, r1
     85a:	ea 95       	dec	r30
     85c:	e9 f7       	brne	.-6      	; 0x858 <main+0x318>
			sprintf(str, "P = %4.2f, V = %5.2f, I = %4.3f\r\n",Res.p,Res.v,Res.i);
     85e:	8d b7       	in	r24, 0x3d	; 61
     860:	9e b7       	in	r25, 0x3e	; 62
     862:	40 97       	sbiw	r24, 0x10	; 16
     864:	0f b6       	in	r0, 0x3f	; 63
     866:	f8 94       	cli
     868:	9e bf       	out	0x3e, r25	; 62
     86a:	0f be       	out	0x3f, r0	; 63
     86c:	8d bf       	out	0x3d, r24	; 61
     86e:	ed b7       	in	r30, 0x3d	; 61
     870:	fe b7       	in	r31, 0x3e	; 62
     872:	31 96       	adiw	r30, 0x01	; 1
     874:	b1 e0       	ldi	r27, 0x01	; 1
     876:	8b 2e       	mov	r8, r27
     878:	91 2c       	mov	r9, r1
     87a:	8c 0e       	add	r8, r28
     87c:	9d 1e       	adc	r9, r29
     87e:	ad b7       	in	r26, 0x3d	; 61
     880:	be b7       	in	r27, 0x3e	; 62
     882:	12 96       	adiw	r26, 0x02	; 2
     884:	9c 92       	st	X, r9
     886:	8e 92       	st	-X, r8
     888:	11 97       	sbiw	r26, 0x01	; 1
     88a:	a8 e2       	ldi	r26, 0x28	; 40
     88c:	aa 2e       	mov	r10, r26
     88e:	a1 e0       	ldi	r26, 0x01	; 1
     890:	ba 2e       	mov	r11, r26
     892:	b3 82       	std	Z+3, r11	; 0x03
     894:	a2 82       	std	Z+2, r10	; 0x02
     896:	c6 01       	movw	r24, r12
     898:	da 01       	movw	r26, r20
     89a:	84 83       	std	Z+4, r24	; 0x04
     89c:	95 83       	std	Z+5, r25	; 0x05
     89e:	a6 83       	std	Z+6, r26	; 0x06
     8a0:	b7 83       	std	Z+7, r27	; 0x07
     8a2:	29 a5       	ldd	r18, Y+41	; 0x29
     8a4:	3a a5       	ldd	r19, Y+42	; 0x2a
     8a6:	4b a5       	ldd	r20, Y+43	; 0x2b
     8a8:	5c a5       	ldd	r21, Y+44	; 0x2c
     8aa:	c9 01       	movw	r24, r18
     8ac:	da 01       	movw	r26, r20
     8ae:	80 87       	std	Z+8, r24	; 0x08
     8b0:	91 87       	std	Z+9, r25	; 0x09
     8b2:	a2 87       	std	Z+10, r26	; 0x0a
     8b4:	b3 87       	std	Z+11, r27	; 0x0b
     8b6:	e4 86       	std	Z+12, r14	; 0x0c
     8b8:	f5 86       	std	Z+13, r15	; 0x0d
     8ba:	06 87       	std	Z+14, r16	; 0x0e
     8bc:	17 87       	std	Z+15, r17	; 0x0f
     8be:	0e 94 01 0b 	call	0x1602	; 0x1602 <sprintf>
			uart_transmitMult(str);
     8c2:	8d b7       	in	r24, 0x3d	; 61
     8c4:	9e b7       	in	r25, 0x3e	; 62
     8c6:	40 96       	adiw	r24, 0x10	; 16
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	9e bf       	out	0x3e, r25	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	8d bf       	out	0x3d, r24	; 61
     8d2:	c4 01       	movw	r24, r8
     8d4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <uart_transmitMult>
			PORTD &=~(1<<STATUS); // debug
     8d8:	5d 98       	cbi	0x0b, 5	; 11
     8da:	9b ce       	rjmp	.-714    	; 0x612 <main+0xd2>

000008dc <vfprintf>:
     8dc:	a1 e1       	ldi	r26, 0x11	; 17
     8de:	b0 e0       	ldi	r27, 0x00	; 0
     8e0:	e4 e7       	ldi	r30, 0x74	; 116
     8e2:	f4 e0       	ldi	r31, 0x04	; 4
     8e4:	0c 94 b0 09 	jmp	0x1360	; 0x1360 <__prologue_saves__>
     8e8:	3c 01       	movw	r6, r24
     8ea:	7f 87       	std	Y+15, r23	; 0x0f
     8ec:	6e 87       	std	Y+14, r22	; 0x0e
     8ee:	6a 01       	movw	r12, r20
     8f0:	fc 01       	movw	r30, r24
     8f2:	17 82       	std	Z+7, r1	; 0x07
     8f4:	16 82       	std	Z+6, r1	; 0x06
     8f6:	83 81       	ldd	r24, Z+3	; 0x03
     8f8:	81 fd       	sbrc	r24, 1
     8fa:	03 c0       	rjmp	.+6      	; 0x902 <__stack+0x3>
     8fc:	6f ef       	ldi	r22, 0xFF	; 255
     8fe:	7f ef       	ldi	r23, 0xFF	; 255
     900:	6f c3       	rjmp	.+1758   	; 0xfe0 <__stack+0x6e1>
     902:	9e 01       	movw	r18, r28
     904:	2f 5f       	subi	r18, 0xFF	; 255
     906:	3f 4f       	sbci	r19, 0xFF	; 255
     908:	39 8b       	std	Y+17, r19	; 0x11
     90a:	28 8b       	std	Y+16, r18	; 0x10
     90c:	f3 01       	movw	r30, r6
     90e:	23 81       	ldd	r18, Z+3	; 0x03
     910:	ee 85       	ldd	r30, Y+14	; 0x0e
     912:	ff 85       	ldd	r31, Y+15	; 0x0f
     914:	23 fd       	sbrc	r18, 3
     916:	85 91       	lpm	r24, Z+
     918:	23 ff       	sbrs	r18, 3
     91a:	81 91       	ld	r24, Z+
     91c:	ff 87       	std	Y+15, r31	; 0x0f
     91e:	ee 87       	std	Y+14, r30	; 0x0e
     920:	88 23       	and	r24, r24
     922:	09 f4       	brne	.+2      	; 0x926 <__stack+0x27>
     924:	5a c3       	rjmp	.+1716   	; 0xfda <__stack+0x6db>
     926:	85 32       	cpi	r24, 0x25	; 37
     928:	51 f4       	brne	.+20     	; 0x93e <__stack+0x3f>
     92a:	ee 85       	ldd	r30, Y+14	; 0x0e
     92c:	ff 85       	ldd	r31, Y+15	; 0x0f
     92e:	23 fd       	sbrc	r18, 3
     930:	85 91       	lpm	r24, Z+
     932:	23 ff       	sbrs	r18, 3
     934:	81 91       	ld	r24, Z+
     936:	ff 87       	std	Y+15, r31	; 0x0f
     938:	ee 87       	std	Y+14, r30	; 0x0e
     93a:	85 32       	cpi	r24, 0x25	; 37
     93c:	29 f4       	brne	.+10     	; 0x948 <__stack+0x49>
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	b3 01       	movw	r22, r6
     942:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     946:	e2 cf       	rjmp	.-60     	; 0x90c <__stack+0xd>
     948:	98 2f       	mov	r25, r24
     94a:	10 e0       	ldi	r17, 0x00	; 0
     94c:	88 24       	eor	r8, r8
     94e:	99 24       	eor	r9, r9
     950:	10 32       	cpi	r17, 0x20	; 32
     952:	b0 f4       	brcc	.+44     	; 0x980 <__stack+0x81>
     954:	9b 32       	cpi	r25, 0x2B	; 43
     956:	69 f0       	breq	.+26     	; 0x972 <__stack+0x73>
     958:	9c 32       	cpi	r25, 0x2C	; 44
     95a:	28 f4       	brcc	.+10     	; 0x966 <__stack+0x67>
     95c:	90 32       	cpi	r25, 0x20	; 32
     95e:	51 f0       	breq	.+20     	; 0x974 <__stack+0x75>
     960:	93 32       	cpi	r25, 0x23	; 35
     962:	71 f4       	brne	.+28     	; 0x980 <__stack+0x81>
     964:	0b c0       	rjmp	.+22     	; 0x97c <__stack+0x7d>
     966:	9d 32       	cpi	r25, 0x2D	; 45
     968:	39 f0       	breq	.+14     	; 0x978 <__stack+0x79>
     96a:	90 33       	cpi	r25, 0x30	; 48
     96c:	49 f4       	brne	.+18     	; 0x980 <__stack+0x81>
     96e:	11 60       	ori	r17, 0x01	; 1
     970:	28 c0       	rjmp	.+80     	; 0x9c2 <__stack+0xc3>
     972:	12 60       	ori	r17, 0x02	; 2
     974:	14 60       	ori	r17, 0x04	; 4
     976:	25 c0       	rjmp	.+74     	; 0x9c2 <__stack+0xc3>
     978:	18 60       	ori	r17, 0x08	; 8
     97a:	23 c0       	rjmp	.+70     	; 0x9c2 <__stack+0xc3>
     97c:	10 61       	ori	r17, 0x10	; 16
     97e:	21 c0       	rjmp	.+66     	; 0x9c2 <__stack+0xc3>
     980:	17 fd       	sbrc	r17, 7
     982:	2a c0       	rjmp	.+84     	; 0x9d8 <__stack+0xd9>
     984:	89 2f       	mov	r24, r25
     986:	80 53       	subi	r24, 0x30	; 48
     988:	8a 30       	cpi	r24, 0x0A	; 10
     98a:	78 f4       	brcc	.+30     	; 0x9aa <__stack+0xab>
     98c:	16 ff       	sbrs	r17, 6
     98e:	06 c0       	rjmp	.+12     	; 0x99c <__stack+0x9d>
     990:	fa e0       	ldi	r31, 0x0A	; 10
     992:	9f 9e       	mul	r9, r31
     994:	90 2c       	mov	r9, r0
     996:	11 24       	eor	r1, r1
     998:	98 0e       	add	r9, r24
     99a:	13 c0       	rjmp	.+38     	; 0x9c2 <__stack+0xc3>
     99c:	3a e0       	ldi	r19, 0x0A	; 10
     99e:	83 9e       	mul	r8, r19
     9a0:	80 2c       	mov	r8, r0
     9a2:	11 24       	eor	r1, r1
     9a4:	88 0e       	add	r8, r24
     9a6:	10 62       	ori	r17, 0x20	; 32
     9a8:	0c c0       	rjmp	.+24     	; 0x9c2 <__stack+0xc3>
     9aa:	9e 32       	cpi	r25, 0x2E	; 46
     9ac:	21 f4       	brne	.+8      	; 0x9b6 <__stack+0xb7>
     9ae:	16 fd       	sbrc	r17, 6
     9b0:	14 c3       	rjmp	.+1576   	; 0xfda <__stack+0x6db>
     9b2:	10 64       	ori	r17, 0x40	; 64
     9b4:	06 c0       	rjmp	.+12     	; 0x9c2 <__stack+0xc3>
     9b6:	9c 36       	cpi	r25, 0x6C	; 108
     9b8:	11 f4       	brne	.+4      	; 0x9be <__stack+0xbf>
     9ba:	10 68       	ori	r17, 0x80	; 128
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <__stack+0xc3>
     9be:	98 36       	cpi	r25, 0x68	; 104
     9c0:	59 f4       	brne	.+22     	; 0x9d8 <__stack+0xd9>
     9c2:	ee 85       	ldd	r30, Y+14	; 0x0e
     9c4:	ff 85       	ldd	r31, Y+15	; 0x0f
     9c6:	23 fd       	sbrc	r18, 3
     9c8:	95 91       	lpm	r25, Z+
     9ca:	23 ff       	sbrs	r18, 3
     9cc:	91 91       	ld	r25, Z+
     9ce:	ff 87       	std	Y+15, r31	; 0x0f
     9d0:	ee 87       	std	Y+14, r30	; 0x0e
     9d2:	99 23       	and	r25, r25
     9d4:	09 f0       	breq	.+2      	; 0x9d8 <__stack+0xd9>
     9d6:	bc cf       	rjmp	.-136    	; 0x950 <__stack+0x51>
     9d8:	89 2f       	mov	r24, r25
     9da:	85 54       	subi	r24, 0x45	; 69
     9dc:	83 30       	cpi	r24, 0x03	; 3
     9de:	20 f4       	brcc	.+8      	; 0x9e8 <__stack+0xe9>
     9e0:	81 2f       	mov	r24, r17
     9e2:	80 61       	ori	r24, 0x10	; 16
     9e4:	90 5e       	subi	r25, 0xE0	; 224
     9e6:	07 c0       	rjmp	.+14     	; 0x9f6 <__stack+0xf7>
     9e8:	89 2f       	mov	r24, r25
     9ea:	85 56       	subi	r24, 0x65	; 101
     9ec:	83 30       	cpi	r24, 0x03	; 3
     9ee:	08 f0       	brcs	.+2      	; 0x9f2 <__stack+0xf3>
     9f0:	9f c1       	rjmp	.+830    	; 0xd30 <__stack+0x431>
     9f2:	81 2f       	mov	r24, r17
     9f4:	8f 7e       	andi	r24, 0xEF	; 239
     9f6:	86 fd       	sbrc	r24, 6
     9f8:	02 c0       	rjmp	.+4      	; 0x9fe <__stack+0xff>
     9fa:	76 e0       	ldi	r23, 0x06	; 6
     9fc:	97 2e       	mov	r9, r23
     9fe:	6f e3       	ldi	r22, 0x3F	; 63
     a00:	f6 2e       	mov	r15, r22
     a02:	f8 22       	and	r15, r24
     a04:	95 36       	cpi	r25, 0x65	; 101
     a06:	19 f4       	brne	.+6      	; 0xa0e <__stack+0x10f>
     a08:	f0 e4       	ldi	r31, 0x40	; 64
     a0a:	ff 2a       	or	r15, r31
     a0c:	07 c0       	rjmp	.+14     	; 0xa1c <__stack+0x11d>
     a0e:	96 36       	cpi	r25, 0x66	; 102
     a10:	19 f4       	brne	.+6      	; 0xa18 <__stack+0x119>
     a12:	20 e8       	ldi	r18, 0x80	; 128
     a14:	f2 2a       	or	r15, r18
     a16:	02 c0       	rjmp	.+4      	; 0xa1c <__stack+0x11d>
     a18:	91 10       	cpse	r9, r1
     a1a:	9a 94       	dec	r9
     a1c:	f7 fe       	sbrs	r15, 7
     a1e:	0a c0       	rjmp	.+20     	; 0xa34 <__stack+0x135>
     a20:	3b e3       	ldi	r19, 0x3B	; 59
     a22:	39 15       	cp	r19, r9
     a24:	18 f4       	brcc	.+6      	; 0xa2c <__stack+0x12d>
     a26:	5c e3       	ldi	r21, 0x3C	; 60
     a28:	b5 2e       	mov	r11, r21
     a2a:	02 c0       	rjmp	.+4      	; 0xa30 <__stack+0x131>
     a2c:	b9 2c       	mov	r11, r9
     a2e:	b3 94       	inc	r11
     a30:	27 e0       	ldi	r18, 0x07	; 7
     a32:	09 c0       	rjmp	.+18     	; 0xa46 <__stack+0x147>
     a34:	47 e0       	ldi	r20, 0x07	; 7
     a36:	49 15       	cp	r20, r9
     a38:	20 f4       	brcc	.+8      	; 0xa42 <__stack+0x143>
     a3a:	bb 24       	eor	r11, r11
     a3c:	47 e0       	ldi	r20, 0x07	; 7
     a3e:	94 2e       	mov	r9, r20
     a40:	f7 cf       	rjmp	.-18     	; 0xa30 <__stack+0x131>
     a42:	29 2d       	mov	r18, r9
     a44:	bb 24       	eor	r11, r11
     a46:	c6 01       	movw	r24, r12
     a48:	04 96       	adiw	r24, 0x04	; 4
     a4a:	9d 87       	std	Y+13, r25	; 0x0d
     a4c:	8c 87       	std	Y+12, r24	; 0x0c
     a4e:	f6 01       	movw	r30, r12
     a50:	60 81       	ld	r22, Z
     a52:	71 81       	ldd	r23, Z+1	; 0x01
     a54:	82 81       	ldd	r24, Z+2	; 0x02
     a56:	93 81       	ldd	r25, Z+3	; 0x03
     a58:	ae 01       	movw	r20, r28
     a5a:	4f 5f       	subi	r20, 0xFF	; 255
     a5c:	5f 4f       	sbci	r21, 0xFF	; 255
     a5e:	0b 2d       	mov	r16, r11
     a60:	0e 94 e7 09 	call	0x13ce	; 0x13ce <__ftoa_engine>
     a64:	6c 01       	movw	r12, r24
     a66:	09 81       	ldd	r16, Y+1	; 0x01
     a68:	20 2e       	mov	r2, r16
     a6a:	33 24       	eor	r3, r3
     a6c:	00 ff       	sbrs	r16, 0
     a6e:	04 c0       	rjmp	.+8      	; 0xa78 <__stack+0x179>
     a70:	03 fd       	sbrc	r16, 3
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <__stack+0x179>
     a74:	1d e2       	ldi	r17, 0x2D	; 45
     a76:	09 c0       	rjmp	.+18     	; 0xa8a <__stack+0x18b>
     a78:	f1 fe       	sbrs	r15, 1
     a7a:	02 c0       	rjmp	.+4      	; 0xa80 <__stack+0x181>
     a7c:	1b e2       	ldi	r17, 0x2B	; 43
     a7e:	05 c0       	rjmp	.+10     	; 0xa8a <__stack+0x18b>
     a80:	f2 fc       	sbrc	r15, 2
     a82:	02 c0       	rjmp	.+4      	; 0xa88 <__stack+0x189>
     a84:	10 e0       	ldi	r17, 0x00	; 0
     a86:	01 c0       	rjmp	.+2      	; 0xa8a <__stack+0x18b>
     a88:	10 e2       	ldi	r17, 0x20	; 32
     a8a:	c1 01       	movw	r24, r2
     a8c:	8c 70       	andi	r24, 0x0C	; 12
     a8e:	90 70       	andi	r25, 0x00	; 0
     a90:	89 2b       	or	r24, r25
     a92:	b9 f1       	breq	.+110    	; 0xb02 <__stack+0x203>
     a94:	11 23       	and	r17, r17
     a96:	11 f4       	brne	.+4      	; 0xa9c <__stack+0x19d>
     a98:	83 e0       	ldi	r24, 0x03	; 3
     a9a:	01 c0       	rjmp	.+2      	; 0xa9e <__stack+0x19f>
     a9c:	84 e0       	ldi	r24, 0x04	; 4
     a9e:	88 15       	cp	r24, r8
     aa0:	10 f0       	brcs	.+4      	; 0xaa6 <__stack+0x1a7>
     aa2:	88 24       	eor	r8, r8
     aa4:	0a c0       	rjmp	.+20     	; 0xaba <__stack+0x1bb>
     aa6:	88 1a       	sub	r8, r24
     aa8:	f3 fc       	sbrc	r15, 3
     aaa:	07 c0       	rjmp	.+14     	; 0xaba <__stack+0x1bb>
     aac:	80 e2       	ldi	r24, 0x20	; 32
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	b3 01       	movw	r22, r6
     ab2:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     ab6:	8a 94       	dec	r8
     ab8:	c9 f7       	brne	.-14     	; 0xaac <__stack+0x1ad>
     aba:	11 23       	and	r17, r17
     abc:	29 f0       	breq	.+10     	; 0xac8 <__stack+0x1c9>
     abe:	81 2f       	mov	r24, r17
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	b3 01       	movw	r22, r6
     ac4:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     ac8:	23 fe       	sbrs	r2, 3
     aca:	03 c0       	rjmp	.+6      	; 0xad2 <__stack+0x1d3>
     acc:	08 e6       	ldi	r16, 0x68	; 104
     ace:	10 e0       	ldi	r17, 0x00	; 0
     ad0:	0e c0       	rjmp	.+28     	; 0xaee <__stack+0x1ef>
     ad2:	0c e6       	ldi	r16, 0x6C	; 108
     ad4:	10 e0       	ldi	r17, 0x00	; 0
     ad6:	0b c0       	rjmp	.+22     	; 0xaee <__stack+0x1ef>
     ad8:	e1 14       	cp	r14, r1
     ada:	f1 04       	cpc	r15, r1
     adc:	09 f0       	breq	.+2      	; 0xae0 <__stack+0x1e1>
     ade:	80 52       	subi	r24, 0x20	; 32
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	b3 01       	movw	r22, r6
     ae4:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     ae8:	0f 5f       	subi	r16, 0xFF	; 255
     aea:	1f 4f       	sbci	r17, 0xFF	; 255
     aec:	05 c0       	rjmp	.+10     	; 0xaf8 <__stack+0x1f9>
     aee:	ef 2c       	mov	r14, r15
     af0:	ff 24       	eor	r15, r15
     af2:	f0 e1       	ldi	r31, 0x10	; 16
     af4:	ef 22       	and	r14, r31
     af6:	ff 24       	eor	r15, r15
     af8:	f8 01       	movw	r30, r16
     afa:	84 91       	lpm	r24, Z+
     afc:	88 23       	and	r24, r24
     afe:	61 f7       	brne	.-40     	; 0xad8 <__stack+0x1d9>
     b00:	14 c1       	rjmp	.+552    	; 0xd2a <__stack+0x42b>
     b02:	f7 fe       	sbrs	r15, 7
     b04:	12 c0       	rjmp	.+36     	; 0xb2a <__stack+0x22b>
     b06:	bc 0c       	add	r11, r12
     b08:	24 fe       	sbrs	r2, 4
     b0a:	04 c0       	rjmp	.+8      	; 0xb14 <__stack+0x215>
     b0c:	8a 81       	ldd	r24, Y+2	; 0x02
     b0e:	81 33       	cpi	r24, 0x31	; 49
     b10:	09 f4       	brne	.+2      	; 0xb14 <__stack+0x215>
     b12:	ba 94       	dec	r11
     b14:	1b 14       	cp	r1, r11
     b16:	1c f0       	brlt	.+6      	; 0xb1e <__stack+0x21f>
     b18:	bb 24       	eor	r11, r11
     b1a:	b3 94       	inc	r11
     b1c:	2d c0       	rjmp	.+90     	; 0xb78 <__stack+0x279>
     b1e:	f8 e0       	ldi	r31, 0x08	; 8
     b20:	fb 15       	cp	r31, r11
     b22:	50 f5       	brcc	.+84     	; 0xb78 <__stack+0x279>
     b24:	38 e0       	ldi	r19, 0x08	; 8
     b26:	b3 2e       	mov	r11, r19
     b28:	27 c0       	rjmp	.+78     	; 0xb78 <__stack+0x279>
     b2a:	f6 fc       	sbrc	r15, 6
     b2c:	25 c0       	rjmp	.+74     	; 0xb78 <__stack+0x279>
     b2e:	89 2d       	mov	r24, r9
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	8c 15       	cp	r24, r12
     b34:	9d 05       	cpc	r25, r13
     b36:	4c f0       	brlt	.+18     	; 0xb4a <__stack+0x24b>
     b38:	2c ef       	ldi	r18, 0xFC	; 252
     b3a:	c2 16       	cp	r12, r18
     b3c:	2f ef       	ldi	r18, 0xFF	; 255
     b3e:	d2 06       	cpc	r13, r18
     b40:	24 f0       	brlt	.+8      	; 0xb4a <__stack+0x24b>
     b42:	30 e8       	ldi	r19, 0x80	; 128
     b44:	f3 2a       	or	r15, r19
     b46:	01 c0       	rjmp	.+2      	; 0xb4a <__stack+0x24b>
     b48:	9a 94       	dec	r9
     b4a:	99 20       	and	r9, r9
     b4c:	49 f0       	breq	.+18     	; 0xb60 <__stack+0x261>
     b4e:	e2 e0       	ldi	r30, 0x02	; 2
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	ec 0f       	add	r30, r28
     b54:	fd 1f       	adc	r31, r29
     b56:	e9 0d       	add	r30, r9
     b58:	f1 1d       	adc	r31, r1
     b5a:	80 81       	ld	r24, Z
     b5c:	80 33       	cpi	r24, 0x30	; 48
     b5e:	a1 f3       	breq	.-24     	; 0xb48 <__stack+0x249>
     b60:	f7 fe       	sbrs	r15, 7
     b62:	0a c0       	rjmp	.+20     	; 0xb78 <__stack+0x279>
     b64:	b9 2c       	mov	r11, r9
     b66:	b3 94       	inc	r11
     b68:	89 2d       	mov	r24, r9
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	c8 16       	cp	r12, r24
     b6e:	d9 06       	cpc	r13, r25
     b70:	14 f0       	brlt	.+4      	; 0xb76 <__stack+0x277>
     b72:	99 24       	eor	r9, r9
     b74:	01 c0       	rjmp	.+2      	; 0xb78 <__stack+0x279>
     b76:	9c 18       	sub	r9, r12
     b78:	f7 fc       	sbrc	r15, 7
     b7a:	03 c0       	rjmp	.+6      	; 0xb82 <__stack+0x283>
     b7c:	25 e0       	ldi	r18, 0x05	; 5
     b7e:	30 e0       	ldi	r19, 0x00	; 0
     b80:	09 c0       	rjmp	.+18     	; 0xb94 <__stack+0x295>
     b82:	1c 14       	cp	r1, r12
     b84:	1d 04       	cpc	r1, r13
     b86:	1c f0       	brlt	.+6      	; 0xb8e <__stack+0x28f>
     b88:	21 e0       	ldi	r18, 0x01	; 1
     b8a:	30 e0       	ldi	r19, 0x00	; 0
     b8c:	03 c0       	rjmp	.+6      	; 0xb94 <__stack+0x295>
     b8e:	96 01       	movw	r18, r12
     b90:	2f 5f       	subi	r18, 0xFF	; 255
     b92:	3f 4f       	sbci	r19, 0xFF	; 255
     b94:	11 23       	and	r17, r17
     b96:	11 f0       	breq	.+4      	; 0xb9c <__stack+0x29d>
     b98:	2f 5f       	subi	r18, 0xFF	; 255
     b9a:	3f 4f       	sbci	r19, 0xFF	; 255
     b9c:	99 20       	and	r9, r9
     b9e:	29 f0       	breq	.+10     	; 0xbaa <__stack+0x2ab>
     ba0:	89 2d       	mov	r24, r9
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	01 96       	adiw	r24, 0x01	; 1
     ba6:	28 0f       	add	r18, r24
     ba8:	39 1f       	adc	r19, r25
     baa:	88 2d       	mov	r24, r8
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	28 17       	cp	r18, r24
     bb0:	39 07       	cpc	r19, r25
     bb2:	14 f0       	brlt	.+4      	; 0xbb8 <__stack+0x2b9>
     bb4:	88 24       	eor	r8, r8
     bb6:	01 c0       	rjmp	.+2      	; 0xbba <__stack+0x2bb>
     bb8:	82 1a       	sub	r8, r18
     bba:	4f 2c       	mov	r4, r15
     bbc:	55 24       	eor	r5, r5
     bbe:	c2 01       	movw	r24, r4
     bc0:	89 70       	andi	r24, 0x09	; 9
     bc2:	90 70       	andi	r25, 0x00	; 0
     bc4:	89 2b       	or	r24, r25
     bc6:	39 f0       	breq	.+14     	; 0xbd6 <__stack+0x2d7>
     bc8:	08 c0       	rjmp	.+16     	; 0xbda <__stack+0x2db>
     bca:	80 e2       	ldi	r24, 0x20	; 32
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	b3 01       	movw	r22, r6
     bd0:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     bd4:	8a 94       	dec	r8
     bd6:	88 20       	and	r8, r8
     bd8:	c1 f7       	brne	.-16     	; 0xbca <__stack+0x2cb>
     bda:	11 23       	and	r17, r17
     bdc:	29 f0       	breq	.+10     	; 0xbe8 <__stack+0x2e9>
     bde:	81 2f       	mov	r24, r17
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	b3 01       	movw	r22, r6
     be4:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     be8:	43 fe       	sbrs	r4, 3
     bea:	07 c0       	rjmp	.+14     	; 0xbfa <__stack+0x2fb>
     bec:	08 c0       	rjmp	.+16     	; 0xbfe <__stack+0x2ff>
     bee:	80 e3       	ldi	r24, 0x30	; 48
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	b3 01       	movw	r22, r6
     bf4:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     bf8:	8a 94       	dec	r8
     bfa:	88 20       	and	r8, r8
     bfc:	c1 f7       	brne	.-16     	; 0xbee <__stack+0x2ef>
     bfe:	f7 fe       	sbrs	r15, 7
     c00:	46 c0       	rjmp	.+140    	; 0xc8e <__stack+0x38f>
     c02:	86 01       	movw	r16, r12
     c04:	d7 fe       	sbrs	r13, 7
     c06:	02 c0       	rjmp	.+4      	; 0xc0c <__stack+0x30d>
     c08:	00 e0       	ldi	r16, 0x00	; 0
     c0a:	10 e0       	ldi	r17, 0x00	; 0
     c0c:	76 01       	movw	r14, r12
     c0e:	08 94       	sec
     c10:	e1 1c       	adc	r14, r1
     c12:	f1 1c       	adc	r15, r1
     c14:	e0 1a       	sub	r14, r16
     c16:	f1 0a       	sbc	r15, r17
     c18:	41 e0       	ldi	r20, 0x01	; 1
     c1a:	50 e0       	ldi	r21, 0x00	; 0
     c1c:	4c 0f       	add	r20, r28
     c1e:	5d 1f       	adc	r21, r29
     c20:	e4 0e       	add	r14, r20
     c22:	f5 1e       	adc	r15, r21
     c24:	26 01       	movw	r4, r12
     c26:	4b 18       	sub	r4, r11
     c28:	51 08       	sbc	r5, r1
     c2a:	89 2d       	mov	r24, r9
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	aa 24       	eor	r10, r10
     c30:	bb 24       	eor	r11, r11
     c32:	a8 1a       	sub	r10, r24
     c34:	b9 0a       	sbc	r11, r25
     c36:	5f ef       	ldi	r21, 0xFF	; 255
     c38:	0f 3f       	cpi	r16, 0xFF	; 255
     c3a:	15 07       	cpc	r17, r21
     c3c:	29 f4       	brne	.+10     	; 0xc48 <__stack+0x349>
     c3e:	8e e2       	ldi	r24, 0x2E	; 46
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	b3 01       	movw	r22, r6
     c44:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     c48:	c0 16       	cp	r12, r16
     c4a:	d1 06       	cpc	r13, r17
     c4c:	34 f0       	brlt	.+12     	; 0xc5a <__stack+0x35b>
     c4e:	40 16       	cp	r4, r16
     c50:	51 06       	cpc	r5, r17
     c52:	1c f4       	brge	.+6      	; 0xc5a <__stack+0x35b>
     c54:	f7 01       	movw	r30, r14
     c56:	80 81       	ld	r24, Z
     c58:	01 c0       	rjmp	.+2      	; 0xc5c <__stack+0x35d>
     c5a:	80 e3       	ldi	r24, 0x30	; 48
     c5c:	01 50       	subi	r16, 0x01	; 1
     c5e:	10 40       	sbci	r17, 0x00	; 0
     c60:	08 94       	sec
     c62:	e1 1c       	adc	r14, r1
     c64:	f1 1c       	adc	r15, r1
     c66:	0a 15       	cp	r16, r10
     c68:	1b 05       	cpc	r17, r11
     c6a:	2c f0       	brlt	.+10     	; 0xc76 <__stack+0x377>
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	b3 01       	movw	r22, r6
     c70:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     c74:	e0 cf       	rjmp	.-64     	; 0xc36 <__stack+0x337>
     c76:	0c 15       	cp	r16, r12
     c78:	1d 05       	cpc	r17, r13
     c7a:	39 f4       	brne	.+14     	; 0xc8a <__stack+0x38b>
     c7c:	9a 81       	ldd	r25, Y+2	; 0x02
     c7e:	96 33       	cpi	r25, 0x36	; 54
     c80:	18 f4       	brcc	.+6      	; 0xc88 <__stack+0x389>
     c82:	95 33       	cpi	r25, 0x35	; 53
     c84:	11 f4       	brne	.+4      	; 0xc8a <__stack+0x38b>
     c86:	24 fe       	sbrs	r2, 4
     c88:	81 e3       	ldi	r24, 0x31	; 49
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	4b c0       	rjmp	.+150    	; 0xd24 <__stack+0x425>
     c8e:	8a 81       	ldd	r24, Y+2	; 0x02
     c90:	81 33       	cpi	r24, 0x31	; 49
     c92:	09 f0       	breq	.+2      	; 0xc96 <__stack+0x397>
     c94:	0f 7e       	andi	r16, 0xEF	; 239
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	b3 01       	movw	r22, r6
     c9a:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     c9e:	99 20       	and	r9, r9
     ca0:	a1 f0       	breq	.+40     	; 0xcca <__stack+0x3cb>
     ca2:	8e e2       	ldi	r24, 0x2E	; 46
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	b3 01       	movw	r22, r6
     ca8:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     cac:	12 e0       	ldi	r17, 0x02	; 2
     cae:	e1 e0       	ldi	r30, 0x01	; 1
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	ec 0f       	add	r30, r28
     cb4:	fd 1f       	adc	r31, r29
     cb6:	e1 0f       	add	r30, r17
     cb8:	f1 1d       	adc	r31, r1
     cba:	1f 5f       	subi	r17, 0xFF	; 255
     cbc:	80 81       	ld	r24, Z
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	b3 01       	movw	r22, r6
     cc2:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     cc6:	9a 94       	dec	r9
     cc8:	91 f7       	brne	.-28     	; 0xcae <__stack+0x3af>
     cca:	44 fc       	sbrc	r4, 4
     ccc:	03 c0       	rjmp	.+6      	; 0xcd4 <__stack+0x3d5>
     cce:	85 e6       	ldi	r24, 0x65	; 101
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <__stack+0x3d9>
     cd4:	85 e4       	ldi	r24, 0x45	; 69
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	b3 01       	movw	r22, r6
     cda:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     cde:	d7 fc       	sbrc	r13, 7
     ce0:	05 c0       	rjmp	.+10     	; 0xcec <__stack+0x3ed>
     ce2:	c1 14       	cp	r12, r1
     ce4:	d1 04       	cpc	r13, r1
     ce6:	41 f4       	brne	.+16     	; 0xcf8 <__stack+0x3f9>
     ce8:	04 ff       	sbrs	r16, 4
     cea:	06 c0       	rjmp	.+12     	; 0xcf8 <__stack+0x3f9>
     cec:	d0 94       	com	r13
     cee:	c1 94       	neg	r12
     cf0:	d1 08       	sbc	r13, r1
     cf2:	d3 94       	inc	r13
     cf4:	8d e2       	ldi	r24, 0x2D	; 45
     cf6:	01 c0       	rjmp	.+2      	; 0xcfa <__stack+0x3fb>
     cf8:	8b e2       	ldi	r24, 0x2B	; 43
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	b3 01       	movw	r22, r6
     cfe:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     d02:	80 e3       	ldi	r24, 0x30	; 48
     d04:	05 c0       	rjmp	.+10     	; 0xd10 <__stack+0x411>
     d06:	8f 5f       	subi	r24, 0xFF	; 255
     d08:	26 ef       	ldi	r18, 0xF6	; 246
     d0a:	3f ef       	ldi	r19, 0xFF	; 255
     d0c:	c2 0e       	add	r12, r18
     d0e:	d3 1e       	adc	r13, r19
     d10:	3a e0       	ldi	r19, 0x0A	; 10
     d12:	c3 16       	cp	r12, r19
     d14:	d1 04       	cpc	r13, r1
     d16:	bc f7       	brge	.-18     	; 0xd06 <__stack+0x407>
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	b3 01       	movw	r22, r6
     d1c:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     d20:	c6 01       	movw	r24, r12
     d22:	c0 96       	adiw	r24, 0x30	; 48
     d24:	b3 01       	movw	r22, r6
     d26:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     d2a:	cc 84       	ldd	r12, Y+12	; 0x0c
     d2c:	dd 84       	ldd	r13, Y+13	; 0x0d
     d2e:	52 c1       	rjmp	.+676    	; 0xfd4 <__stack+0x6d5>
     d30:	93 36       	cpi	r25, 0x63	; 99
     d32:	31 f0       	breq	.+12     	; 0xd40 <__stack+0x441>
     d34:	93 37       	cpi	r25, 0x73	; 115
     d36:	99 f0       	breq	.+38     	; 0xd5e <__stack+0x45f>
     d38:	93 35       	cpi	r25, 0x53	; 83
     d3a:	09 f0       	breq	.+2      	; 0xd3e <__stack+0x43f>
     d3c:	59 c0       	rjmp	.+178    	; 0xdf0 <__stack+0x4f1>
     d3e:	23 c0       	rjmp	.+70     	; 0xd86 <__stack+0x487>
     d40:	f6 01       	movw	r30, r12
     d42:	80 81       	ld	r24, Z
     d44:	89 83       	std	Y+1, r24	; 0x01
     d46:	5e 01       	movw	r10, r28
     d48:	08 94       	sec
     d4a:	a1 1c       	adc	r10, r1
     d4c:	b1 1c       	adc	r11, r1
     d4e:	22 e0       	ldi	r18, 0x02	; 2
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	c2 0e       	add	r12, r18
     d54:	d3 1e       	adc	r13, r19
     d56:	21 e0       	ldi	r18, 0x01	; 1
     d58:	e2 2e       	mov	r14, r18
     d5a:	f1 2c       	mov	r15, r1
     d5c:	12 c0       	rjmp	.+36     	; 0xd82 <__stack+0x483>
     d5e:	f6 01       	movw	r30, r12
     d60:	a0 80       	ld	r10, Z
     d62:	b1 80       	ldd	r11, Z+1	; 0x01
     d64:	16 fd       	sbrc	r17, 6
     d66:	03 c0       	rjmp	.+6      	; 0xd6e <__stack+0x46f>
     d68:	6f ef       	ldi	r22, 0xFF	; 255
     d6a:	7f ef       	ldi	r23, 0xFF	; 255
     d6c:	02 c0       	rjmp	.+4      	; 0xd72 <__stack+0x473>
     d6e:	69 2d       	mov	r22, r9
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	22 e0       	ldi	r18, 0x02	; 2
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	c2 0e       	add	r12, r18
     d78:	d3 1e       	adc	r13, r19
     d7a:	c5 01       	movw	r24, r10
     d7c:	0e 94 ca 0a 	call	0x1594	; 0x1594 <strnlen>
     d80:	7c 01       	movw	r14, r24
     d82:	1f 77       	andi	r17, 0x7F	; 127
     d84:	13 c0       	rjmp	.+38     	; 0xdac <__stack+0x4ad>
     d86:	f6 01       	movw	r30, r12
     d88:	a0 80       	ld	r10, Z
     d8a:	b1 80       	ldd	r11, Z+1	; 0x01
     d8c:	16 fd       	sbrc	r17, 6
     d8e:	03 c0       	rjmp	.+6      	; 0xd96 <__stack+0x497>
     d90:	6f ef       	ldi	r22, 0xFF	; 255
     d92:	7f ef       	ldi	r23, 0xFF	; 255
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <__stack+0x49b>
     d96:	69 2d       	mov	r22, r9
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	22 e0       	ldi	r18, 0x02	; 2
     d9c:	30 e0       	ldi	r19, 0x00	; 0
     d9e:	c2 0e       	add	r12, r18
     da0:	d3 1e       	adc	r13, r19
     da2:	c5 01       	movw	r24, r10
     da4:	0e 94 bf 0a 	call	0x157e	; 0x157e <strnlen_P>
     da8:	7c 01       	movw	r14, r24
     daa:	10 68       	ori	r17, 0x80	; 128
     dac:	13 ff       	sbrs	r17, 3
     dae:	07 c0       	rjmp	.+14     	; 0xdbe <__stack+0x4bf>
     db0:	1b c0       	rjmp	.+54     	; 0xde8 <__stack+0x4e9>
     db2:	80 e2       	ldi	r24, 0x20	; 32
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	b3 01       	movw	r22, r6
     db8:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     dbc:	8a 94       	dec	r8
     dbe:	88 2d       	mov	r24, r8
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	e8 16       	cp	r14, r24
     dc4:	f9 06       	cpc	r15, r25
     dc6:	a8 f3       	brcs	.-22     	; 0xdb2 <__stack+0x4b3>
     dc8:	0f c0       	rjmp	.+30     	; 0xde8 <__stack+0x4e9>
     dca:	f5 01       	movw	r30, r10
     dcc:	17 fd       	sbrc	r17, 7
     dce:	85 91       	lpm	r24, Z+
     dd0:	17 ff       	sbrs	r17, 7
     dd2:	81 91       	ld	r24, Z+
     dd4:	5f 01       	movw	r10, r30
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	b3 01       	movw	r22, r6
     dda:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     dde:	81 10       	cpse	r8, r1
     de0:	8a 94       	dec	r8
     de2:	08 94       	sec
     de4:	e1 08       	sbc	r14, r1
     de6:	f1 08       	sbc	r15, r1
     de8:	e1 14       	cp	r14, r1
     dea:	f1 04       	cpc	r15, r1
     dec:	71 f7       	brne	.-36     	; 0xdca <__stack+0x4cb>
     dee:	f2 c0       	rjmp	.+484    	; 0xfd4 <__stack+0x6d5>
     df0:	94 36       	cpi	r25, 0x64	; 100
     df2:	11 f0       	breq	.+4      	; 0xdf8 <__stack+0x4f9>
     df4:	99 36       	cpi	r25, 0x69	; 105
     df6:	89 f5       	brne	.+98     	; 0xe5a <__stack+0x55b>
     df8:	17 ff       	sbrs	r17, 7
     dfa:	08 c0       	rjmp	.+16     	; 0xe0c <__stack+0x50d>
     dfc:	f6 01       	movw	r30, r12
     dfe:	20 81       	ld	r18, Z
     e00:	31 81       	ldd	r19, Z+1	; 0x01
     e02:	42 81       	ldd	r20, Z+2	; 0x02
     e04:	53 81       	ldd	r21, Z+3	; 0x03
     e06:	84 e0       	ldi	r24, 0x04	; 4
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	0a c0       	rjmp	.+20     	; 0xe20 <__stack+0x521>
     e0c:	f6 01       	movw	r30, r12
     e0e:	80 81       	ld	r24, Z
     e10:	91 81       	ldd	r25, Z+1	; 0x01
     e12:	9c 01       	movw	r18, r24
     e14:	44 27       	eor	r20, r20
     e16:	37 fd       	sbrc	r19, 7
     e18:	40 95       	com	r20
     e1a:	54 2f       	mov	r21, r20
     e1c:	82 e0       	ldi	r24, 0x02	; 2
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	c8 0e       	add	r12, r24
     e22:	d9 1e       	adc	r13, r25
     e24:	9f e6       	ldi	r25, 0x6F	; 111
     e26:	f9 2e       	mov	r15, r25
     e28:	f1 22       	and	r15, r17
     e2a:	57 ff       	sbrs	r21, 7
     e2c:	09 c0       	rjmp	.+18     	; 0xe40 <__stack+0x541>
     e2e:	50 95       	com	r21
     e30:	40 95       	com	r20
     e32:	30 95       	com	r19
     e34:	21 95       	neg	r18
     e36:	3f 4f       	sbci	r19, 0xFF	; 255
     e38:	4f 4f       	sbci	r20, 0xFF	; 255
     e3a:	5f 4f       	sbci	r21, 0xFF	; 255
     e3c:	90 e8       	ldi	r25, 0x80	; 128
     e3e:	f9 2a       	or	r15, r25
     e40:	ca 01       	movw	r24, r20
     e42:	b9 01       	movw	r22, r18
     e44:	ae 01       	movw	r20, r28
     e46:	4f 5f       	subi	r20, 0xFF	; 255
     e48:	5f 4f       	sbci	r21, 0xFF	; 255
     e4a:	2a e0       	ldi	r18, 0x0A	; 10
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	0e 94 25 0b 	call	0x164a	; 0x164a <__ultoa_invert>
     e52:	e8 2e       	mov	r14, r24
     e54:	e8 89       	ldd	r30, Y+16	; 0x10
     e56:	ee 1a       	sub	r14, r30
     e58:	41 c0       	rjmp	.+130    	; 0xedc <__stack+0x5dd>
     e5a:	95 37       	cpi	r25, 0x75	; 117
     e5c:	21 f4       	brne	.+8      	; 0xe66 <__stack+0x567>
     e5e:	1f 7e       	andi	r17, 0xEF	; 239
     e60:	2a e0       	ldi	r18, 0x0A	; 10
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	1c c0       	rjmp	.+56     	; 0xe9e <__stack+0x59f>
     e66:	19 7f       	andi	r17, 0xF9	; 249
     e68:	9f 36       	cpi	r25, 0x6F	; 111
     e6a:	61 f0       	breq	.+24     	; 0xe84 <__stack+0x585>
     e6c:	90 37       	cpi	r25, 0x70	; 112
     e6e:	20 f4       	brcc	.+8      	; 0xe78 <__stack+0x579>
     e70:	98 35       	cpi	r25, 0x58	; 88
     e72:	09 f0       	breq	.+2      	; 0xe76 <__stack+0x577>
     e74:	b2 c0       	rjmp	.+356    	; 0xfda <__stack+0x6db>
     e76:	0f c0       	rjmp	.+30     	; 0xe96 <__stack+0x597>
     e78:	90 37       	cpi	r25, 0x70	; 112
     e7a:	39 f0       	breq	.+14     	; 0xe8a <__stack+0x58b>
     e7c:	98 37       	cpi	r25, 0x78	; 120
     e7e:	09 f0       	breq	.+2      	; 0xe82 <__stack+0x583>
     e80:	ac c0       	rjmp	.+344    	; 0xfda <__stack+0x6db>
     e82:	04 c0       	rjmp	.+8      	; 0xe8c <__stack+0x58d>
     e84:	28 e0       	ldi	r18, 0x08	; 8
     e86:	30 e0       	ldi	r19, 0x00	; 0
     e88:	0a c0       	rjmp	.+20     	; 0xe9e <__stack+0x59f>
     e8a:	10 61       	ori	r17, 0x10	; 16
     e8c:	14 fd       	sbrc	r17, 4
     e8e:	14 60       	ori	r17, 0x04	; 4
     e90:	20 e1       	ldi	r18, 0x10	; 16
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	04 c0       	rjmp	.+8      	; 0xe9e <__stack+0x59f>
     e96:	14 fd       	sbrc	r17, 4
     e98:	16 60       	ori	r17, 0x06	; 6
     e9a:	20 e1       	ldi	r18, 0x10	; 16
     e9c:	32 e0       	ldi	r19, 0x02	; 2
     e9e:	17 ff       	sbrs	r17, 7
     ea0:	08 c0       	rjmp	.+16     	; 0xeb2 <__stack+0x5b3>
     ea2:	f6 01       	movw	r30, r12
     ea4:	60 81       	ld	r22, Z
     ea6:	71 81       	ldd	r23, Z+1	; 0x01
     ea8:	82 81       	ldd	r24, Z+2	; 0x02
     eaa:	93 81       	ldd	r25, Z+3	; 0x03
     eac:	44 e0       	ldi	r20, 0x04	; 4
     eae:	50 e0       	ldi	r21, 0x00	; 0
     eb0:	08 c0       	rjmp	.+16     	; 0xec2 <__stack+0x5c3>
     eb2:	f6 01       	movw	r30, r12
     eb4:	80 81       	ld	r24, Z
     eb6:	91 81       	ldd	r25, Z+1	; 0x01
     eb8:	bc 01       	movw	r22, r24
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	42 e0       	ldi	r20, 0x02	; 2
     ec0:	50 e0       	ldi	r21, 0x00	; 0
     ec2:	c4 0e       	add	r12, r20
     ec4:	d5 1e       	adc	r13, r21
     ec6:	ae 01       	movw	r20, r28
     ec8:	4f 5f       	subi	r20, 0xFF	; 255
     eca:	5f 4f       	sbci	r21, 0xFF	; 255
     ecc:	0e 94 25 0b 	call	0x164a	; 0x164a <__ultoa_invert>
     ed0:	e8 2e       	mov	r14, r24
     ed2:	58 89       	ldd	r21, Y+16	; 0x10
     ed4:	e5 1a       	sub	r14, r21
     ed6:	8f e7       	ldi	r24, 0x7F	; 127
     ed8:	f8 2e       	mov	r15, r24
     eda:	f1 22       	and	r15, r17
     edc:	f6 fe       	sbrs	r15, 6
     ede:	0b c0       	rjmp	.+22     	; 0xef6 <__stack+0x5f7>
     ee0:	8e ef       	ldi	r24, 0xFE	; 254
     ee2:	f8 22       	and	r15, r24
     ee4:	e9 14       	cp	r14, r9
     ee6:	38 f4       	brcc	.+14     	; 0xef6 <__stack+0x5f7>
     ee8:	f4 fe       	sbrs	r15, 4
     eea:	07 c0       	rjmp	.+14     	; 0xefa <__stack+0x5fb>
     eec:	f2 fc       	sbrc	r15, 2
     eee:	05 c0       	rjmp	.+10     	; 0xefa <__stack+0x5fb>
     ef0:	9f ee       	ldi	r25, 0xEF	; 239
     ef2:	f9 22       	and	r15, r25
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <__stack+0x5fb>
     ef6:	1e 2d       	mov	r17, r14
     ef8:	01 c0       	rjmp	.+2      	; 0xefc <__stack+0x5fd>
     efa:	19 2d       	mov	r17, r9
     efc:	f4 fe       	sbrs	r15, 4
     efe:	0d c0       	rjmp	.+26     	; 0xf1a <__stack+0x61b>
     f00:	fe 01       	movw	r30, r28
     f02:	ee 0d       	add	r30, r14
     f04:	f1 1d       	adc	r31, r1
     f06:	80 81       	ld	r24, Z
     f08:	80 33       	cpi	r24, 0x30	; 48
     f0a:	19 f4       	brne	.+6      	; 0xf12 <__stack+0x613>
     f0c:	e9 ee       	ldi	r30, 0xE9	; 233
     f0e:	fe 22       	and	r15, r30
     f10:	08 c0       	rjmp	.+16     	; 0xf22 <__stack+0x623>
     f12:	1f 5f       	subi	r17, 0xFF	; 255
     f14:	f2 fe       	sbrs	r15, 2
     f16:	05 c0       	rjmp	.+10     	; 0xf22 <__stack+0x623>
     f18:	03 c0       	rjmp	.+6      	; 0xf20 <__stack+0x621>
     f1a:	8f 2d       	mov	r24, r15
     f1c:	86 78       	andi	r24, 0x86	; 134
     f1e:	09 f0       	breq	.+2      	; 0xf22 <__stack+0x623>
     f20:	1f 5f       	subi	r17, 0xFF	; 255
     f22:	0f 2d       	mov	r16, r15
     f24:	f3 fc       	sbrc	r15, 3
     f26:	14 c0       	rjmp	.+40     	; 0xf50 <__stack+0x651>
     f28:	f0 fe       	sbrs	r15, 0
     f2a:	0f c0       	rjmp	.+30     	; 0xf4a <__stack+0x64b>
     f2c:	18 15       	cp	r17, r8
     f2e:	10 f0       	brcs	.+4      	; 0xf34 <__stack+0x635>
     f30:	9e 2c       	mov	r9, r14
     f32:	0b c0       	rjmp	.+22     	; 0xf4a <__stack+0x64b>
     f34:	9e 2c       	mov	r9, r14
     f36:	98 0c       	add	r9, r8
     f38:	91 1a       	sub	r9, r17
     f3a:	18 2d       	mov	r17, r8
     f3c:	06 c0       	rjmp	.+12     	; 0xf4a <__stack+0x64b>
     f3e:	80 e2       	ldi	r24, 0x20	; 32
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	b3 01       	movw	r22, r6
     f44:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     f48:	1f 5f       	subi	r17, 0xFF	; 255
     f4a:	18 15       	cp	r17, r8
     f4c:	c0 f3       	brcs	.-16     	; 0xf3e <__stack+0x63f>
     f4e:	04 c0       	rjmp	.+8      	; 0xf58 <__stack+0x659>
     f50:	18 15       	cp	r17, r8
     f52:	10 f4       	brcc	.+4      	; 0xf58 <__stack+0x659>
     f54:	81 1a       	sub	r8, r17
     f56:	01 c0       	rjmp	.+2      	; 0xf5a <__stack+0x65b>
     f58:	88 24       	eor	r8, r8
     f5a:	04 ff       	sbrs	r16, 4
     f5c:	0f c0       	rjmp	.+30     	; 0xf7c <__stack+0x67d>
     f5e:	80 e3       	ldi	r24, 0x30	; 48
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	b3 01       	movw	r22, r6
     f64:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     f68:	02 ff       	sbrs	r16, 2
     f6a:	1d c0       	rjmp	.+58     	; 0xfa6 <__stack+0x6a7>
     f6c:	01 fd       	sbrc	r16, 1
     f6e:	03 c0       	rjmp	.+6      	; 0xf76 <__stack+0x677>
     f70:	88 e7       	ldi	r24, 0x78	; 120
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	0e c0       	rjmp	.+28     	; 0xf92 <__stack+0x693>
     f76:	88 e5       	ldi	r24, 0x58	; 88
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	0b c0       	rjmp	.+22     	; 0xf92 <__stack+0x693>
     f7c:	80 2f       	mov	r24, r16
     f7e:	86 78       	andi	r24, 0x86	; 134
     f80:	91 f0       	breq	.+36     	; 0xfa6 <__stack+0x6a7>
     f82:	01 ff       	sbrs	r16, 1
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <__stack+0x68b>
     f86:	8b e2       	ldi	r24, 0x2B	; 43
     f88:	01 c0       	rjmp	.+2      	; 0xf8c <__stack+0x68d>
     f8a:	80 e2       	ldi	r24, 0x20	; 32
     f8c:	f7 fc       	sbrc	r15, 7
     f8e:	8d e2       	ldi	r24, 0x2D	; 45
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	b3 01       	movw	r22, r6
     f94:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     f98:	06 c0       	rjmp	.+12     	; 0xfa6 <__stack+0x6a7>
     f9a:	80 e3       	ldi	r24, 0x30	; 48
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	b3 01       	movw	r22, r6
     fa0:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     fa4:	9a 94       	dec	r9
     fa6:	e9 14       	cp	r14, r9
     fa8:	c0 f3       	brcs	.-16     	; 0xf9a <__stack+0x69b>
     faa:	ea 94       	dec	r14
     fac:	e1 e0       	ldi	r30, 0x01	; 1
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	ec 0f       	add	r30, r28
     fb2:	fd 1f       	adc	r31, r29
     fb4:	ee 0d       	add	r30, r14
     fb6:	f1 1d       	adc	r31, r1
     fb8:	80 81       	ld	r24, Z
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	b3 01       	movw	r22, r6
     fbe:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     fc2:	ee 20       	and	r14, r14
     fc4:	91 f7       	brne	.-28     	; 0xfaa <__stack+0x6ab>
     fc6:	06 c0       	rjmp	.+12     	; 0xfd4 <__stack+0x6d5>
     fc8:	80 e2       	ldi	r24, 0x20	; 32
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	b3 01       	movw	r22, r6
     fce:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <fputc>
     fd2:	8a 94       	dec	r8
     fd4:	88 20       	and	r8, r8
     fd6:	c1 f7       	brne	.-16     	; 0xfc8 <__stack+0x6c9>
     fd8:	99 cc       	rjmp	.-1742   	; 0x90c <__stack+0xd>
     fda:	f3 01       	movw	r30, r6
     fdc:	66 81       	ldd	r22, Z+6	; 0x06
     fde:	77 81       	ldd	r23, Z+7	; 0x07
     fe0:	cb 01       	movw	r24, r22
     fe2:	61 96       	adiw	r28, 0x11	; 17
     fe4:	e2 e1       	ldi	r30, 0x12	; 18
     fe6:	0c 94 cc 09 	jmp	0x1398	; 0x1398 <__epilogue_restores__>

00000fea <__cmpsf2>:
     fea:	6c d0       	rcall	.+216    	; 0x10c4 <__fp_cmp>
     fec:	08 f4       	brcc	.+2      	; 0xff0 <__cmpsf2+0x6>
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	08 95       	ret

00000ff2 <__fixunssfsi>:
     ff2:	94 d0       	rcall	.+296    	; 0x111c <__fp_splitA>
     ff4:	88 f0       	brcs	.+34     	; 0x1018 <__fixunssfsi+0x26>
     ff6:	9f 57       	subi	r25, 0x7F	; 127
     ff8:	90 f0       	brcs	.+36     	; 0x101e <__fixunssfsi+0x2c>
     ffa:	b9 2f       	mov	r27, r25
     ffc:	99 27       	eor	r25, r25
     ffe:	b7 51       	subi	r27, 0x17	; 23
    1000:	a0 f0       	brcs	.+40     	; 0x102a <__fixunssfsi+0x38>
    1002:	d1 f0       	breq	.+52     	; 0x1038 <__fixunssfsi+0x46>
    1004:	66 0f       	add	r22, r22
    1006:	77 1f       	adc	r23, r23
    1008:	88 1f       	adc	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	1a f0       	brmi	.+6      	; 0x1014 <__fixunssfsi+0x22>
    100e:	ba 95       	dec	r27
    1010:	c9 f7       	brne	.-14     	; 0x1004 <__fixunssfsi+0x12>
    1012:	12 c0       	rjmp	.+36     	; 0x1038 <__fixunssfsi+0x46>
    1014:	b1 30       	cpi	r27, 0x01	; 1
    1016:	81 f0       	breq	.+32     	; 0x1038 <__fixunssfsi+0x46>
    1018:	9b d0       	rcall	.+310    	; 0x1150 <__fp_zero>
    101a:	b1 e0       	ldi	r27, 0x01	; 1
    101c:	08 95       	ret
    101e:	98 c0       	rjmp	.+304    	; 0x1150 <__fp_zero>
    1020:	67 2f       	mov	r22, r23
    1022:	78 2f       	mov	r23, r24
    1024:	88 27       	eor	r24, r24
    1026:	b8 5f       	subi	r27, 0xF8	; 248
    1028:	39 f0       	breq	.+14     	; 0x1038 <__fixunssfsi+0x46>
    102a:	b9 3f       	cpi	r27, 0xF9	; 249
    102c:	cc f3       	brlt	.-14     	; 0x1020 <__fixunssfsi+0x2e>
    102e:	86 95       	lsr	r24
    1030:	77 95       	ror	r23
    1032:	67 95       	ror	r22
    1034:	b3 95       	inc	r27
    1036:	d9 f7       	brne	.-10     	; 0x102e <__fixunssfsi+0x3c>
    1038:	3e f4       	brtc	.+14     	; 0x1048 <__fixunssfsi+0x56>
    103a:	90 95       	com	r25
    103c:	80 95       	com	r24
    103e:	70 95       	com	r23
    1040:	61 95       	neg	r22
    1042:	7f 4f       	sbci	r23, 0xFF	; 255
    1044:	8f 4f       	sbci	r24, 0xFF	; 255
    1046:	9f 4f       	sbci	r25, 0xFF	; 255
    1048:	08 95       	ret

0000104a <__floatunsisf>:
    104a:	e8 94       	clt
    104c:	09 c0       	rjmp	.+18     	; 0x1060 <__floatsisf+0x12>

0000104e <__floatsisf>:
    104e:	97 fb       	bst	r25, 7
    1050:	3e f4       	brtc	.+14     	; 0x1060 <__floatsisf+0x12>
    1052:	90 95       	com	r25
    1054:	80 95       	com	r24
    1056:	70 95       	com	r23
    1058:	61 95       	neg	r22
    105a:	7f 4f       	sbci	r23, 0xFF	; 255
    105c:	8f 4f       	sbci	r24, 0xFF	; 255
    105e:	9f 4f       	sbci	r25, 0xFF	; 255
    1060:	99 23       	and	r25, r25
    1062:	a9 f0       	breq	.+42     	; 0x108e <__floatsisf+0x40>
    1064:	f9 2f       	mov	r31, r25
    1066:	96 e9       	ldi	r25, 0x96	; 150
    1068:	bb 27       	eor	r27, r27
    106a:	93 95       	inc	r25
    106c:	f6 95       	lsr	r31
    106e:	87 95       	ror	r24
    1070:	77 95       	ror	r23
    1072:	67 95       	ror	r22
    1074:	b7 95       	ror	r27
    1076:	f1 11       	cpse	r31, r1
    1078:	f8 cf       	rjmp	.-16     	; 0x106a <__floatsisf+0x1c>
    107a:	fa f4       	brpl	.+62     	; 0x10ba <__floatsisf+0x6c>
    107c:	bb 0f       	add	r27, r27
    107e:	11 f4       	brne	.+4      	; 0x1084 <__floatsisf+0x36>
    1080:	60 ff       	sbrs	r22, 0
    1082:	1b c0       	rjmp	.+54     	; 0x10ba <__floatsisf+0x6c>
    1084:	6f 5f       	subi	r22, 0xFF	; 255
    1086:	7f 4f       	sbci	r23, 0xFF	; 255
    1088:	8f 4f       	sbci	r24, 0xFF	; 255
    108a:	9f 4f       	sbci	r25, 0xFF	; 255
    108c:	16 c0       	rjmp	.+44     	; 0x10ba <__floatsisf+0x6c>
    108e:	88 23       	and	r24, r24
    1090:	11 f0       	breq	.+4      	; 0x1096 <__floatsisf+0x48>
    1092:	96 e9       	ldi	r25, 0x96	; 150
    1094:	11 c0       	rjmp	.+34     	; 0x10b8 <__floatsisf+0x6a>
    1096:	77 23       	and	r23, r23
    1098:	21 f0       	breq	.+8      	; 0x10a2 <__floatsisf+0x54>
    109a:	9e e8       	ldi	r25, 0x8E	; 142
    109c:	87 2f       	mov	r24, r23
    109e:	76 2f       	mov	r23, r22
    10a0:	05 c0       	rjmp	.+10     	; 0x10ac <__floatsisf+0x5e>
    10a2:	66 23       	and	r22, r22
    10a4:	71 f0       	breq	.+28     	; 0x10c2 <__floatsisf+0x74>
    10a6:	96 e8       	ldi	r25, 0x86	; 134
    10a8:	86 2f       	mov	r24, r22
    10aa:	70 e0       	ldi	r23, 0x00	; 0
    10ac:	60 e0       	ldi	r22, 0x00	; 0
    10ae:	2a f0       	brmi	.+10     	; 0x10ba <__floatsisf+0x6c>
    10b0:	9a 95       	dec	r25
    10b2:	66 0f       	add	r22, r22
    10b4:	77 1f       	adc	r23, r23
    10b6:	88 1f       	adc	r24, r24
    10b8:	da f7       	brpl	.-10     	; 0x10b0 <__floatsisf+0x62>
    10ba:	88 0f       	add	r24, r24
    10bc:	96 95       	lsr	r25
    10be:	87 95       	ror	r24
    10c0:	97 f9       	bld	r25, 7
    10c2:	08 95       	ret

000010c4 <__fp_cmp>:
    10c4:	99 0f       	add	r25, r25
    10c6:	00 08       	sbc	r0, r0
    10c8:	55 0f       	add	r21, r21
    10ca:	aa 0b       	sbc	r26, r26
    10cc:	e0 e8       	ldi	r30, 0x80	; 128
    10ce:	fe ef       	ldi	r31, 0xFE	; 254
    10d0:	16 16       	cp	r1, r22
    10d2:	17 06       	cpc	r1, r23
    10d4:	e8 07       	cpc	r30, r24
    10d6:	f9 07       	cpc	r31, r25
    10d8:	c0 f0       	brcs	.+48     	; 0x110a <__fp_cmp+0x46>
    10da:	12 16       	cp	r1, r18
    10dc:	13 06       	cpc	r1, r19
    10de:	e4 07       	cpc	r30, r20
    10e0:	f5 07       	cpc	r31, r21
    10e2:	98 f0       	brcs	.+38     	; 0x110a <__fp_cmp+0x46>
    10e4:	62 1b       	sub	r22, r18
    10e6:	73 0b       	sbc	r23, r19
    10e8:	84 0b       	sbc	r24, r20
    10ea:	95 0b       	sbc	r25, r21
    10ec:	39 f4       	brne	.+14     	; 0x10fc <__fp_cmp+0x38>
    10ee:	0a 26       	eor	r0, r26
    10f0:	61 f0       	breq	.+24     	; 0x110a <__fp_cmp+0x46>
    10f2:	23 2b       	or	r18, r19
    10f4:	24 2b       	or	r18, r20
    10f6:	25 2b       	or	r18, r21
    10f8:	21 f4       	brne	.+8      	; 0x1102 <__fp_cmp+0x3e>
    10fa:	08 95       	ret
    10fc:	0a 26       	eor	r0, r26
    10fe:	09 f4       	brne	.+2      	; 0x1102 <__fp_cmp+0x3e>
    1100:	a1 40       	sbci	r26, 0x01	; 1
    1102:	a6 95       	lsr	r26
    1104:	8f ef       	ldi	r24, 0xFF	; 255
    1106:	81 1d       	adc	r24, r1
    1108:	81 1d       	adc	r24, r1
    110a:	08 95       	ret

0000110c <__fp_split3>:
    110c:	57 fd       	sbrc	r21, 7
    110e:	90 58       	subi	r25, 0x80	; 128
    1110:	44 0f       	add	r20, r20
    1112:	55 1f       	adc	r21, r21
    1114:	59 f0       	breq	.+22     	; 0x112c <__fp_splitA+0x10>
    1116:	5f 3f       	cpi	r21, 0xFF	; 255
    1118:	71 f0       	breq	.+28     	; 0x1136 <__fp_splitA+0x1a>
    111a:	47 95       	ror	r20

0000111c <__fp_splitA>:
    111c:	88 0f       	add	r24, r24
    111e:	97 fb       	bst	r25, 7
    1120:	99 1f       	adc	r25, r25
    1122:	61 f0       	breq	.+24     	; 0x113c <__fp_splitA+0x20>
    1124:	9f 3f       	cpi	r25, 0xFF	; 255
    1126:	79 f0       	breq	.+30     	; 0x1146 <__fp_splitA+0x2a>
    1128:	87 95       	ror	r24
    112a:	08 95       	ret
    112c:	12 16       	cp	r1, r18
    112e:	13 06       	cpc	r1, r19
    1130:	14 06       	cpc	r1, r20
    1132:	55 1f       	adc	r21, r21
    1134:	f2 cf       	rjmp	.-28     	; 0x111a <__fp_split3+0xe>
    1136:	46 95       	lsr	r20
    1138:	f1 df       	rcall	.-30     	; 0x111c <__fp_splitA>
    113a:	08 c0       	rjmp	.+16     	; 0x114c <__fp_splitA+0x30>
    113c:	16 16       	cp	r1, r22
    113e:	17 06       	cpc	r1, r23
    1140:	18 06       	cpc	r1, r24
    1142:	99 1f       	adc	r25, r25
    1144:	f1 cf       	rjmp	.-30     	; 0x1128 <__fp_splitA+0xc>
    1146:	86 95       	lsr	r24
    1148:	71 05       	cpc	r23, r1
    114a:	61 05       	cpc	r22, r1
    114c:	08 94       	sec
    114e:	08 95       	ret

00001150 <__fp_zero>:
    1150:	e8 94       	clt

00001152 <__fp_szero>:
    1152:	bb 27       	eor	r27, r27
    1154:	66 27       	eor	r22, r22
    1156:	77 27       	eor	r23, r23
    1158:	cb 01       	movw	r24, r22
    115a:	97 f9       	bld	r25, 7
    115c:	08 95       	ret

0000115e <__mulsf3>:
    115e:	0b d0       	rcall	.+22     	; 0x1176 <__mulsf3x>
    1160:	cf c0       	rjmp	.+414    	; 0x1300 <__fp_round>
    1162:	c0 d0       	rcall	.+384    	; 0x12e4 <__fp_pscA>
    1164:	28 f0       	brcs	.+10     	; 0x1170 <__mulsf3+0x12>
    1166:	c5 d0       	rcall	.+394    	; 0x12f2 <__fp_pscB>
    1168:	18 f0       	brcs	.+6      	; 0x1170 <__mulsf3+0x12>
    116a:	95 23       	and	r25, r21
    116c:	09 f0       	breq	.+2      	; 0x1170 <__mulsf3+0x12>
    116e:	9c c0       	rjmp	.+312    	; 0x12a8 <__fp_inf>
    1170:	af c0       	rjmp	.+350    	; 0x12d0 <__fp_nan>
    1172:	11 24       	eor	r1, r1
    1174:	ee cf       	rjmp	.-36     	; 0x1152 <__fp_szero>

00001176 <__mulsf3x>:
    1176:	ca df       	rcall	.-108    	; 0x110c <__fp_split3>
    1178:	a0 f3       	brcs	.-24     	; 0x1162 <__mulsf3+0x4>

0000117a <__mulsf3_pse>:
    117a:	95 9f       	mul	r25, r21
    117c:	d1 f3       	breq	.-12     	; 0x1172 <__mulsf3+0x14>
    117e:	95 0f       	add	r25, r21
    1180:	50 e0       	ldi	r21, 0x00	; 0
    1182:	55 1f       	adc	r21, r21
    1184:	62 9f       	mul	r22, r18
    1186:	f0 01       	movw	r30, r0
    1188:	72 9f       	mul	r23, r18
    118a:	bb 27       	eor	r27, r27
    118c:	f0 0d       	add	r31, r0
    118e:	b1 1d       	adc	r27, r1
    1190:	63 9f       	mul	r22, r19
    1192:	aa 27       	eor	r26, r26
    1194:	f0 0d       	add	r31, r0
    1196:	b1 1d       	adc	r27, r1
    1198:	aa 1f       	adc	r26, r26
    119a:	64 9f       	mul	r22, r20
    119c:	66 27       	eor	r22, r22
    119e:	b0 0d       	add	r27, r0
    11a0:	a1 1d       	adc	r26, r1
    11a2:	66 1f       	adc	r22, r22
    11a4:	82 9f       	mul	r24, r18
    11a6:	22 27       	eor	r18, r18
    11a8:	b0 0d       	add	r27, r0
    11aa:	a1 1d       	adc	r26, r1
    11ac:	62 1f       	adc	r22, r18
    11ae:	73 9f       	mul	r23, r19
    11b0:	b0 0d       	add	r27, r0
    11b2:	a1 1d       	adc	r26, r1
    11b4:	62 1f       	adc	r22, r18
    11b6:	83 9f       	mul	r24, r19
    11b8:	a0 0d       	add	r26, r0
    11ba:	61 1d       	adc	r22, r1
    11bc:	22 1f       	adc	r18, r18
    11be:	74 9f       	mul	r23, r20
    11c0:	33 27       	eor	r19, r19
    11c2:	a0 0d       	add	r26, r0
    11c4:	61 1d       	adc	r22, r1
    11c6:	23 1f       	adc	r18, r19
    11c8:	84 9f       	mul	r24, r20
    11ca:	60 0d       	add	r22, r0
    11cc:	21 1d       	adc	r18, r1
    11ce:	82 2f       	mov	r24, r18
    11d0:	76 2f       	mov	r23, r22
    11d2:	6a 2f       	mov	r22, r26
    11d4:	11 24       	eor	r1, r1
    11d6:	9f 57       	subi	r25, 0x7F	; 127
    11d8:	50 40       	sbci	r21, 0x00	; 0
    11da:	8a f0       	brmi	.+34     	; 0x11fe <__mulsf3_pse+0x84>
    11dc:	e1 f0       	breq	.+56     	; 0x1216 <__mulsf3_pse+0x9c>
    11de:	88 23       	and	r24, r24
    11e0:	4a f0       	brmi	.+18     	; 0x11f4 <__mulsf3_pse+0x7a>
    11e2:	ee 0f       	add	r30, r30
    11e4:	ff 1f       	adc	r31, r31
    11e6:	bb 1f       	adc	r27, r27
    11e8:	66 1f       	adc	r22, r22
    11ea:	77 1f       	adc	r23, r23
    11ec:	88 1f       	adc	r24, r24
    11ee:	91 50       	subi	r25, 0x01	; 1
    11f0:	50 40       	sbci	r21, 0x00	; 0
    11f2:	a9 f7       	brne	.-22     	; 0x11de <__mulsf3_pse+0x64>
    11f4:	9e 3f       	cpi	r25, 0xFE	; 254
    11f6:	51 05       	cpc	r21, r1
    11f8:	70 f0       	brcs	.+28     	; 0x1216 <__mulsf3_pse+0x9c>
    11fa:	56 c0       	rjmp	.+172    	; 0x12a8 <__fp_inf>
    11fc:	aa cf       	rjmp	.-172    	; 0x1152 <__fp_szero>
    11fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1200:	ec f3       	brlt	.-6      	; 0x11fc <__mulsf3_pse+0x82>
    1202:	98 3e       	cpi	r25, 0xE8	; 232
    1204:	dc f3       	brlt	.-10     	; 0x11fc <__mulsf3_pse+0x82>
    1206:	86 95       	lsr	r24
    1208:	77 95       	ror	r23
    120a:	67 95       	ror	r22
    120c:	b7 95       	ror	r27
    120e:	f7 95       	ror	r31
    1210:	e7 95       	ror	r30
    1212:	9f 5f       	subi	r25, 0xFF	; 255
    1214:	c1 f7       	brne	.-16     	; 0x1206 <__mulsf3_pse+0x8c>
    1216:	fe 2b       	or	r31, r30
    1218:	88 0f       	add	r24, r24
    121a:	91 1d       	adc	r25, r1
    121c:	96 95       	lsr	r25
    121e:	87 95       	ror	r24
    1220:	97 f9       	bld	r25, 7
    1222:	08 95       	ret
    1224:	11 f4       	brne	.+4      	; 0x122a <__mulsf3_pse+0xb0>
    1226:	0e f4       	brtc	.+2      	; 0x122a <__mulsf3_pse+0xb0>
    1228:	53 c0       	rjmp	.+166    	; 0x12d0 <__fp_nan>
    122a:	44 c0       	rjmp	.+136    	; 0x12b4 <__fp_mpack>

0000122c <sqrt>:
    122c:	77 df       	rcall	.-274    	; 0x111c <__fp_splitA>
    122e:	d0 f3       	brcs	.-12     	; 0x1224 <__mulsf3_pse+0xaa>
    1230:	99 23       	and	r25, r25
    1232:	d9 f3       	breq	.-10     	; 0x122a <__mulsf3_pse+0xb0>
    1234:	ce f3       	brts	.-14     	; 0x1228 <__mulsf3_pse+0xae>
    1236:	9f 57       	subi	r25, 0x7F	; 127
    1238:	55 0b       	sbc	r21, r21
    123a:	87 ff       	sbrs	r24, 7
    123c:	4c d0       	rcall	.+152    	; 0x12d6 <__fp_norm2>
    123e:	00 24       	eor	r0, r0
    1240:	a0 e6       	ldi	r26, 0x60	; 96
    1242:	40 ea       	ldi	r20, 0xA0	; 160
    1244:	90 01       	movw	r18, r0
    1246:	80 58       	subi	r24, 0x80	; 128
    1248:	56 95       	lsr	r21
    124a:	97 95       	ror	r25
    124c:	28 f4       	brcc	.+10     	; 0x1258 <sqrt+0x2c>
    124e:	80 5c       	subi	r24, 0xC0	; 192
    1250:	66 0f       	add	r22, r22
    1252:	77 1f       	adc	r23, r23
    1254:	88 1f       	adc	r24, r24
    1256:	20 f0       	brcs	.+8      	; 0x1260 <sqrt+0x34>
    1258:	26 17       	cp	r18, r22
    125a:	37 07       	cpc	r19, r23
    125c:	48 07       	cpc	r20, r24
    125e:	30 f4       	brcc	.+12     	; 0x126c <sqrt+0x40>
    1260:	62 1b       	sub	r22, r18
    1262:	73 0b       	sbc	r23, r19
    1264:	84 0b       	sbc	r24, r20
    1266:	20 29       	or	r18, r0
    1268:	31 29       	or	r19, r1
    126a:	4a 2b       	or	r20, r26
    126c:	a6 95       	lsr	r26
    126e:	17 94       	ror	r1
    1270:	07 94       	ror	r0
    1272:	20 25       	eor	r18, r0
    1274:	31 25       	eor	r19, r1
    1276:	4a 27       	eor	r20, r26
    1278:	58 f7       	brcc	.-42     	; 0x1250 <sqrt+0x24>
    127a:	66 0f       	add	r22, r22
    127c:	77 1f       	adc	r23, r23
    127e:	88 1f       	adc	r24, r24
    1280:	20 f0       	brcs	.+8      	; 0x128a <sqrt+0x5e>
    1282:	26 17       	cp	r18, r22
    1284:	37 07       	cpc	r19, r23
    1286:	48 07       	cpc	r20, r24
    1288:	30 f4       	brcc	.+12     	; 0x1296 <sqrt+0x6a>
    128a:	62 0b       	sbc	r22, r18
    128c:	73 0b       	sbc	r23, r19
    128e:	84 0b       	sbc	r24, r20
    1290:	20 0d       	add	r18, r0
    1292:	31 1d       	adc	r19, r1
    1294:	41 1d       	adc	r20, r1
    1296:	a0 95       	com	r26
    1298:	81 f7       	brne	.-32     	; 0x127a <sqrt+0x4e>
    129a:	b9 01       	movw	r22, r18
    129c:	84 2f       	mov	r24, r20
    129e:	91 58       	subi	r25, 0x81	; 129
    12a0:	88 0f       	add	r24, r24
    12a2:	96 95       	lsr	r25
    12a4:	87 95       	ror	r24
    12a6:	08 95       	ret

000012a8 <__fp_inf>:
    12a8:	97 f9       	bld	r25, 7
    12aa:	9f 67       	ori	r25, 0x7F	; 127
    12ac:	80 e8       	ldi	r24, 0x80	; 128
    12ae:	70 e0       	ldi	r23, 0x00	; 0
    12b0:	60 e0       	ldi	r22, 0x00	; 0
    12b2:	08 95       	ret

000012b4 <__fp_mpack>:
    12b4:	9f 3f       	cpi	r25, 0xFF	; 255
    12b6:	31 f0       	breq	.+12     	; 0x12c4 <__fp_mpack_finite+0xc>

000012b8 <__fp_mpack_finite>:
    12b8:	91 50       	subi	r25, 0x01	; 1
    12ba:	20 f4       	brcc	.+8      	; 0x12c4 <__fp_mpack_finite+0xc>
    12bc:	87 95       	ror	r24
    12be:	77 95       	ror	r23
    12c0:	67 95       	ror	r22
    12c2:	b7 95       	ror	r27
    12c4:	88 0f       	add	r24, r24
    12c6:	91 1d       	adc	r25, r1
    12c8:	96 95       	lsr	r25
    12ca:	87 95       	ror	r24
    12cc:	97 f9       	bld	r25, 7
    12ce:	08 95       	ret

000012d0 <__fp_nan>:
    12d0:	9f ef       	ldi	r25, 0xFF	; 255
    12d2:	80 ec       	ldi	r24, 0xC0	; 192
    12d4:	08 95       	ret

000012d6 <__fp_norm2>:
    12d6:	91 50       	subi	r25, 0x01	; 1
    12d8:	50 40       	sbci	r21, 0x00	; 0
    12da:	66 0f       	add	r22, r22
    12dc:	77 1f       	adc	r23, r23
    12de:	88 1f       	adc	r24, r24
    12e0:	d2 f7       	brpl	.-12     	; 0x12d6 <__fp_norm2>
    12e2:	08 95       	ret

000012e4 <__fp_pscA>:
    12e4:	00 24       	eor	r0, r0
    12e6:	0a 94       	dec	r0
    12e8:	16 16       	cp	r1, r22
    12ea:	17 06       	cpc	r1, r23
    12ec:	18 06       	cpc	r1, r24
    12ee:	09 06       	cpc	r0, r25
    12f0:	08 95       	ret

000012f2 <__fp_pscB>:
    12f2:	00 24       	eor	r0, r0
    12f4:	0a 94       	dec	r0
    12f6:	12 16       	cp	r1, r18
    12f8:	13 06       	cpc	r1, r19
    12fa:	14 06       	cpc	r1, r20
    12fc:	05 06       	cpc	r0, r21
    12fe:	08 95       	ret

00001300 <__fp_round>:
    1300:	09 2e       	mov	r0, r25
    1302:	03 94       	inc	r0
    1304:	00 0c       	add	r0, r0
    1306:	11 f4       	brne	.+4      	; 0x130c <__fp_round+0xc>
    1308:	88 23       	and	r24, r24
    130a:	52 f0       	brmi	.+20     	; 0x1320 <__fp_round+0x20>
    130c:	bb 0f       	add	r27, r27
    130e:	40 f4       	brcc	.+16     	; 0x1320 <__fp_round+0x20>
    1310:	bf 2b       	or	r27, r31
    1312:	11 f4       	brne	.+4      	; 0x1318 <__fp_round+0x18>
    1314:	60 ff       	sbrs	r22, 0
    1316:	04 c0       	rjmp	.+8      	; 0x1320 <__fp_round+0x20>
    1318:	6f 5f       	subi	r22, 0xFF	; 255
    131a:	7f 4f       	sbci	r23, 0xFF	; 255
    131c:	8f 4f       	sbci	r24, 0xFF	; 255
    131e:	9f 4f       	sbci	r25, 0xFF	; 255
    1320:	08 95       	ret

00001322 <__mulsi3>:
    1322:	62 9f       	mul	r22, r18
    1324:	d0 01       	movw	r26, r0
    1326:	73 9f       	mul	r23, r19
    1328:	f0 01       	movw	r30, r0
    132a:	82 9f       	mul	r24, r18
    132c:	e0 0d       	add	r30, r0
    132e:	f1 1d       	adc	r31, r1
    1330:	64 9f       	mul	r22, r20
    1332:	e0 0d       	add	r30, r0
    1334:	f1 1d       	adc	r31, r1
    1336:	92 9f       	mul	r25, r18
    1338:	f0 0d       	add	r31, r0
    133a:	83 9f       	mul	r24, r19
    133c:	f0 0d       	add	r31, r0
    133e:	74 9f       	mul	r23, r20
    1340:	f0 0d       	add	r31, r0
    1342:	65 9f       	mul	r22, r21
    1344:	f0 0d       	add	r31, r0
    1346:	99 27       	eor	r25, r25
    1348:	72 9f       	mul	r23, r18
    134a:	b0 0d       	add	r27, r0
    134c:	e1 1d       	adc	r30, r1
    134e:	f9 1f       	adc	r31, r25
    1350:	63 9f       	mul	r22, r19
    1352:	b0 0d       	add	r27, r0
    1354:	e1 1d       	adc	r30, r1
    1356:	f9 1f       	adc	r31, r25
    1358:	bd 01       	movw	r22, r26
    135a:	cf 01       	movw	r24, r30
    135c:	11 24       	eor	r1, r1
    135e:	08 95       	ret

00001360 <__prologue_saves__>:
    1360:	2f 92       	push	r2
    1362:	3f 92       	push	r3
    1364:	4f 92       	push	r4
    1366:	5f 92       	push	r5
    1368:	6f 92       	push	r6
    136a:	7f 92       	push	r7
    136c:	8f 92       	push	r8
    136e:	9f 92       	push	r9
    1370:	af 92       	push	r10
    1372:	bf 92       	push	r11
    1374:	cf 92       	push	r12
    1376:	df 92       	push	r13
    1378:	ef 92       	push	r14
    137a:	ff 92       	push	r15
    137c:	0f 93       	push	r16
    137e:	1f 93       	push	r17
    1380:	cf 93       	push	r28
    1382:	df 93       	push	r29
    1384:	cd b7       	in	r28, 0x3d	; 61
    1386:	de b7       	in	r29, 0x3e	; 62
    1388:	ca 1b       	sub	r28, r26
    138a:	db 0b       	sbc	r29, r27
    138c:	0f b6       	in	r0, 0x3f	; 63
    138e:	f8 94       	cli
    1390:	de bf       	out	0x3e, r29	; 62
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	cd bf       	out	0x3d, r28	; 61
    1396:	09 94       	ijmp

00001398 <__epilogue_restores__>:
    1398:	2a 88       	ldd	r2, Y+18	; 0x12
    139a:	39 88       	ldd	r3, Y+17	; 0x11
    139c:	48 88       	ldd	r4, Y+16	; 0x10
    139e:	5f 84       	ldd	r5, Y+15	; 0x0f
    13a0:	6e 84       	ldd	r6, Y+14	; 0x0e
    13a2:	7d 84       	ldd	r7, Y+13	; 0x0d
    13a4:	8c 84       	ldd	r8, Y+12	; 0x0c
    13a6:	9b 84       	ldd	r9, Y+11	; 0x0b
    13a8:	aa 84       	ldd	r10, Y+10	; 0x0a
    13aa:	b9 84       	ldd	r11, Y+9	; 0x09
    13ac:	c8 84       	ldd	r12, Y+8	; 0x08
    13ae:	df 80       	ldd	r13, Y+7	; 0x07
    13b0:	ee 80       	ldd	r14, Y+6	; 0x06
    13b2:	fd 80       	ldd	r15, Y+5	; 0x05
    13b4:	0c 81       	ldd	r16, Y+4	; 0x04
    13b6:	1b 81       	ldd	r17, Y+3	; 0x03
    13b8:	aa 81       	ldd	r26, Y+2	; 0x02
    13ba:	b9 81       	ldd	r27, Y+1	; 0x01
    13bc:	ce 0f       	add	r28, r30
    13be:	d1 1d       	adc	r29, r1
    13c0:	0f b6       	in	r0, 0x3f	; 63
    13c2:	f8 94       	cli
    13c4:	de bf       	out	0x3e, r29	; 62
    13c6:	0f be       	out	0x3f, r0	; 63
    13c8:	cd bf       	out	0x3d, r28	; 61
    13ca:	ed 01       	movw	r28, r26
    13cc:	08 95       	ret

000013ce <__ftoa_engine>:
    13ce:	28 30       	cpi	r18, 0x08	; 8
    13d0:	08 f0       	brcs	.+2      	; 0x13d4 <__ftoa_engine+0x6>
    13d2:	27 e0       	ldi	r18, 0x07	; 7
    13d4:	33 27       	eor	r19, r19
    13d6:	da 01       	movw	r26, r20
    13d8:	99 0f       	add	r25, r25
    13da:	31 1d       	adc	r19, r1
    13dc:	87 fd       	sbrc	r24, 7
    13de:	91 60       	ori	r25, 0x01	; 1
    13e0:	00 96       	adiw	r24, 0x00	; 0
    13e2:	61 05       	cpc	r22, r1
    13e4:	71 05       	cpc	r23, r1
    13e6:	39 f4       	brne	.+14     	; 0x13f6 <__ftoa_engine+0x28>
    13e8:	32 60       	ori	r19, 0x02	; 2
    13ea:	2e 5f       	subi	r18, 0xFE	; 254
    13ec:	3d 93       	st	X+, r19
    13ee:	30 e3       	ldi	r19, 0x30	; 48
    13f0:	2a 95       	dec	r18
    13f2:	e1 f7       	brne	.-8      	; 0x13ec <__ftoa_engine+0x1e>
    13f4:	08 95       	ret
    13f6:	9f 3f       	cpi	r25, 0xFF	; 255
    13f8:	30 f0       	brcs	.+12     	; 0x1406 <__ftoa_engine+0x38>
    13fa:	80 38       	cpi	r24, 0x80	; 128
    13fc:	71 05       	cpc	r23, r1
    13fe:	61 05       	cpc	r22, r1
    1400:	09 f0       	breq	.+2      	; 0x1404 <__ftoa_engine+0x36>
    1402:	3c 5f       	subi	r19, 0xFC	; 252
    1404:	3c 5f       	subi	r19, 0xFC	; 252
    1406:	3d 93       	st	X+, r19
    1408:	91 30       	cpi	r25, 0x01	; 1
    140a:	08 f0       	brcs	.+2      	; 0x140e <__ftoa_engine+0x40>
    140c:	80 68       	ori	r24, 0x80	; 128
    140e:	91 1d       	adc	r25, r1
    1410:	df 93       	push	r29
    1412:	cf 93       	push	r28
    1414:	1f 93       	push	r17
    1416:	0f 93       	push	r16
    1418:	ff 92       	push	r15
    141a:	ef 92       	push	r14
    141c:	19 2f       	mov	r17, r25
    141e:	98 7f       	andi	r25, 0xF8	; 248
    1420:	96 95       	lsr	r25
    1422:	e9 2f       	mov	r30, r25
    1424:	96 95       	lsr	r25
    1426:	96 95       	lsr	r25
    1428:	e9 0f       	add	r30, r25
    142a:	ff 27       	eor	r31, r31
    142c:	e6 53       	subi	r30, 0x36	; 54
    142e:	ff 4f       	sbci	r31, 0xFF	; 255
    1430:	99 27       	eor	r25, r25
    1432:	33 27       	eor	r19, r19
    1434:	ee 24       	eor	r14, r14
    1436:	ff 24       	eor	r15, r15
    1438:	a7 01       	movw	r20, r14
    143a:	e7 01       	movw	r28, r14
    143c:	05 90       	lpm	r0, Z+
    143e:	08 94       	sec
    1440:	07 94       	ror	r0
    1442:	28 f4       	brcc	.+10     	; 0x144e <__ftoa_engine+0x80>
    1444:	36 0f       	add	r19, r22
    1446:	e7 1e       	adc	r14, r23
    1448:	f8 1e       	adc	r15, r24
    144a:	49 1f       	adc	r20, r25
    144c:	51 1d       	adc	r21, r1
    144e:	66 0f       	add	r22, r22
    1450:	77 1f       	adc	r23, r23
    1452:	88 1f       	adc	r24, r24
    1454:	99 1f       	adc	r25, r25
    1456:	06 94       	lsr	r0
    1458:	a1 f7       	brne	.-24     	; 0x1442 <__ftoa_engine+0x74>
    145a:	05 90       	lpm	r0, Z+
    145c:	07 94       	ror	r0
    145e:	28 f4       	brcc	.+10     	; 0x146a <__ftoa_engine+0x9c>
    1460:	e7 0e       	add	r14, r23
    1462:	f8 1e       	adc	r15, r24
    1464:	49 1f       	adc	r20, r25
    1466:	56 1f       	adc	r21, r22
    1468:	c1 1d       	adc	r28, r1
    146a:	77 0f       	add	r23, r23
    146c:	88 1f       	adc	r24, r24
    146e:	99 1f       	adc	r25, r25
    1470:	66 1f       	adc	r22, r22
    1472:	06 94       	lsr	r0
    1474:	a1 f7       	brne	.-24     	; 0x145e <__ftoa_engine+0x90>
    1476:	05 90       	lpm	r0, Z+
    1478:	07 94       	ror	r0
    147a:	28 f4       	brcc	.+10     	; 0x1486 <__ftoa_engine+0xb8>
    147c:	f8 0e       	add	r15, r24
    147e:	49 1f       	adc	r20, r25
    1480:	56 1f       	adc	r21, r22
    1482:	c7 1f       	adc	r28, r23
    1484:	d1 1d       	adc	r29, r1
    1486:	88 0f       	add	r24, r24
    1488:	99 1f       	adc	r25, r25
    148a:	66 1f       	adc	r22, r22
    148c:	77 1f       	adc	r23, r23
    148e:	06 94       	lsr	r0
    1490:	a1 f7       	brne	.-24     	; 0x147a <__ftoa_engine+0xac>
    1492:	05 90       	lpm	r0, Z+
    1494:	07 94       	ror	r0
    1496:	20 f4       	brcc	.+8      	; 0x14a0 <__ftoa_engine+0xd2>
    1498:	49 0f       	add	r20, r25
    149a:	56 1f       	adc	r21, r22
    149c:	c7 1f       	adc	r28, r23
    149e:	d8 1f       	adc	r29, r24
    14a0:	99 0f       	add	r25, r25
    14a2:	66 1f       	adc	r22, r22
    14a4:	77 1f       	adc	r23, r23
    14a6:	88 1f       	adc	r24, r24
    14a8:	06 94       	lsr	r0
    14aa:	a9 f7       	brne	.-22     	; 0x1496 <__ftoa_engine+0xc8>
    14ac:	84 91       	lpm	r24, Z+
    14ae:	10 95       	com	r17
    14b0:	17 70       	andi	r17, 0x07	; 7
    14b2:	41 f0       	breq	.+16     	; 0x14c4 <__ftoa_engine+0xf6>
    14b4:	d6 95       	lsr	r29
    14b6:	c7 95       	ror	r28
    14b8:	57 95       	ror	r21
    14ba:	47 95       	ror	r20
    14bc:	f7 94       	ror	r15
    14be:	e7 94       	ror	r14
    14c0:	1a 95       	dec	r17
    14c2:	c1 f7       	brne	.-16     	; 0x14b4 <__ftoa_engine+0xe6>
    14c4:	e0 e7       	ldi	r30, 0x70	; 112
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	68 94       	set
    14ca:	15 90       	lpm	r1, Z+
    14cc:	15 91       	lpm	r17, Z+
    14ce:	35 91       	lpm	r19, Z+
    14d0:	65 91       	lpm	r22, Z+
    14d2:	95 91       	lpm	r25, Z+
    14d4:	05 90       	lpm	r0, Z+
    14d6:	7f e2       	ldi	r23, 0x2F	; 47
    14d8:	73 95       	inc	r23
    14da:	e1 18       	sub	r14, r1
    14dc:	f1 0a       	sbc	r15, r17
    14de:	43 0b       	sbc	r20, r19
    14e0:	56 0b       	sbc	r21, r22
    14e2:	c9 0b       	sbc	r28, r25
    14e4:	d0 09       	sbc	r29, r0
    14e6:	c0 f7       	brcc	.-16     	; 0x14d8 <__ftoa_engine+0x10a>
    14e8:	e1 0c       	add	r14, r1
    14ea:	f1 1e       	adc	r15, r17
    14ec:	43 1f       	adc	r20, r19
    14ee:	56 1f       	adc	r21, r22
    14f0:	c9 1f       	adc	r28, r25
    14f2:	d0 1d       	adc	r29, r0
    14f4:	7e f4       	brtc	.+30     	; 0x1514 <__ftoa_engine+0x146>
    14f6:	70 33       	cpi	r23, 0x30	; 48
    14f8:	11 f4       	brne	.+4      	; 0x14fe <__ftoa_engine+0x130>
    14fa:	8a 95       	dec	r24
    14fc:	e6 cf       	rjmp	.-52     	; 0x14ca <__ftoa_engine+0xfc>
    14fe:	e8 94       	clt
    1500:	01 50       	subi	r16, 0x01	; 1
    1502:	30 f0       	brcs	.+12     	; 0x1510 <__ftoa_engine+0x142>
    1504:	08 0f       	add	r16, r24
    1506:	0a f4       	brpl	.+2      	; 0x150a <__ftoa_engine+0x13c>
    1508:	00 27       	eor	r16, r16
    150a:	02 17       	cp	r16, r18
    150c:	08 f4       	brcc	.+2      	; 0x1510 <__ftoa_engine+0x142>
    150e:	20 2f       	mov	r18, r16
    1510:	23 95       	inc	r18
    1512:	02 2f       	mov	r16, r18
    1514:	7a 33       	cpi	r23, 0x3A	; 58
    1516:	28 f0       	brcs	.+10     	; 0x1522 <__ftoa_engine+0x154>
    1518:	79 e3       	ldi	r23, 0x39	; 57
    151a:	7d 93       	st	X+, r23
    151c:	2a 95       	dec	r18
    151e:	e9 f7       	brne	.-6      	; 0x151a <__ftoa_engine+0x14c>
    1520:	10 c0       	rjmp	.+32     	; 0x1542 <__ftoa_engine+0x174>
    1522:	7d 93       	st	X+, r23
    1524:	2a 95       	dec	r18
    1526:	89 f6       	brne	.-94     	; 0x14ca <__ftoa_engine+0xfc>
    1528:	06 94       	lsr	r0
    152a:	97 95       	ror	r25
    152c:	67 95       	ror	r22
    152e:	37 95       	ror	r19
    1530:	17 95       	ror	r17
    1532:	17 94       	ror	r1
    1534:	e1 18       	sub	r14, r1
    1536:	f1 0a       	sbc	r15, r17
    1538:	43 0b       	sbc	r20, r19
    153a:	56 0b       	sbc	r21, r22
    153c:	c9 0b       	sbc	r28, r25
    153e:	d0 09       	sbc	r29, r0
    1540:	98 f0       	brcs	.+38     	; 0x1568 <__ftoa_engine+0x19a>
    1542:	23 95       	inc	r18
    1544:	7e 91       	ld	r23, -X
    1546:	73 95       	inc	r23
    1548:	7a 33       	cpi	r23, 0x3A	; 58
    154a:	08 f0       	brcs	.+2      	; 0x154e <__ftoa_engine+0x180>
    154c:	70 e3       	ldi	r23, 0x30	; 48
    154e:	7c 93       	st	X, r23
    1550:	20 13       	cpse	r18, r16
    1552:	b8 f7       	brcc	.-18     	; 0x1542 <__ftoa_engine+0x174>
    1554:	7e 91       	ld	r23, -X
    1556:	70 61       	ori	r23, 0x10	; 16
    1558:	7d 93       	st	X+, r23
    155a:	30 f0       	brcs	.+12     	; 0x1568 <__ftoa_engine+0x19a>
    155c:	83 95       	inc	r24
    155e:	71 e3       	ldi	r23, 0x31	; 49
    1560:	7d 93       	st	X+, r23
    1562:	70 e3       	ldi	r23, 0x30	; 48
    1564:	2a 95       	dec	r18
    1566:	e1 f7       	brne	.-8      	; 0x1560 <__ftoa_engine+0x192>
    1568:	11 24       	eor	r1, r1
    156a:	ef 90       	pop	r14
    156c:	ff 90       	pop	r15
    156e:	0f 91       	pop	r16
    1570:	1f 91       	pop	r17
    1572:	cf 91       	pop	r28
    1574:	df 91       	pop	r29
    1576:	99 27       	eor	r25, r25
    1578:	87 fd       	sbrc	r24, 7
    157a:	90 95       	com	r25
    157c:	08 95       	ret

0000157e <strnlen_P>:
    157e:	fc 01       	movw	r30, r24
    1580:	05 90       	lpm	r0, Z+
    1582:	61 50       	subi	r22, 0x01	; 1
    1584:	70 40       	sbci	r23, 0x00	; 0
    1586:	01 10       	cpse	r0, r1
    1588:	d8 f7       	brcc	.-10     	; 0x1580 <strnlen_P+0x2>
    158a:	80 95       	com	r24
    158c:	90 95       	com	r25
    158e:	8e 0f       	add	r24, r30
    1590:	9f 1f       	adc	r25, r31
    1592:	08 95       	ret

00001594 <strnlen>:
    1594:	fc 01       	movw	r30, r24
    1596:	61 50       	subi	r22, 0x01	; 1
    1598:	70 40       	sbci	r23, 0x00	; 0
    159a:	01 90       	ld	r0, Z+
    159c:	01 10       	cpse	r0, r1
    159e:	d8 f7       	brcc	.-10     	; 0x1596 <strnlen+0x2>
    15a0:	80 95       	com	r24
    15a2:	90 95       	com	r25
    15a4:	8e 0f       	add	r24, r30
    15a6:	9f 1f       	adc	r25, r31
    15a8:	08 95       	ret

000015aa <fputc>:
    15aa:	0f 93       	push	r16
    15ac:	1f 93       	push	r17
    15ae:	cf 93       	push	r28
    15b0:	df 93       	push	r29
    15b2:	8c 01       	movw	r16, r24
    15b4:	eb 01       	movw	r28, r22
    15b6:	8b 81       	ldd	r24, Y+3	; 0x03
    15b8:	81 ff       	sbrs	r24, 1
    15ba:	1b c0       	rjmp	.+54     	; 0x15f2 <fputc+0x48>
    15bc:	82 ff       	sbrs	r24, 2
    15be:	0d c0       	rjmp	.+26     	; 0x15da <fputc+0x30>
    15c0:	2e 81       	ldd	r18, Y+6	; 0x06
    15c2:	3f 81       	ldd	r19, Y+7	; 0x07
    15c4:	8c 81       	ldd	r24, Y+4	; 0x04
    15c6:	9d 81       	ldd	r25, Y+5	; 0x05
    15c8:	28 17       	cp	r18, r24
    15ca:	39 07       	cpc	r19, r25
    15cc:	64 f4       	brge	.+24     	; 0x15e6 <fputc+0x3c>
    15ce:	e8 81       	ld	r30, Y
    15d0:	f9 81       	ldd	r31, Y+1	; 0x01
    15d2:	01 93       	st	Z+, r16
    15d4:	f9 83       	std	Y+1, r31	; 0x01
    15d6:	e8 83       	st	Y, r30
    15d8:	06 c0       	rjmp	.+12     	; 0x15e6 <fputc+0x3c>
    15da:	e8 85       	ldd	r30, Y+8	; 0x08
    15dc:	f9 85       	ldd	r31, Y+9	; 0x09
    15de:	80 2f       	mov	r24, r16
    15e0:	09 95       	icall
    15e2:	89 2b       	or	r24, r25
    15e4:	31 f4       	brne	.+12     	; 0x15f2 <fputc+0x48>
    15e6:	8e 81       	ldd	r24, Y+6	; 0x06
    15e8:	9f 81       	ldd	r25, Y+7	; 0x07
    15ea:	01 96       	adiw	r24, 0x01	; 1
    15ec:	9f 83       	std	Y+7, r25	; 0x07
    15ee:	8e 83       	std	Y+6, r24	; 0x06
    15f0:	02 c0       	rjmp	.+4      	; 0x15f6 <fputc+0x4c>
    15f2:	0f ef       	ldi	r16, 0xFF	; 255
    15f4:	1f ef       	ldi	r17, 0xFF	; 255
    15f6:	c8 01       	movw	r24, r16
    15f8:	df 91       	pop	r29
    15fa:	cf 91       	pop	r28
    15fc:	1f 91       	pop	r17
    15fe:	0f 91       	pop	r16
    1600:	08 95       	ret

00001602 <sprintf>:
    1602:	ae e0       	ldi	r26, 0x0E	; 14
    1604:	b0 e0       	ldi	r27, 0x00	; 0
    1606:	e7 e0       	ldi	r30, 0x07	; 7
    1608:	fb e0       	ldi	r31, 0x0B	; 11
    160a:	0c 94 be 09 	jmp	0x137c	; 0x137c <__prologue_saves__+0x1c>
    160e:	0d 89       	ldd	r16, Y+21	; 0x15
    1610:	1e 89       	ldd	r17, Y+22	; 0x16
    1612:	86 e0       	ldi	r24, 0x06	; 6
    1614:	8c 83       	std	Y+4, r24	; 0x04
    1616:	1a 83       	std	Y+2, r17	; 0x02
    1618:	09 83       	std	Y+1, r16	; 0x01
    161a:	8f ef       	ldi	r24, 0xFF	; 255
    161c:	9f e7       	ldi	r25, 0x7F	; 127
    161e:	9e 83       	std	Y+6, r25	; 0x06
    1620:	8d 83       	std	Y+5, r24	; 0x05
    1622:	9e 01       	movw	r18, r28
    1624:	27 5e       	subi	r18, 0xE7	; 231
    1626:	3f 4f       	sbci	r19, 0xFF	; 255
    1628:	ce 01       	movw	r24, r28
    162a:	01 96       	adiw	r24, 0x01	; 1
    162c:	6f 89       	ldd	r22, Y+23	; 0x17
    162e:	78 8d       	ldd	r23, Y+24	; 0x18
    1630:	a9 01       	movw	r20, r18
    1632:	0e 94 6e 04 	call	0x8dc	; 0x8dc <vfprintf>
    1636:	2f 81       	ldd	r18, Y+7	; 0x07
    1638:	38 85       	ldd	r19, Y+8	; 0x08
    163a:	02 0f       	add	r16, r18
    163c:	13 1f       	adc	r17, r19
    163e:	f8 01       	movw	r30, r16
    1640:	10 82       	st	Z, r1
    1642:	2e 96       	adiw	r28, 0x0e	; 14
    1644:	e4 e0       	ldi	r30, 0x04	; 4
    1646:	0c 94 da 09 	jmp	0x13b4	; 0x13b4 <__epilogue_restores__+0x1c>

0000164a <__ultoa_invert>:
    164a:	fa 01       	movw	r30, r20
    164c:	aa 27       	eor	r26, r26
    164e:	28 30       	cpi	r18, 0x08	; 8
    1650:	51 f1       	breq	.+84     	; 0x16a6 <__ultoa_invert+0x5c>
    1652:	20 31       	cpi	r18, 0x10	; 16
    1654:	81 f1       	breq	.+96     	; 0x16b6 <__ultoa_invert+0x6c>
    1656:	e8 94       	clt
    1658:	6f 93       	push	r22
    165a:	6e 7f       	andi	r22, 0xFE	; 254
    165c:	6e 5f       	subi	r22, 0xFE	; 254
    165e:	7f 4f       	sbci	r23, 0xFF	; 255
    1660:	8f 4f       	sbci	r24, 0xFF	; 255
    1662:	9f 4f       	sbci	r25, 0xFF	; 255
    1664:	af 4f       	sbci	r26, 0xFF	; 255
    1666:	b1 e0       	ldi	r27, 0x01	; 1
    1668:	3e d0       	rcall	.+124    	; 0x16e6 <__ultoa_invert+0x9c>
    166a:	b4 e0       	ldi	r27, 0x04	; 4
    166c:	3c d0       	rcall	.+120    	; 0x16e6 <__ultoa_invert+0x9c>
    166e:	67 0f       	add	r22, r23
    1670:	78 1f       	adc	r23, r24
    1672:	89 1f       	adc	r24, r25
    1674:	9a 1f       	adc	r25, r26
    1676:	a1 1d       	adc	r26, r1
    1678:	68 0f       	add	r22, r24
    167a:	79 1f       	adc	r23, r25
    167c:	8a 1f       	adc	r24, r26
    167e:	91 1d       	adc	r25, r1
    1680:	a1 1d       	adc	r26, r1
    1682:	6a 0f       	add	r22, r26
    1684:	71 1d       	adc	r23, r1
    1686:	81 1d       	adc	r24, r1
    1688:	91 1d       	adc	r25, r1
    168a:	a1 1d       	adc	r26, r1
    168c:	20 d0       	rcall	.+64     	; 0x16ce <__ultoa_invert+0x84>
    168e:	09 f4       	brne	.+2      	; 0x1692 <__ultoa_invert+0x48>
    1690:	68 94       	set
    1692:	3f 91       	pop	r19
    1694:	2a e0       	ldi	r18, 0x0A	; 10
    1696:	26 9f       	mul	r18, r22
    1698:	11 24       	eor	r1, r1
    169a:	30 19       	sub	r19, r0
    169c:	30 5d       	subi	r19, 0xD0	; 208
    169e:	31 93       	st	Z+, r19
    16a0:	de f6       	brtc	.-74     	; 0x1658 <__ultoa_invert+0xe>
    16a2:	cf 01       	movw	r24, r30
    16a4:	08 95       	ret
    16a6:	46 2f       	mov	r20, r22
    16a8:	47 70       	andi	r20, 0x07	; 7
    16aa:	40 5d       	subi	r20, 0xD0	; 208
    16ac:	41 93       	st	Z+, r20
    16ae:	b3 e0       	ldi	r27, 0x03	; 3
    16b0:	0f d0       	rcall	.+30     	; 0x16d0 <__ultoa_invert+0x86>
    16b2:	c9 f7       	brne	.-14     	; 0x16a6 <__ultoa_invert+0x5c>
    16b4:	f6 cf       	rjmp	.-20     	; 0x16a2 <__ultoa_invert+0x58>
    16b6:	46 2f       	mov	r20, r22
    16b8:	4f 70       	andi	r20, 0x0F	; 15
    16ba:	40 5d       	subi	r20, 0xD0	; 208
    16bc:	4a 33       	cpi	r20, 0x3A	; 58
    16be:	18 f0       	brcs	.+6      	; 0x16c6 <__ultoa_invert+0x7c>
    16c0:	49 5d       	subi	r20, 0xD9	; 217
    16c2:	31 fd       	sbrc	r19, 1
    16c4:	40 52       	subi	r20, 0x20	; 32
    16c6:	41 93       	st	Z+, r20
    16c8:	02 d0       	rcall	.+4      	; 0x16ce <__ultoa_invert+0x84>
    16ca:	a9 f7       	brne	.-22     	; 0x16b6 <__ultoa_invert+0x6c>
    16cc:	ea cf       	rjmp	.-44     	; 0x16a2 <__ultoa_invert+0x58>
    16ce:	b4 e0       	ldi	r27, 0x04	; 4
    16d0:	a6 95       	lsr	r26
    16d2:	97 95       	ror	r25
    16d4:	87 95       	ror	r24
    16d6:	77 95       	ror	r23
    16d8:	67 95       	ror	r22
    16da:	ba 95       	dec	r27
    16dc:	c9 f7       	brne	.-14     	; 0x16d0 <__ultoa_invert+0x86>
    16de:	00 97       	sbiw	r24, 0x00	; 0
    16e0:	61 05       	cpc	r22, r1
    16e2:	71 05       	cpc	r23, r1
    16e4:	08 95       	ret
    16e6:	9b 01       	movw	r18, r22
    16e8:	ac 01       	movw	r20, r24
    16ea:	0a 2e       	mov	r0, r26
    16ec:	06 94       	lsr	r0
    16ee:	57 95       	ror	r21
    16f0:	47 95       	ror	r20
    16f2:	37 95       	ror	r19
    16f4:	27 95       	ror	r18
    16f6:	ba 95       	dec	r27
    16f8:	c9 f7       	brne	.-14     	; 0x16ec <__ultoa_invert+0xa2>
    16fa:	62 0f       	add	r22, r18
    16fc:	73 1f       	adc	r23, r19
    16fe:	84 1f       	adc	r24, r20
    1700:	95 1f       	adc	r25, r21
    1702:	a0 1d       	adc	r26, r0
    1704:	08 95       	ret

00001706 <_exit>:
    1706:	f8 94       	cli

00001708 <__stop_program>:
    1708:	ff cf       	rjmp	.-2      	; 0x1708 <__stop_program>
