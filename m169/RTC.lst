   1               		.file	"RTC.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	setCurrentTime
  12               	setCurrentTime:
  13               	.LFB0:
  14               		.file 1 "RTC.c"
   1:RTC.c         **** #include "RTC.h" 
   2:RTC.c         **** 
   3:RTC.c         **** void setCurrentTime(uint8_t hour,uint8_t min,uint8_t monthDay,uint8_t month){
  15               		.loc 1 3 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
   4:RTC.c         ****     currentTime.hour=hour;
  22               		.loc 1 4 0
  23 0000 E0E0      		ldi r30,lo8(currentTime)
  24 0002 F0E0      		ldi r31,hi8(currentTime)
  25 0004 8083      		st Z,r24
   5:RTC.c         ****     currentTime.min=min;
  26               		.loc 1 5 0
  27 0006 6183      		std Z+1,r22
   6:RTC.c         ****     currentTime.monthDay=monthDay;
  28               		.loc 1 6 0
  29 0008 4283      		std Z+2,r20
   7:RTC.c         ****     currentTime.month=month;
  30               		.loc 1 7 0
  31 000a 2383      		std Z+3,r18
  32 000c 0895      		ret
  33               		.cfi_endproc
  34               	.LFE0:
  36               	.global	minquad
  38               	minquad:
  39               	.LFB1:
   8:RTC.c         **** }
   9:RTC.c         **** 
  10:RTC.c         **** uint8_t minquad(uint8_t min){
  40               		.loc 1 10 0
  41               		.cfi_startproc
  42               	.LVL1:
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  11:RTC.c         **** 	if(min >= 5){
  47               		.loc 1 11 0
  48 000e 8530      		cpi r24,lo8(5)
  49 0010 00F0      		brlo .L9
  12:RTC.c         **** 		if(min >= 15){
  50               		.loc 1 12 0
  51 0012 8F30      		cpi r24,lo8(15)
  52 0014 00F0      		brlo .L5
  13:RTC.c         **** 			if(min >= 25){
  53               		.loc 1 13 0
  54 0016 8931      		cpi r24,lo8(25)
  55 0018 00F0      		brlo .L6
  14:RTC.c         **** 				if(min >= 35){
  56               		.loc 1 14 0
  57 001a 8332      		cpi r24,lo8(35)
  58 001c 00F0      		brlo .L7
  15:RTC.c         **** 					if(min >= 45){
  59               		.loc 1 15 0
  60 001e 8D32      		cpi r24,lo8(45)
  61 0020 00F0      		brlo .L8
  16:RTC.c         **** 						if(min >= 55){
  62               		.loc 1 16 0
  63 0022 8733      		cpi r24,lo8(55)
  64 0024 00F4      		brsh .L9
  17:RTC.c         **** 							return 0;
  18:RTC.c         **** 						}else{return 50;}
  65               		.loc 1 18 0
  66 0026 82E3      		ldi r24,lo8(50)
  67               	.LVL2:
  68 0028 0895      		ret
  69               	.LVL3:
  70               	.L5:
  19:RTC.c         **** 					}else{return 40;}
  20:RTC.c         **** 				}else{return 30;}
  21:RTC.c         **** 			}else{return 20;}
  22:RTC.c         **** 		}else{return 10;}
  71               		.loc 1 22 0
  72 002a 8AE0      		ldi r24,lo8(10)
  73               	.LVL4:
  74 002c 0895      		ret
  75               	.LVL5:
  76               	.L6:
  21:RTC.c         **** 		}else{return 10;}
  77               		.loc 1 21 0
  78 002e 84E1      		ldi r24,lo8(20)
  79               	.LVL6:
  80 0030 0895      		ret
  81               	.LVL7:
  82               	.L7:
  20:RTC.c         **** 			}else{return 20;}
  83               		.loc 1 20 0
  84 0032 8EE1      		ldi r24,lo8(30)
  85               	.LVL8:
  86 0034 0895      		ret
  87               	.LVL9:
  88               	.L8:
  19:RTC.c         **** 					}else{return 40;}
  89               		.loc 1 19 0
  90 0036 88E2      		ldi r24,lo8(40)
  91               	.LVL10:
  92 0038 0895      		ret
  93               	.LVL11:
  94               	.L9:
  23:RTC.c         **** 	}else{return 0;}
  95               		.loc 1 23 0
  96 003a 80E0      		ldi r24,0
  97               	.LVL12:
  24:RTC.c         **** }
  98               		.loc 1 24 0
  99 003c 0895      		ret
 100               		.cfi_endproc
 101               	.LFE1:
 103               	.global	bcdToDec
 105               	bcdToDec:
 106               	.LFB2:
  25:RTC.c         **** 
  26:RTC.c         **** uint8_t bcdToDec(uint8_t val){
 107               		.loc 1 26 0
 108               		.cfi_startproc
 109               	.LVL13:
 110               	/* prologue: function */
 111               	/* frame size = 0 */
 112               	/* stack size = 0 */
 113               	.L__stack_usage = 0
  27:RTC.c         ****   return ((val/16*10) + (val%16));
 114               		.loc 1 27 0
 115 003e 982F      		mov r25,r24
 116 0040 9295      		swap r25
 117 0042 9F70      		andi r25,lo8(15)
 118 0044 8F70      		andi r24,lo8(15)
 119               	.LVL14:
  28:RTC.c         **** }
 120               		.loc 1 28 0
 121 0046 2AE0      		ldi r18,lo8(10)
 122 0048 929F      		mul r25,r18
 123 004a 800D      		add r24,r0
 124 004c 1124      		clr __zero_reg__
 125 004e 0895      		ret
 126               		.cfi_endproc
 127               	.LFE2:
 129               		.comm	currentTime,4,1
 130               	.Letext0:
 131               		.file 2 "RTC.h"
 132               		.file 3 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 RTC.c
     /tmp/ccYQm6NK.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccYQm6NK.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccYQm6NK.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccYQm6NK.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccYQm6NK.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccYQm6NK.s:12     .text:0000000000000000 setCurrentTime
                            *COM*:0000000000000004 currentTime
     /tmp/ccYQm6NK.s:38     .text:000000000000000e minquad
     /tmp/ccYQm6NK.s:105    .text:000000000000003e bcdToDec

UNDEFINED SYMBOLS
__do_clear_bss
