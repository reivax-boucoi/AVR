   1               		.file	"main.c"
   2               	__SP_L__ = 0x3d
   3               	__SREG__ = 0x3f
   4               	__tmp_reg__ = 0
   5               	__zero_reg__ = 1
   6               		.text
   7               	.Ltext0:
   8               		.cfi_sections	.debug_frame
   9               		.section	.text.startup,"ax",@progbits
  10               	.global	main
  12               	main:
  13               	.LFB6:
  14               		.file 1 "main.c"
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** #include<avr/interrupt.h>
   4:main.c        **** 
   5:main.c        **** #define LED_HIGH (PORTB |= 1<<PINB0)
   6:main.c        **** #define LED_LOW (PORTB &=~(1<<PINB0))
   7:main.c        **** #define LED_TOGGLE (PORTB ^=(1<<PINB0))
   8:main.c        **** #define RELAY_ON (PORTD &=~(1<<PIND5))//(PORTD |= 1<<PIND5)
   9:main.c        **** #define RELAY_OFF (PORTD &=~(1<<PIND5))
  10:main.c        **** 
  11:main.c        **** 
  12:main.c        **** const unsigned int multiplier=3600;
  13:main.c        **** volatile unsigned int cnt=0;
  14:main.c        **** volatile unsigned long setTime;
  15:main.c        **** volatile long remainingTime;
  16:main.c        **** volatile uint8_t showRemaining=0;
  17:main.c        **** volatile unsigned int nextShowTime;
  18:main.c        **** volatile long showValueLeft;
  19:main.c        **** 
  20:main.c        **** int main(void){
  15               		.loc 1 20 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21:main.c        ****     DDRB |= (1 << PINB0)|(1 << PIND5) ; //LED && relay init
  21               		.loc 1 21 0
  22 0000 87B3      		in r24,0x17
  23 0002 8162      		ori r24,lo8(33)
  24 0004 87BB      		out 0x17,r24
  22:main.c        ****     LED_LOW;
  25               		.loc 1 22 0
  26 0006 C098      		cbi 0x18,0
  23:main.c        ****     RELAY_OFF;
  27               		.loc 1 23 0
  28 0008 9598      		cbi 0x12,5
  29               	.LVL0:
  24:main.c        ****     unsigned long i=0;
  25:main.c        ****     while(++i<250000){
  30               		.loc 1 25 0
  31 000a 80E9      		ldi r24,lo8(-112)
  32 000c 90ED      		ldi r25,lo8(-48)
  33 000e A3E0      		ldi r26,lo8(3)
  34 0010 B0E0      		ldi r27,0
  35               	.LVL1:
  36               	.L2:
  37 0012 0197      		sbiw r24,1
  38 0014 A109      		sbc r26,__zero_reg__
  39 0016 B109      		sbc r27,__zero_reg__
  40               	.LVL2:
  41 0018 01F0      		breq .L8
  42               	.LVL3:
  26:main.c        ****     LED_LOW;
  43               		.loc 1 26 0
  44 001a C098      		cbi 0x18,0
  45 001c 00C0      		rjmp .L2
  46               	.LVL4:
  47               	.L8:
  27:main.c        ****     }
  28:main.c        ****     LED_HIGH;
  48               		.loc 1 28 0
  49 001e C09A      		sbi 0x18,0
  29:main.c        ****     DDRD &=~(1<<PIND6);//Button
  50               		.loc 1 29 0
  51 0020 8E98      		cbi 0x11,6
  30:main.c        ****     PORTD |=(1<<PIND6);
  52               		.loc 1 30 0
  53 0022 969A      		sbi 0x12,6
  31:main.c        ****     
  32:main.c        ****     DDRB &=~(0x3C); //sw init
  54               		.loc 1 32 0
  55 0024 87B3      		in r24,0x17
  56               	.LVL5:
  57 0026 837C      		andi r24,lo8(-61)
  58 0028 87BB      		out 0x17,r24
  33:main.c        ****     PORTB |=(0x3C);
  59               		.loc 1 33 0
  60 002a 88B3      		in r24,0x18
  61 002c 8C63      		ori r24,lo8(60)
  62 002e 88BB      		out 0x18,r24
  34:main.c        ****     
  35:main.c        ****     TIMSK |=(1<<TOIE1)|(1<<OCIE1A);//timer init
  63               		.loc 1 35 0
  64 0030 89B7      		in r24,0x39
  65 0032 806C      		ori r24,lo8(-64)
  66 0034 89BF      		out 0x39,r24
  36:main.c        **** 	TCCR1A = 0x00;
  67               		.loc 1 36 0
  68 0036 1FBC      		out 0x2f,__zero_reg__
  37:main.c        ****     TCNT1 = 0x0000; 
  69               		.loc 1 37 0
  70 0038 1DBC      		out 0x2c+1,__zero_reg__
  71 003a 1CBC      		out 0x2c,__zero_reg__
  38:main.c        ****     OCR1A = 625-1; //4MHz/8=500kHz -> /625=100Hz
  72               		.loc 1 38 0
  73 003c 80E7      		ldi r24,lo8(112)
  74 003e 92E0      		ldi r25,lo8(2)
  75 0040 9BBD      		out 0x2a+1,r25
  76 0042 8ABD      		out 0x2a,r24
  39:main.c        ****     
  40:main.c        ****     sei();//enable global interrupts
  77               		.loc 1 40 0
  78               	/* #APP */
  79               	 ;  40 "main.c" 1
  80 0044 7894      		sei
  81               	 ;  0 "" 2
  41:main.c        ****     
  42:main.c        ****     while(1){
  43:main.c        ****         if(!(PIND&(1<<PIND6))){
  44:main.c        ****             setTime=(15-((PINB & 0x3C)>>2))*multiplier;
  82               		.loc 1 44 0
  83               	/* #NOAPP */
  84 0046 2FE0      		ldi r18,lo8(15)
  85 0048 30E0      		ldi r19,0
  86               	.L4:
  43:main.c        ****             setTime=(15-((PINB & 0x3C)>>2))*multiplier;
  87               		.loc 1 43 0
  88 004a 8699      		sbic 0x10,6
  89 004c 00C0      		rjmp .L4
  90               		.loc 1 44 0
  91 004e 86B3      		in r24,0x16
  92 0050 8C73      		andi r24,lo8(60)
  93 0052 90E0      		ldi r25,0
  94 0054 9595      		asr r25
  95 0056 8795      		ror r24
  96 0058 9595      		asr r25
  97 005a 8795      		ror r24
  98 005c A901      		movw r20,r18
  99 005e 481B      		sub r20,r24
 100 0060 590B      		sbc r21,r25
 101 0062 CA01      		movw r24,r20
 102 0064 60E1      		ldi r22,lo8(16)
 103 0066 7EE0      		ldi r23,lo8(14)
 104 0068 00D0      		rcall __mulhi3
 105 006a A0E0      		ldi r26,0
 106 006c B0E0      		ldi r27,0
 107 006e 8093 0000 		sts setTime,r24
 108 0072 9093 0000 		sts setTime+1,r25
 109 0076 A093 0000 		sts setTime+2,r26
 110 007a B093 0000 		sts setTime+3,r27
  45:main.c        ****             remainingTime=setTime;
 111               		.loc 1 45 0
 112 007e 8091 0000 		lds r24,setTime
 113 0082 9091 0000 		lds r25,setTime+1
 114 0086 A091 0000 		lds r26,setTime+2
 115 008a B091 0000 		lds r27,setTime+3
 116 008e 8093 0000 		sts remainingTime,r24
 117 0092 9093 0000 		sts remainingTime+1,r25
 118 0096 A093 0000 		sts remainingTime+2,r26
 119 009a B093 0000 		sts remainingTime+3,r27
  46:main.c        ****             TCCR1B |=(1<<CS11)|(1<<WGM12); // /1024, CTC on OCR1A
 120               		.loc 1 46 0
 121 009e 8EB5      		in r24,0x2e
 122 00a0 8A60      		ori r24,lo8(10)
 123 00a2 8EBD      		out 0x2e,r24
  47:main.c        ****             RELAY_ON;
 124               		.loc 1 47 0
 125 00a4 9598      		cbi 0x12,5
  48:main.c        ****             LED_LOW;
 126               		.loc 1 48 0
 127 00a6 C098      		cbi 0x18,0
 128 00a8 00C0      		rjmp .L4
 129               		.cfi_endproc
 130               	.LFE6:
 132               		.text
 133               	.global	__vector_5
 135               	__vector_5:
 136               	.LFB7:
  49:main.c        ****         }
  50:main.c        ****         
  51:main.c        ****     }
  52:main.c        ****     return 0;
  53:main.c        **** }     
  54:main.c        **** 
  55:main.c        **** 
  56:main.c        **** ISR (TIMER1_OVF_vect){
 137               		.loc 1 56 0
 138               		.cfi_startproc
 139 0000 1F92      		push r1
 140               	.LCFI0:
 141               		.cfi_def_cfa_offset 3
 142               		.cfi_offset 1, -2
 143 0002 0F92      		push r0
 144               	.LCFI1:
 145               		.cfi_def_cfa_offset 4
 146               		.cfi_offset 0, -3
 147 0004 0FB6      		in r0,__SREG__
 148 0006 0F92      		push r0
 149 0008 1124      		clr __zero_reg__
 150               	/* prologue: Signal */
 151               	/* frame size = 0 */
 152               	/* stack size = 3 */
 153               	.L__stack_usage = 3
 154               	/* epilogue start */
  57:main.c        **** }
 155               		.loc 1 57 0
 156 000a 0F90      		pop r0
 157 000c 0FBE      		out __SREG__,r0
 158 000e 0F90      		pop r0
 159 0010 1F90      		pop r1
 160 0012 1895      		reti
 161               		.cfi_endproc
 162               	.LFE7:
 164               	.global	__vector_4
 166               	__vector_4:
 167               	.LFB8:
  58:main.c        **** 
  59:main.c        **** ISR(TIMER1_COMPA_vect){//occurs @100Hz
 168               		.loc 1 59 0
 169               		.cfi_startproc
 170 0014 1F92      		push r1
 171               	.LCFI2:
 172               		.cfi_def_cfa_offset 3
 173               		.cfi_offset 1, -2
 174 0016 0F92      		push r0
 175               	.LCFI3:
 176               		.cfi_def_cfa_offset 4
 177               		.cfi_offset 0, -3
 178 0018 0FB6      		in r0,__SREG__
 179 001a 0F92      		push r0
 180 001c 1124      		clr __zero_reg__
 181 001e 2F93      		push r18
 182               	.LCFI4:
 183               		.cfi_def_cfa_offset 5
 184               		.cfi_offset 18, -4
 185 0020 8F93      		push r24
 186               	.LCFI5:
 187               		.cfi_def_cfa_offset 6
 188               		.cfi_offset 24, -5
 189 0022 9F93      		push r25
 190               	.LCFI6:
 191               		.cfi_def_cfa_offset 7
 192               		.cfi_offset 25, -6
 193 0024 AF93      		push r26
 194               	.LCFI7:
 195               		.cfi_def_cfa_offset 8
 196               		.cfi_offset 26, -7
 197 0026 BF93      		push r27
 198               	.LCFI8:
 199               		.cfi_def_cfa_offset 9
 200               		.cfi_offset 27, -8
 201               	/* prologue: Signal */
 202               	/* frame size = 0 */
 203               	/* stack size = 8 */
 204               	.L__stack_usage = 8
  60:main.c        ****     cnt++;
 205               		.loc 1 60 0
 206 0028 8091 0000 		lds r24,cnt
 207 002c 9091 0000 		lds r25,cnt+1
 208 0030 0196      		adiw r24,1
 209 0032 9093 0000 		sts cnt+1,r25
 210 0036 8093 0000 		sts cnt,r24
  61:main.c        ****     if(cnt>=300){//occurs every 3s
 211               		.loc 1 61 0
 212 003a 8091 0000 		lds r24,cnt
 213 003e 9091 0000 		lds r25,cnt+1
 214 0042 8C32      		cpi r24,44
 215 0044 9140      		sbci r25,1
 216 0046 00F0      		brlo .L11
  62:main.c        ****         remainingTime-=3;
 217               		.loc 1 62 0
 218 0048 8091 0000 		lds r24,remainingTime
 219 004c 9091 0000 		lds r25,remainingTime+1
 220 0050 A091 0000 		lds r26,remainingTime+2
 221 0054 B091 0000 		lds r27,remainingTime+3
 222 0058 0397      		sbiw r24,3
 223 005a A109      		sbc r26,__zero_reg__
 224 005c B109      		sbc r27,__zero_reg__
 225 005e 8093 0000 		sts remainingTime,r24
 226 0062 9093 0000 		sts remainingTime+1,r25
 227 0066 A093 0000 		sts remainingTime+2,r26
 228 006a B093 0000 		sts remainingTime+3,r27
  63:main.c        ****         if(remainingTime<=0){//stop counter and de-energize relay
 229               		.loc 1 63 0
 230 006e 8091 0000 		lds r24,remainingTime
 231 0072 9091 0000 		lds r25,remainingTime+1
 232 0076 A091 0000 		lds r26,remainingTime+2
 233 007a B091 0000 		lds r27,remainingTime+3
 234 007e 1816      		cp __zero_reg__,r24
 235 0080 1906      		cpc __zero_reg__,r25
 236 0082 1A06      		cpc __zero_reg__,r26
 237 0084 1B06      		cpc __zero_reg__,r27
 238 0086 04F0      		brlt .L12
  64:main.c        ****             LED_HIGH;
 239               		.loc 1 64 0
 240 0088 C09A      		sbi 0x18,0
  65:main.c        ****             RELAY_OFF;
 241               		.loc 1 65 0
 242 008a 9598      		cbi 0x12,5
  66:main.c        ****             TCCR1B=0;
 243               		.loc 1 66 0
 244 008c 1EBC      		out 0x2e,__zero_reg__
 245               	.L12:
  67:main.c        ****         }
  68:main.c        ****         showRemaining=1;
 246               		.loc 1 68 0
 247 008e 81E0      		ldi r24,lo8(1)
 248 0090 8093 0000 		sts showRemaining,r24
  69:main.c        ****         showValueLeft=remainingTime-multiplier;
 249               		.loc 1 69 0
 250 0094 8091 0000 		lds r24,remainingTime
 251 0098 9091 0000 		lds r25,remainingTime+1
 252 009c A091 0000 		lds r26,remainingTime+2
 253 00a0 B091 0000 		lds r27,remainingTime+3
 254 00a4 8051      		subi r24,16
 255 00a6 9E40      		sbci r25,14
 256 00a8 A109      		sbc r26,__zero_reg__
 257 00aa B109      		sbc r27,__zero_reg__
 258 00ac 8093 0000 		sts showValueLeft,r24
 259 00b0 9093 0000 		sts showValueLeft+1,r25
 260 00b4 A093 0000 		sts showValueLeft+2,r26
 261 00b8 B093 0000 		sts showValueLeft+3,r27
  70:main.c        ****         cnt=0;
 262               		.loc 1 70 0
 263 00bc 1092 0000 		sts cnt+1,__zero_reg__
 264 00c0 1092 0000 		sts cnt,__zero_reg__
 265               	.L11:
  71:main.c        ****     }
  72:main.c        ****     
  73:main.c        ****     if(showRemaining && (cnt&0x10)){
 266               		.loc 1 73 0
 267 00c4 8091 0000 		lds r24,showRemaining
 268 00c8 8823      		tst r24
 269 00ca 01F0      		breq .L10
 270               		.loc 1 73 0 is_stmt 0 discriminator 1
 271 00cc 8091 0000 		lds r24,cnt
 272 00d0 9091 0000 		lds r25,cnt+1
 273 00d4 84FF      		sbrs r24,4
 274 00d6 00C0      		rjmp .L10
  74:main.c        ****         LED_TOGGLE;
 275               		.loc 1 74 0 is_stmt 1
 276 00d8 98B3      		in r25,0x18
 277 00da 81E0      		ldi r24,lo8(1)
 278 00dc 8927      		eor r24,r25
 279 00de 88BB      		out 0x18,r24
  75:main.c        ****         showValueLeft-=multiplier/16;
 280               		.loc 1 75 0
 281 00e0 8091 0000 		lds r24,showValueLeft
 282 00e4 9091 0000 		lds r25,showValueLeft+1
 283 00e8 A091 0000 		lds r26,showValueLeft+2
 284 00ec B091 0000 		lds r27,showValueLeft+3
 285 00f0 815E      		subi r24,-31
 286 00f2 9109      		sbc r25,__zero_reg__
 287 00f4 A109      		sbc r26,__zero_reg__
 288 00f6 B109      		sbc r27,__zero_reg__
 289 00f8 8093 0000 		sts showValueLeft,r24
 290 00fc 9093 0000 		sts showValueLeft+1,r25
 291 0100 A093 0000 		sts showValueLeft+2,r26
 292 0104 B093 0000 		sts showValueLeft+3,r27
  76:main.c        ****         if(showValueLeft<=0){
 293               		.loc 1 76 0
 294 0108 8091 0000 		lds r24,showValueLeft
 295 010c 9091 0000 		lds r25,showValueLeft+1
 296 0110 A091 0000 		lds r26,showValueLeft+2
 297 0114 B091 0000 		lds r27,showValueLeft+3
 298 0118 1816      		cp __zero_reg__,r24
 299 011a 1906      		cpc __zero_reg__,r25
 300 011c 1A06      		cpc __zero_reg__,r26
 301 011e 1B06      		cpc __zero_reg__,r27
 302 0120 04F0      		brlt .L10
  77:main.c        ****             showRemaining=0;
 303               		.loc 1 77 0
 304 0122 1092 0000 		sts showRemaining,__zero_reg__
  78:main.c        ****             LED_LOW;
 305               		.loc 1 78 0
 306 0126 C098      		cbi 0x18,0
 307               	.L10:
 308               	/* epilogue start */
  79:main.c        ****         }
  80:main.c        ****     }
  81:main.c        **** }
 309               		.loc 1 81 0
 310 0128 BF91      		pop r27
 311 012a AF91      		pop r26
 312 012c 9F91      		pop r25
 313 012e 8F91      		pop r24
 314 0130 2F91      		pop r18
 315 0132 0F90      		pop r0
 316 0134 0FBE      		out __SREG__,r0
 317 0136 0F90      		pop r0
 318 0138 1F90      		pop r1
 319 013a 1895      		reti
 320               		.cfi_endproc
 321               	.LFE8:
 323               		.comm	showValueLeft,4,1
 324               		.comm	nextShowTime,2,1
 325               	.global	showRemaining
 326               		.section .bss
 329               	showRemaining:
 330 0000 00        		.zero	1
 331               		.comm	remainingTime,4,1
 332               		.comm	setTime,4,1
 333               	.global	cnt
 336               	cnt:
 337 0001 0000      		.zero	2
 338               	.global	multiplier
 339               		.section	.rodata
 342               	multiplier:
 343 0000 100E      		.word	3600
 344               		.text
 345               	.Letext0:
 346               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc9Iy0OX.s:2      *ABS*:000000000000003d __SP_L__
     /tmp/cc9Iy0OX.s:3      *ABS*:000000000000003f __SREG__
     /tmp/cc9Iy0OX.s:4      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc9Iy0OX.s:5      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc9Iy0OX.s:12     .text.startup:0000000000000000 main
                            *COM*:0000000000000004 setTime
                            *COM*:0000000000000004 remainingTime
     /tmp/cc9Iy0OX.s:135    .text:0000000000000000 __vector_5
     /tmp/cc9Iy0OX.s:166    .text:0000000000000014 __vector_4
     /tmp/cc9Iy0OX.s:336    .bss:0000000000000001 cnt
     /tmp/cc9Iy0OX.s:329    .bss:0000000000000000 showRemaining
                            *COM*:0000000000000004 showValueLeft
                            *COM*:0000000000000002 nextShowTime
     /tmp/cc9Iy0OX.s:342    .rodata:0000000000000000 multiplier

UNDEFINED SYMBOLS
__mulhi3
__do_copy_data
__do_clear_bss
