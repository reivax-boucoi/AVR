   1               		.file	"i2c.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  11               	_Z12i2c_transmith.part.0:
  12               	.LFB9:
  13               		.file 1 "i2c.cpp"
   1:i2c.cpp       **** #include "i2c.h"
   2:i2c.cpp       **** 
   3:i2c.cpp       **** unsigned char i2c_transmit(unsigned char type) {
  14               		.loc 1 3 0
  15               		.cfi_startproc
  16               	/* prologue: function */
  17               	/* frame size = 0 */
  18               	/* stack size = 0 */
  19               	.L__stack_usage = 0
  20               	.L2:
   4:i2c.cpp       ****   switch(type) {
   5:i2c.cpp       ****      case I2C_START:    // Send Start Condition
   6:i2c.cpp       ****        TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
   7:i2c.cpp       ****        break;
   8:i2c.cpp       ****      case I2C_DATA:     // Send Data
   9:i2c.cpp       ****        TWCR = (1 << TWINT) | (1 << TWEN);
  10:i2c.cpp       ****        break;
  11:i2c.cpp       ****      case I2C_STOP:     // Send Stop Condition
  12:i2c.cpp       ****        TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
  13:i2c.cpp       ****        return 0;
  14:i2c.cpp       ****   }
  15:i2c.cpp       **** 
  16:i2c.cpp       ****   // Wait for TWINT flag set in TWCR Register
  17:i2c.cpp       ****   while (!(TWCR & (1 << TWINT)));
  21               		.loc 1 17 0
  22 0000 8091 BC00 		lds r24,188
  23 0004 87FF      		sbrs r24,7
  24 0006 00C0      		rjmp .L2
  18:i2c.cpp       **** 
  19:i2c.cpp       ****   // Return TWI Status Register, mask the prescaler bits (TWPS1,TWPS0)
  20:i2c.cpp       ****   return (TWSR & 0xF8);
  25               		.loc 1 20 0
  26 0008 8091 B900 		lds r24,185
  21:i2c.cpp       **** }
  27               		.loc 1 21 0
  28 000c 887F      		andi r24,lo8(-8)
  29 000e 0895      		ret
  30               		.cfi_endproc
  31               	.LFE9:
  33               	.global	_Z12i2c_transmith
  35               	_Z12i2c_transmith:
  36               	.LFB6:
   3:i2c.cpp       ****   switch(type) {
  37               		.loc 1 3 0
  38               		.cfi_startproc
  39               	.LVL0:
  40               	/* prologue: function */
  41               	/* frame size = 0 */
  42               	/* stack size = 0 */
  43               	.L__stack_usage = 0
   4:i2c.cpp       ****      case I2C_START:    // Send Start Condition
  44               		.loc 1 4 0
  45 0010 8130      		cpi r24,lo8(1)
  46 0012 01F0      		breq .L7
  47 0014 00F0      		brlo .L8
  48 0016 8230      		cpi r24,lo8(2)
  49 0018 01F0      		breq .L9
  50 001a 00C0      		rjmp .L6
  51               	.L8:
   6:i2c.cpp       ****        break;
  52               		.loc 1 6 0
  53 001c 84EA      		ldi r24,lo8(-92)
  54               	.LVL1:
  55 001e 00C0      		rjmp .L12
  56               	.LVL2:
  57               	.L7:
   9:i2c.cpp       ****        break;
  58               		.loc 1 9 0
  59 0020 84E8      		ldi r24,lo8(-124)
  60               	.LVL3:
  61               	.L12:
  62 0022 8093 BC00 		sts 188,r24
  63               	.L6:
  64 0026 0C94 0000 		jmp _Z12i2c_transmith.part.0
  65               	.LVL4:
  66               	.L9:
  12:i2c.cpp       ****        return 0;
  67               		.loc 1 12 0
  68 002a 84E9      		ldi r24,lo8(-108)
  69               	.LVL5:
  70 002c 8093 BC00 		sts 188,r24
  71               		.loc 1 21 0
  72 0030 80E0      		ldi r24,0
  73 0032 0895      		ret
  74               		.cfi_endproc
  75               	.LFE6:
  77               	.global	_Z13i2c_writebytejjjc
  79               	_Z13i2c_writebytejjjc:
  80               	.LFB7:
  22:i2c.cpp       **** 
  23:i2c.cpp       **** 
  24:i2c.cpp       **** int i2c_writebyte(unsigned int i2c_address, unsigned int dev_id,unsigned int dev_addr,char data) {
  81               		.loc 1 24 0
  82               		.cfi_startproc
  83               	.LVL6:
  84 0034 CF92      		push r12
  85               	.LCFI0:
  86               		.cfi_def_cfa_offset 3
  87               		.cfi_offset 12, -2
  88 0036 DF92      		push r13
  89               	.LCFI1:
  90               		.cfi_def_cfa_offset 4
  91               		.cfi_offset 13, -3
  92 0038 EF92      		push r14
  93               	.LCFI2:
  94               		.cfi_def_cfa_offset 5
  95               		.cfi_offset 14, -4
  96 003a FF92      		push r15
  97               	.LCFI3:
  98               		.cfi_def_cfa_offset 6
  99               		.cfi_offset 15, -5
 100 003c 0F93      		push r16
 101               	.LCFI4:
 102               		.cfi_def_cfa_offset 7
 103               		.cfi_offset 16, -6
 104 003e 1F93      		push r17
 105               	.LCFI5:
 106               		.cfi_def_cfa_offset 8
 107               		.cfi_offset 17, -7
 108 0040 CF93      		push r28
 109               	.LCFI6:
 110               		.cfi_def_cfa_offset 9
 111               		.cfi_offset 28, -8
 112 0042 DF93      		push r29
 113               	.LCFI7:
 114               		.cfi_def_cfa_offset 10
 115               		.cfi_offset 29, -9
 116               	/* prologue: function */
 117               	/* frame size = 0 */
 118               	/* stack size = 8 */
 119               	.L__stack_usage = 8
 120 0044 F82E      		mov r15,r24
 121 0046 E92E      		mov r14,r25
 122 0048 022F      		mov r16,r18
 123               	.LVL7:
  25:i2c.cpp       ****   unsigned char n = 0;
  26:i2c.cpp       ****   unsigned char twi_status;
  27:i2c.cpp       ****   char r_val = -1;
  28:i2c.cpp       **** 
  29:i2c.cpp       **** i2c_retry:
  30:i2c.cpp       ****   if (n++ >= MAX_TRIES) return r_val;
  31:i2c.cpp       **** 
  32:i2c.cpp       ****   // Transmit Start Condition
  33:i2c.cpp       ****   twi_status=i2c_transmit(I2C_START);
  34:i2c.cpp       **** 
  35:i2c.cpp       ****   // Check the TWI Status
  36:i2c.cpp       ****   if (twi_status == TW_MT_ARB_LOST) goto i2c_retry;
  37:i2c.cpp       ****   if ((twi_status != TW_START) && (twi_status != TW_REP_START)) goto i2c_quit;
  38:i2c.cpp       **** 
  39:i2c.cpp       ****   // Send slave address (SLA_W)
  40:i2c.cpp       ****   TWDR = (dev_id & 0xF0) | ((dev_addr & 0x07) << 1) | TW_WRITE;
 124               		.loc 1 40 0
 125 004a C42F      		mov r28,r20
 126 004c C770      		andi r28,lo8(7)
 127 004e CC0F      		lsl r28
 128 0050 607F      		andi r22,lo8(-16)
 129               	.LVL8:
 130 0052 C62B      		or r28,r22
 131 0054 13E3      		ldi r17,lo8(51)
 132               	.LBB30:
 133               	.LBB31:
   6:i2c.cpp       ****        break;
 134               		.loc 1 6 0
 135 0056 84EA      		ldi r24,lo8(-92)
 136 0058 D82E      		mov r13,r24
 137               	.LVL9:
 138               	.LBE31:
 139               	.LBE30:
 140               	.LBB33:
 141               	.LBB34:
   9:i2c.cpp       ****        break;
 142               		.loc 1 9 0
 143 005a 94E8      		ldi r25,lo8(-124)
 144 005c C92E      		mov r12,r25
 145               	.LVL10:
 146               	.L14:
 147 005e 1150      		subi r17,lo8(-(-1))
 148               	.LVL11:
 149               	.LBE34:
 150               	.LBE33:
  30:i2c.cpp       **** 
 151               		.loc 1 30 0
 152 0060 01F0      		breq .L20
 153               	.LVL12:
 154               	.LBB36:
 155               	.LBB32:
   6:i2c.cpp       ****        break;
 156               		.loc 1 6 0
 157 0062 D092 BC00 		sts 188,r13
 158 0066 0E94 0000 		call _Z12i2c_transmith.part.0
 159               	.LVL13:
 160               	.LBE32:
 161               	.LBE36:
  36:i2c.cpp       ****   if ((twi_status != TW_START) && (twi_status != TW_REP_START)) goto i2c_quit;
 162               		.loc 1 36 0
 163 006a 8833      		cpi r24,lo8(56)
 164 006c 01F0      		breq .L14
  37:i2c.cpp       **** 
 165               		.loc 1 37 0
 166 006e 8830      		cpi r24,lo8(8)
 167 0070 01F0      		breq .L17
  37:i2c.cpp       **** 
 168               		.loc 1 37 0 is_stmt 0 discriminator 1
 169 0072 8031      		cpi r24,lo8(16)
 170 0074 01F0      		breq .L17
 171               	.L19:
  27:i2c.cpp       **** 
 172               		.loc 1 27 0 is_stmt 1
 173 0076 8FEF      		ldi r24,lo8(-1)
 174 0078 00C0      		rjmp .L18
 175               	.L17:
 176               		.loc 1 40 0
 177 007a C093 BB00 		sts 187,r28
 178               	.LVL14:
 179               	.LBB37:
 180               	.LBB35:
   9:i2c.cpp       ****        break;
 181               		.loc 1 9 0
 182 007e D4E8      		ldi r29,lo8(-124)
 183 0080 C092 BC00 		sts 188,r12
 184 0084 0E94 0000 		call _Z12i2c_transmith.part.0
 185               	.LVL15:
 186               	.LBE35:
 187               	.LBE37:
  41:i2c.cpp       **** 
  42:i2c.cpp       ****   // Transmit I2C Data
  43:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);
  44:i2c.cpp       **** 
  45:i2c.cpp       ****   // Check the TWSR status
  46:i2c.cpp       ****   if ((twi_status == TW_MT_SLA_NACK) || (twi_status == TW_MT_ARB_LOST)) goto i2c_retry;
 188               		.loc 1 46 0
 189 0088 8032      		cpi r24,lo8(32)
 190 008a 01F0      		breq .L14
 191               		.loc 1 46 0 is_stmt 0 discriminator 1
 192 008c 8833      		cpi r24,lo8(56)
 193 008e 01F0      		breq .L14
  47:i2c.cpp       ****   if (twi_status != TW_MT_SLA_ACK) goto i2c_quit;
 194               		.loc 1 47 0 is_stmt 1
 195 0090 8831      		cpi r24,lo8(24)
 196 0092 01F4      		brne .L19
  48:i2c.cpp       **** 
  49:i2c.cpp       ****   // Send the High 8-bit of I2C Address
  50:i2c.cpp       ****   TWDR = i2c_address >> 8;
 197               		.loc 1 50 0
 198 0094 E092 BB00 		sts 187,r14
 199               	.LVL16:
 200               	.LBB38:
 201               	.LBB39:
   9:i2c.cpp       ****        break;
 202               		.loc 1 9 0
 203 0098 D093 BC00 		sts 188,r29
 204 009c 0E94 0000 		call _Z12i2c_transmith.part.0
 205               	.LVL17:
 206               	.LBE39:
 207               	.LBE38:
  51:i2c.cpp       **** 
  52:i2c.cpp       ****   // Transmit I2C Data
  53:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);
  54:i2c.cpp       **** 
  55:i2c.cpp       ****   // Check the TWSR status
  56:i2c.cpp       ****   if (twi_status != TW_MT_DATA_ACK) goto i2c_quit;
 208               		.loc 1 56 0
 209 00a0 8832      		cpi r24,lo8(40)
 210 00a2 01F4      		brne .L19
  57:i2c.cpp       **** 
  58:i2c.cpp       ****   // Send the Low 8-bit of I2C Address
  59:i2c.cpp       ****   TWDR = i2c_address;
 211               		.loc 1 59 0
 212 00a4 F092 BB00 		sts 187,r15
 213               	.LVL18:
 214               	.LBB40:
 215               	.LBB41:
   9:i2c.cpp       ****        break;
 216               		.loc 1 9 0
 217 00a8 D093 BC00 		sts 188,r29
 218 00ac 0E94 0000 		call _Z12i2c_transmith.part.0
 219               	.LVL19:
 220               	.LBE41:
 221               	.LBE40:
  60:i2c.cpp       **** 
  61:i2c.cpp       ****   // Transmit I2C Data
  62:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);
  63:i2c.cpp       **** 
  64:i2c.cpp       ****   // Check the TWSR status
  65:i2c.cpp       ****   if (twi_status != TW_MT_DATA_ACK) goto i2c_quit;
 222               		.loc 1 65 0
 223 00b0 8832      		cpi r24,lo8(40)
 224 00b2 01F4      		brne .L19
  66:i2c.cpp       **** 
  67:i2c.cpp       ****   // Put data into data register and start transmission
  68:i2c.cpp       ****   TWDR = data;
 225               		.loc 1 68 0
 226 00b4 0093 BB00 		sts 187,r16
 227               	.LVL20:
 228               	.LBB42:
 229               	.LBB43:
   9:i2c.cpp       ****        break;
 230               		.loc 1 9 0
 231 00b8 D093 BC00 		sts 188,r29
 232 00bc 0E94 0000 		call _Z12i2c_transmith.part.0
 233               	.LVL21:
 234               	.LBE43:
 235               	.LBE42:
  69:i2c.cpp       **** 
  70:i2c.cpp       ****   // Transmit I2C Data
  71:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);
  72:i2c.cpp       **** 
  73:i2c.cpp       ****   // Check the TWSR status
  74:i2c.cpp       ****   if (twi_status != TW_MT_DATA_ACK) goto i2c_quit;
 236               		.loc 1 74 0
 237 00c0 8832      		cpi r24,lo8(40)
 238 00c2 01F4      		brne .L19
  75:i2c.cpp       **** 
  76:i2c.cpp       ****   // TWI Transmit Ok
  77:i2c.cpp       ****   r_val=1;
 239               		.loc 1 77 0
 240 00c4 81E0      		ldi r24,lo8(1)
 241               	.L18:
 242               	.LVL22:
 243               	.LBB44:
 244               	.LBB45:
  12:i2c.cpp       ****        return 0;
 245               		.loc 1 12 0
 246 00c6 94E9      		ldi r25,lo8(-108)
 247 00c8 9093 BC00 		sts 188,r25
 248               	.LVL23:
 249               	.LBE45:
 250               	.LBE44:
  78:i2c.cpp       **** 
  79:i2c.cpp       **** i2c_quit:
  80:i2c.cpp       ****   // Transmit I2C Data
  81:i2c.cpp       ****   twi_status=i2c_transmit(I2C_STOP);
  82:i2c.cpp       ****   return r_val;
 251               		.loc 1 82 0
 252 00cc 90E0      		ldi r25,0
 253 00ce 00C0      		rjmp .L15
 254               	.LVL24:
 255               	.L20:
  30:i2c.cpp       **** 
 256               		.loc 1 30 0
 257 00d0 8FEF      		ldi r24,lo8(-1)
 258 00d2 90E0      		ldi r25,0
 259               	.LVL25:
 260               	.L15:
 261               	/* epilogue start */
  83:i2c.cpp       **** }
 262               		.loc 1 83 0
 263 00d4 DF91      		pop r29
 264 00d6 CF91      		pop r28
 265 00d8 1F91      		pop r17
 266 00da 0F91      		pop r16
 267               	.LVL26:
 268 00dc FF90      		pop r15
 269 00de EF90      		pop r14
 270 00e0 DF90      		pop r13
 271 00e2 CF90      		pop r12
 272 00e4 0895      		ret
 273               		.cfi_endproc
 274               	.LFE7:
 276               	.global	_Z12i2c_readbytejjjPc
 278               	_Z12i2c_readbytejjjPc:
 279               	.LFB8:
  84:i2c.cpp       **** 
  85:i2c.cpp       **** 
  86:i2c.cpp       **** int i2c_readbyte(unsigned int i2c_address, unsigned int dev_id, unsigned int dev_addr, char *data){
 280               		.loc 1 86 0
 281               		.cfi_startproc
 282               	.LVL27:
 283 00e6 BF92      		push r11
 284               	.LCFI8:
 285               		.cfi_def_cfa_offset 3
 286               		.cfi_offset 11, -2
 287 00e8 CF92      		push r12
 288               	.LCFI9:
 289               		.cfi_def_cfa_offset 4
 290               		.cfi_offset 12, -3
 291 00ea DF92      		push r13
 292               	.LCFI10:
 293               		.cfi_def_cfa_offset 5
 294               		.cfi_offset 13, -4
 295 00ec EF92      		push r14
 296               	.LCFI11:
 297               		.cfi_def_cfa_offset 6
 298               		.cfi_offset 14, -5
 299 00ee FF92      		push r15
 300               	.LCFI12:
 301               		.cfi_def_cfa_offset 7
 302               		.cfi_offset 15, -6
 303 00f0 0F93      		push r16
 304               	.LCFI13:
 305               		.cfi_def_cfa_offset 8
 306               		.cfi_offset 16, -7
 307 00f2 1F93      		push r17
 308               	.LCFI14:
 309               		.cfi_def_cfa_offset 9
 310               		.cfi_offset 17, -8
 311 00f4 CF93      		push r28
 312               	.LCFI15:
 313               		.cfi_def_cfa_offset 10
 314               		.cfi_offset 28, -9
 315 00f6 DF93      		push r29
 316               	.LCFI16:
 317               		.cfi_def_cfa_offset 11
 318               		.cfi_offset 29, -10
 319               	/* prologue: function */
 320               	/* frame size = 0 */
 321               	/* stack size = 9 */
 322               	.L__stack_usage = 9
 323 00f8 C82E      		mov r12,r24
 324 00fa B92E      		mov r11,r25
 325 00fc 8901      		movw r16,r18
 326               	.LVL28:
  87:i2c.cpp       ****   unsigned char n = 0;
  88:i2c.cpp       ****   unsigned char twi_status;
  89:i2c.cpp       ****   char r_val = -1;
  90:i2c.cpp       **** 
  91:i2c.cpp       **** i2c_retry:
  92:i2c.cpp       ****   if (n++ >= MAX_TRIES) return r_val;
  93:i2c.cpp       **** 
  94:i2c.cpp       ****   // Transmit Start Condition
  95:i2c.cpp       ****   twi_status=i2c_transmit(I2C_START);
  96:i2c.cpp       **** 
  97:i2c.cpp       ****   // Check the TWSR status
  98:i2c.cpp       ****   if (twi_status == TW_MT_ARB_LOST) goto i2c_retry;
  99:i2c.cpp       ****   if ((twi_status != TW_START) && (twi_status != TW_REP_START)) goto i2c_quit;
 100:i2c.cpp       **** 
 101:i2c.cpp       ****   // Send slave address (SLA_W) 0xa0
 102:i2c.cpp       ****   TWDR = (dev_id & 0xF0) | ((dev_addr << 1) & 0x0E) | TW_WRITE;
 327               		.loc 1 102 0
 328 00fe C42F      		mov r28,r20
 329 0100 CC0F      		lsl r28
 330 0102 CE70      		andi r28,lo8(14)
 331 0104 607F      		andi r22,lo8(-16)
 332               	.LVL29:
 333 0106 C62B      		or r28,r22
 103:i2c.cpp       **** 
 104:i2c.cpp       ****   // Transmit I2C Data
 105:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);
 106:i2c.cpp       **** 
 107:i2c.cpp       ****   // Check the TWSR status
 108:i2c.cpp       ****   if ((twi_status == TW_MT_SLA_NACK) || (twi_status == TW_MT_ARB_LOST)) goto i2c_retry;
 109:i2c.cpp       ****   if (twi_status != TW_MT_SLA_ACK) goto i2c_quit;
 110:i2c.cpp       **** 
 111:i2c.cpp       ****   // Send the High 8-bit of I2C Address
 112:i2c.cpp       ****   TWDR = i2c_address >> 8;
 113:i2c.cpp       **** 
 114:i2c.cpp       ****   // Transmit I2C Data
 115:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);
 116:i2c.cpp       **** 
 117:i2c.cpp       ****   // Check the TWSR status
 118:i2c.cpp       ****   if (twi_status != TW_MT_DATA_ACK) goto i2c_quit;
 119:i2c.cpp       **** 
 120:i2c.cpp       ****   // Send the Low 8-bit of I2C Address
 121:i2c.cpp       ****   TWDR = i2c_address;
 122:i2c.cpp       **** 
 123:i2c.cpp       ****   // Transmit I2C Data
 124:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);
 125:i2c.cpp       **** 
 126:i2c.cpp       ****   // Check the TWSR status
 127:i2c.cpp       ****   if (twi_status != TW_MT_DATA_ACK) goto i2c_quit;  
 128:i2c.cpp       **** 
 129:i2c.cpp       ****   // Send start Condition
 130:i2c.cpp       ****   twi_status=i2c_transmit(I2C_START);
 131:i2c.cpp       **** 
 132:i2c.cpp       ****   // Check the TWSR status
 133:i2c.cpp       ****   if (twi_status == TW_MT_ARB_LOST) goto i2c_retry;
 134:i2c.cpp       ****   if ((twi_status != TW_START) && (twi_status != TW_REP_START)) goto i2c_quit;
 135:i2c.cpp       **** 
 136:i2c.cpp       ****   // Send slave address (SLA_R)
 137:i2c.cpp       ****   TWDR = (dev_id & 0xF0) | ((dev_addr << 1) & 0x0E) | TW_READ;
 334               		.loc 1 137 0
 335 0108 8C2F      		mov r24,r28
 336               	.LVL30:
 337 010a 8160      		ori r24,lo8(1)
 338 010c D82E      		mov r13,r24
 339 010e 83E3      		ldi r24,lo8(51)
 340 0110 F82E      		mov r15,r24
 341               	.LBB46:
 342               	.LBB47:
   6:i2c.cpp       ****        break;
 343               		.loc 1 6 0
 344 0112 94EA      		ldi r25,lo8(-92)
 345 0114 E92E      		mov r14,r25
 346               	.LBE47:
 347               	.LBE46:
 348               	.LBB49:
 349               	.LBB50:
   9:i2c.cpp       ****        break;
 350               		.loc 1 9 0
 351 0116 D4E8      		ldi r29,lo8(-124)
 352               	.LVL31:
 353               	.L37:
 354 0118 FA94      		dec r15
 355               	.LVL32:
 356               	.LBE50:
 357               	.LBE49:
  92:i2c.cpp       **** 
 358               		.loc 1 92 0
 359 011a FF20      		tst r15
 360 011c 01F4      		brne .+2
 361 011e 00C0      		rjmp .L44
 362               	.LVL33:
 363               	.LBB52:
 364               	.LBB48:
   6:i2c.cpp       ****        break;
 365               		.loc 1 6 0
 366 0120 E092 BC00 		sts 188,r14
 367 0124 0E94 0000 		call _Z12i2c_transmith.part.0
 368               	.LVL34:
 369               	.LBE48:
 370               	.LBE52:
  98:i2c.cpp       ****   if ((twi_status != TW_START) && (twi_status != TW_REP_START)) goto i2c_quit;
 371               		.loc 1 98 0
 372 0128 8833      		cpi r24,lo8(56)
 373 012a 01F0      		breq .L37
  99:i2c.cpp       **** 
 374               		.loc 1 99 0
 375 012c 8830      		cpi r24,lo8(8)
 376 012e 01F0      		breq .L40
  99:i2c.cpp       **** 
 377               		.loc 1 99 0 is_stmt 0 discriminator 1
 378 0130 8031      		cpi r24,lo8(16)
 379 0132 01F0      		breq .L40
 380               	.L42:
  89:i2c.cpp       **** 
 381               		.loc 1 89 0 is_stmt 1
 382 0134 8FEF      		ldi r24,lo8(-1)
 383 0136 00C0      		rjmp .L41
 384               	.L40:
 102:i2c.cpp       **** 
 385               		.loc 1 102 0
 386 0138 C093 BB00 		sts 187,r28
 387               	.LVL35:
 388               	.LBB53:
 389               	.LBB51:
   9:i2c.cpp       ****        break;
 390               		.loc 1 9 0
 391 013c D093 BC00 		sts 188,r29
 392 0140 0E94 0000 		call _Z12i2c_transmith.part.0
 393               	.LVL36:
 394               	.LBE51:
 395               	.LBE53:
 108:i2c.cpp       ****   if (twi_status != TW_MT_SLA_ACK) goto i2c_quit;
 396               		.loc 1 108 0
 397 0144 8032      		cpi r24,lo8(32)
 398 0146 01F0      		breq .L37
 108:i2c.cpp       ****   if (twi_status != TW_MT_SLA_ACK) goto i2c_quit;
 399               		.loc 1 108 0 is_stmt 0 discriminator 1
 400 0148 8833      		cpi r24,lo8(56)
 401 014a 01F0      		breq .L37
 109:i2c.cpp       **** 
 402               		.loc 1 109 0 is_stmt 1
 403 014c 8831      		cpi r24,lo8(24)
 404 014e 01F4      		brne .L42
 112:i2c.cpp       **** 
 405               		.loc 1 112 0
 406 0150 B092 BB00 		sts 187,r11
 407               	.LVL37:
 408               	.LBB54:
 409               	.LBB55:
   9:i2c.cpp       ****        break;
 410               		.loc 1 9 0
 411 0154 D093 BC00 		sts 188,r29
 412 0158 0E94 0000 		call _Z12i2c_transmith.part.0
 413               	.LVL38:
 414               	.LBE55:
 415               	.LBE54:
 118:i2c.cpp       **** 
 416               		.loc 1 118 0
 417 015c 8832      		cpi r24,lo8(40)
 418 015e 01F4      		brne .L42
 121:i2c.cpp       **** 
 419               		.loc 1 121 0
 420 0160 C092 BB00 		sts 187,r12
 421               	.LVL39:
 422               	.LBB56:
 423               	.LBB57:
   9:i2c.cpp       ****        break;
 424               		.loc 1 9 0
 425 0164 D093 BC00 		sts 188,r29
 426 0168 0E94 0000 		call _Z12i2c_transmith.part.0
 427               	.LVL40:
 428               	.LBE57:
 429               	.LBE56:
 127:i2c.cpp       **** 
 430               		.loc 1 127 0
 431 016c 8832      		cpi r24,lo8(40)
 432 016e 01F4      		brne .L42
 433               	.LVL41:
 434               	.LBB58:
 435               	.LBB59:
   6:i2c.cpp       ****        break;
 436               		.loc 1 6 0
 437 0170 E092 BC00 		sts 188,r14
 438 0174 0E94 0000 		call _Z12i2c_transmith.part.0
 439               	.LVL42:
 440               	.LBE59:
 441               	.LBE58:
 133:i2c.cpp       ****   if ((twi_status != TW_START) && (twi_status != TW_REP_START)) goto i2c_quit;
 442               		.loc 1 133 0
 443 0178 8833      		cpi r24,lo8(56)
 444 017a 01F0      		breq .L37
 134:i2c.cpp       **** 
 445               		.loc 1 134 0
 446 017c 8830      		cpi r24,lo8(8)
 447 017e 01F0      		breq .L43
 134:i2c.cpp       **** 
 448               		.loc 1 134 0 is_stmt 0 discriminator 1
 449 0180 8031      		cpi r24,lo8(16)
 450 0182 01F4      		brne .L42
 451               	.L43:
 452               		.loc 1 137 0 is_stmt 1
 453 0184 D092 BB00 		sts 187,r13
 454               	.LVL43:
 455               	.LBB60:
 456               	.LBB61:
   9:i2c.cpp       ****        break;
 457               		.loc 1 9 0
 458 0188 D093 BC00 		sts 188,r29
 459 018c 0E94 0000 		call _Z12i2c_transmith.part.0
 460               	.LVL44:
 461               	.LBE61:
 462               	.LBE60:
 138:i2c.cpp       **** 
 139:i2c.cpp       ****   // Transmit I2C Data
 140:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);  
 141:i2c.cpp       **** 
 142:i2c.cpp       ****   // Check the TWSR status
 143:i2c.cpp       ****   if ((twi_status == TW_MR_SLA_NACK) || (twi_status == TW_MR_ARB_LOST)) goto i2c_retry;
 463               		.loc 1 143 0
 464 0190 8834      		cpi r24,lo8(72)
 465 0192 01F0      		breq .L37
 466               		.loc 1 143 0 is_stmt 0 discriminator 1
 467 0194 8833      		cpi r24,lo8(56)
 468 0196 01F4      		brne .+2
 469 0198 00C0      		rjmp .L37
 144:i2c.cpp       ****   if (twi_status != TW_MR_SLA_ACK) goto i2c_quit;
 470               		.loc 1 144 0 is_stmt 1
 471 019a 8034      		cpi r24,lo8(64)
 472 019c 01F4      		brne .L42
 473               	.LVL45:
 474               	.LBB62:
 475               	.LBB63:
   9:i2c.cpp       ****        break;
 476               		.loc 1 9 0
 477 019e 84E8      		ldi r24,lo8(-124)
 478 01a0 8093 BC00 		sts 188,r24
 479 01a4 0E94 0000 		call _Z12i2c_transmith.part.0
 480               	.LVL46:
 481               	.LBE63:
 482               	.LBE62:
 145:i2c.cpp       **** 
 146:i2c.cpp       ****   // Read I2C Data
 147:i2c.cpp       ****   twi_status=i2c_transmit(I2C_DATA);
 148:i2c.cpp       ****   if (twi_status != TW_MR_DATA_NACK) goto i2c_quit;
 483               		.loc 1 148 0
 484 01a8 8835      		cpi r24,lo8(88)
 485 01aa 01F4      		brne .L42
 149:i2c.cpp       **** 
 150:i2c.cpp       ****   // Get the Data
 151:i2c.cpp       ****   *data=TWDR;
 486               		.loc 1 151 0
 487 01ac 8091 BB00 		lds r24,187
 488 01b0 F801      		movw r30,r16
 489 01b2 8083      		st Z,r24
 490               	.LVL47:
 152:i2c.cpp       ****   r_val=1;
 491               		.loc 1 152 0
 492 01b4 81E0      		ldi r24,lo8(1)
 493               	.LVL48:
 494               	.L41:
 495               	.LBB64:
 496               	.LBB65:
  12:i2c.cpp       ****        return 0;
 497               		.loc 1 12 0
 498 01b6 94E9      		ldi r25,lo8(-108)
 499 01b8 9093 BC00 		sts 188,r25
 500               	.LVL49:
 501               	.LBE65:
 502               	.LBE64:
 153:i2c.cpp       **** 
 154:i2c.cpp       **** i2c_quit:
 155:i2c.cpp       ****   // Send Stop Condition
 156:i2c.cpp       ****   twi_status=i2c_transmit(I2C_STOP);
 157:i2c.cpp       ****   return r_val;
 503               		.loc 1 157 0
 504 01bc 90E0      		ldi r25,0
 505 01be 00C0      		rjmp .L38
 506               	.LVL50:
 507               	.L44:
  92:i2c.cpp       **** 
 508               		.loc 1 92 0
 509 01c0 8FEF      		ldi r24,lo8(-1)
 510 01c2 90E0      		ldi r25,0
 511               	.LVL51:
 512               	.L38:
 513               	/* epilogue start */
 158:i2c.cpp       **** }
 514               		.loc 1 158 0
 515 01c4 DF91      		pop r29
 516 01c6 CF91      		pop r28
 517 01c8 1F91      		pop r17
 518 01ca 0F91      		pop r16
 519               	.LVL52:
 520 01cc FF90      		pop r15
 521 01ce EF90      		pop r14
 522 01d0 DF90      		pop r13
 523 01d2 CF90      		pop r12
 524 01d4 BF90      		pop r11
 525 01d6 0895      		ret
 526               		.cfi_endproc
 527               	.LFE8:
 529               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c.cpp
     /tmp/ccZ370j5.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccZ370j5.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccZ370j5.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccZ370j5.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccZ370j5.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccZ370j5.s:11     .text:0000000000000000 _Z12i2c_transmith.part.0
     /tmp/ccZ370j5.s:35     .text:0000000000000010 _Z12i2c_transmith
     /tmp/ccZ370j5.s:79     .text:0000000000000034 _Z13i2c_writebytejjjc
     /tmp/ccZ370j5.s:278    .text:00000000000000e6 _Z12i2c_readbytejjjPc

NO UNDEFINED SYMBOLS
